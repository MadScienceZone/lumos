MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ; vim:set syntax=pic ts=8:
                      00002 ;
                      00003                 LIST N=86
                      00004 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00005 ;@@                                                                         @@
                      00006 ;@@  @@@   @   @  @@@@@  @@@@@                QUIZ SHOW HARDWARE CONTROLLER @@
                      00007 ;@@ @   @  @   @    @        @                FIRMWARE VERSION 4.0          @@ 
                      00008 ;@@ @   @  @   @    @       @                                               @@
                      00009 ;@@ @   @  @   @    @      @                  FOR HARDWARE REVISION 4.0     @@
                      00010 ;@@ @ @ @  @   @    @     @                   QSCC - QUIZ SHOW CONTESTANT   @@
                      00011 ;@@ @  @@  @   @    @    @                    QSRC - QUIZ SHOW REMOTE       @@
                      00012 ;@@ @@@@@   @@@   @@@@@  @@@@@                                              @@
                      00013 ;@@                                                                         @@
                      00014 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00015 ;
                      00016 ; Based on Lumos controller firmware 3.0, PWD-2 firmware (particularly 
                      00017 ; readerboard controls), and previous Quizshow hardware designs.  All of the
                      00018 ; above are copyright (c) Steven L. Willoughby, All Rights Reserved.
                      00019 ;
                      00020 ; ************                                                           /\
                      00021 ; * WARNING! *    EXPERIMENTAL DESIGN FOR EDUCATIONAL PURPOSES          /  \
                      00022 ; * WARNING! *                USE AT YOUR OWN RISK!                    / !  \
                      00023 ; ************                                                        /______\
                      00024 ; 
                      00025 ; PLEASE READ AND BE SURE YOU UNDERSTAND THE FOLLOWING SAFETY WARNINGS:
                      00026 ;
                      00027 ; THIS FIRMWARE AND THE ACCOMPANYING HARDWARE AND CONTROLLING SOFTWARE ARE
                      00028 ; EXPERIMENTAL "HOBBYIST" DESIGNS AND ARE NOT INTENDED FOR GENERAL CONSUMER USE
                      00029 ; OR FOR ANY APPLICATION WHERE THERE IS ANY POSSIBILITY OF RISK OF INJURY,
                      00030 ; PROPERTY DAMAGE, OR ANY OTHER SITUATION WHERE ANY FAILURE OF THE FIRMWARE,
                      00031 ; SOFTWARE AND/OR HARDWARE COULD RESULT IN HARM TO ANYONE OR ANYTHING.  
                      00032 ;
                      00033 ; THIS FIRMWARE, SOFTWARE, AND/OR HARDWARE ARE NOT INTENDED NOR RECOMMENDED 
                      00034 ; FOR APPLICATIONS INVOLVING LIFE SUPPORT OR SAFETY-CRITICAL SYSTEMS, RUNNING 
                      00035 ; FIREWORKS/PYROTECHNIC DISPLAYS, ETC.  
                      00036 ;
                      00037 ; BY OBTAINING AND USING THIS FIRMWARE, AND/OR ACCOMPANYING HARDWARE AND/OR 
                      00038 ; CONTROLLING SOFTWARE, YOU AGREE TO THESE CONDITIONS AND THAT TO THE FULLEST 
                      00039 ; EXTENT OF APPLICABLE LAW, THE ABOVE-LISTED ITEMS AND ALL ACCOMPANYING 
                      00040 ; DOCUMENTATION AND OTHER MATERIALS ARE PROVIDED TO YOU AS-IS, WITHOUT WARRANTY 
                      00041 ; OF ANY KIND, EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
                      00042 ; WARRANTIES OF MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE.  YOU 
                      00043 ; FURTHER AGREE TO DEFEND, INDEMNIFY, AND HOLD BLAMELESS, THE AUTHOR, STEVEN 
                      00044 ; L. Willoughby AND ANY OF HIS AGENTS AND ASSOCIATES ASSISTING WITH THIS WORK, 
                      00045 ; FROM ANY DAMAGES DIRECT OR INCIDENTAL ARISING FROM THE USE OF, OR INABILITY 
                      00046 ; TO USE, THE ABOVE-LISTED PRODUCTS.
                      00047 ; 
                      00048 ;
                      00049 ; Copyright (c) 2014 by Steven L. Willoughby, Aloha, Oregon, USA.  
                      00050 ; All Rights Reserved.  Quiz Show portions are unreleased trade secret
                      00051 ; information.
                      00052 ;
                      00053 ; Based on previous works by the same author, some of which are released
                      00054 ; under the Open Software License, version 3.0, which portions are available
                      00055 ; separately for free download.
                      00056 ;
                      00057 ; -*- -*- -* -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*-
                      00058 ;
                      00059 ; Main implementation module.
                      00060 ;
                      00061 #include "lumos_config.inc"
                      00001 ; vim:set syntax=pic ts=8:
                      00002 ;
                      00003                 LIST N=86
                      00004 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00005 ;@@                                                                         @@
                      00006 ;@@ @      @   @  @   @   @@@    @@@          LUMOS: LIGHT ORCHESTRATION    @@
                      00007 ;@@ @      @   @  @@ @@  @   @  @   @         SYSTEM FIRMWARE VERSION 3.0   @@
                      00008 ;@@ @      @   @  @ @ @  @   @  @                                           @@
                      00009 ;@@ @      @   @  @   @  @   @   @@@   @@@@@  FOR 24- AND 48-CHANNEL AC/DC  @@
                      00010 ;@@ @      @   @  @   @  @   @      @         LUMOS CONTROLLER UNITS        @@
                      00011 ;@@ @      @   @  @   @  @   @  @   @         BASED ON THE PIC18F4685 CHIP  @@
                      00012 ;@@ @@@@@   @@@   @   @   @@@    @@@                                        @@
                      00013 ;@@                                                                         @@
                      00014 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00015 ;
                      00016 ; Copyright (c) 2012, 2014 by Steven L. Willoughby, Aloha, Oregon, USA.  
                      00017 ; All Rights Reserved.  
                      00018 ; Released under the terms and conditions of the Open Software
                      00019 ; License, version 3.0.
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00020 ;
                      00021 ; Portions based on earlier code copyright (c) 2004, 2005, 2006, 2007
                      00022 ; Steven L. Willoughby, Aloha, Oregon, USA.  All Rights Reserved.
                      00023 ;
                      00024 ; -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*-
                      00025 ;
                      00026 ; Configuration options.  Set these as desired and then re-assemble the
                      00027 ; code to produce the desired version of the ROM.
                      00028 ;
                      00029 ; 
                      00030 
                      00031 ;==============================================================================
                      00032 ; CONFIGURATION OPTIONS
                      00033 ;==============================================================================
                      00034 #ifndef LUMOS_CONFIG_INC
                      00035 #define LUMOS_CONFIG_INC
                      00036 #define LUMOS_CHIP_MASTER       0x41    ; 48-channel master CPU
                      00037 #define LUMOS_CHIP_SLAVE        0x42    ; 48-channel slave CPU
                      00038 #define LUMOS_CHIP_STANDALONE   0x43    ; 24-channel CPU
                      00039 #define LUMOS_CHIP_4CHANNEL     0x44    ; 4-channel CPU
                      00040 #define LUMOS_CHIP_QSCC         0x45    ; Private code; custom hardware
                      00041 #define LUMOS_CHIP_QSRC         0x46    ; Private code; custom hardware
                      00042 ;
                      00043 ; Un-comment one of these to select board type for this ROM image:
                      00044 ;
                      00045 ;#define LUMOS_CHIP_TYPE                LUMOS_CHIP_MASTER
                      00046 ;#define LUMOS_CHIP_TYPE                LUMOS_CHIP_SLAVE
                      00047 ;#define LUMOS_CHIP_TYPE                LUMOS_CHIP_STANDALONE
                      00048 ;#define LUMOS_CHIP_TYPE                LUMOS_CHIP_4CHANNEL
                      00049 ;#define LUMOS_CHIP_TYPE                LUMOS_CHIP_QSCC
                      00050 #define LUMOS_CHIP_TYPE         LUMOS_CHIP_QSRC
                      00051 ;
                      00052 ;
                      00053 ;
                      00054 #define LUMOS_ZC                0x55
                      00055 #define LUMOS_INTERNAL          0x58
                      00056 
                      00057  IF LUMOS_CHIP_TYPE == LUMOS_CHIP_MASTER || LUMOS_CHIP_TYPE == LUMOS_CHIP_SLAVE
                      00058   #define LUMOS_SLICE_TIMER LUMOS_ZC
                      00059  ELSE
                      00060   IF LUMOS_CHIP_TYPE == LUMOS_CHIP_STANDALONE || LUMOS_CHIP_TYPE == LUMOS_CHIP_4CHANNEL || LUMOS_CHIP_TY
                            PE == LUMOS_CHIP_QSCC || LUMOS_CHIP_TYPE == LUMOS_CHIP_QSRC
                      00061    #define LUMOS_SLICE_TIMER LUMOS_INTERNAL
                      00062   ELSE
                      00063    ERROR "LUMOS_CHIP_TYPE must be set to MASTER, SLAVE, 4CHANNEL, QSCC, QSRC, or STANDALONE"
                      00064   ENDIF
                      00065  ENDIF
                      00066  
                      00067  IF LUMOS_SLICE_TIMER != LUMOS_ZC && LUMOS_SLICE_TIMER != LUMOS_INTERNAL
                      00068   ERROR "LUMOS_SLICE_TIMER must be set to ZC or INTERNAL"
                      00069  ENDIF
                      00070 
                      00071 
                      00072  IF LUMOS_CHIP_TYPE == LUMOS_CHIP_MASTER
                      00073   #define ROLE_MASTER       (1)
                      00074   #define ROLE_SLAVE        (0)
                      00075   #define ROLE_STANDALONE   (0)
                      00076   #define NUM_CHANNELS      (.48)
                      00077   #define QSCC_PORT         (0)
                      00078  ELSE
                      00079   IF LUMOS_CHIP_TYPE == LUMOS_CHIP_SLAVE
                      00080    #define ROLE_MASTER      (0)
                      00081    #define ROLE_SLAVE       (1)
                      00082    #define ROLE_STANDALONE  (0)
                      00083    #define NUM_CHANNELS     (.48)
                      00084    #define QSCC_PORT        (0)
                      00085   ELSE
                      00086    IF LUMOS_CHIP_TYPE == LUMOS_CHIP_STANDALONE
                      00087     #define ROLE_MASTER     (0)
                      00088     #define ROLE_SLAVE      (0)
                      00089     #define ROLE_STANDALONE (1)
                      00090     #define NUM_CHANNELS    (.24)
                      00091     #define QSCC_PORT       (0)
                      00092    ELSE
                      00093     IF LUMOS_CHIP_TYPE == LUMOS_CHIP_4CHANNEL
                      00094      #define ROLE_MASTER     (0)
                      00095      #define ROLE_SLAVE      (0)
                      00096      #define ROLE_STANDALONE (1)
                      00097      #define NUM_CHANNELS    (.4)
                      00098      #define QSCC_PORT       (0)
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00099     ELSE
                      00100      IF LUMOS_CHIP_TYPE == LUMOS_CHIP_QSCC
                      00101       #define ROLE_MASTER     (0)
                      00102       #define ROLE_SLAVE      (0)
                      00103       #define ROLE_STANDALONE (1)
                      00104       #define NUM_CHANNELS    (.14)
                      00105       #define QSCC_PORT       (1)
                      00106      ELSE
                      00107       IF LUMOS_CHIP_TYPE == LUMOS_CHIP_QSRC
                      00108        #define ROLE_MASTER     (0)
                      00109        #define ROLE_SLAVE      (0)
                      00110        #define ROLE_STANDALONE (1)
                      00111        #define NUM_CHANNELS    (.20)
                      00112        #define QSCC_PORT       (1)
                      00113       ELSE
                      00114        ERROR "Invalid LUMOS_CHIP_TYPE"
                      00115       ENDIF
                      00116      ENDIF
                      00117     ENDIF
                      00118    ENDIF
                      00119   ENDIF
                      00120  ENDIF
                      00121 
                      00122 #define LUMOS_ARCH_4685  (0x4685)
                      00123 #define LUMOS_ARCH_14K50 (0x1450)
                      00124 
                      00125  IF LUMOS_CHIP_TYPE == LUMOS_CHIP_MASTER || LUMOS_CHIP_TYPE == LUMOS_CHIP_SLAVE || LUMOS_CHIP_TYPE == LU
                            MOS_CHIP_STANDALONE || LUMOS_CHIP_TYPE == LUMOS_CHIP_QSCC || LUMOS_CHIP_TYPE == LUMOS_CHIP_QSRC
                      00126   #define LUMOS_ARCH LUMOS_ARCH_4685
                      00127   PROCESSOR 18F4685
                      00128   #include <p18f4685.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Feb 01 2016
                      00005 ;  MPASM PIC18F4685 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2016 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      05131         LIST
                      00129  ELSE
                      00130   IF LUMOS_CHIP_TYPE == LUMOS_CHIP_4CHANNEL
                      00131    #define LUMOS_ARCH LUMOS_ARCH_14K50
                      00132    PROCESSOR 18F14K50
                      00133    #include <p18f14k50.inc>
                      00134   ELSE
                      00135    ERROR "Invalid LUMOS_CHIP_TYPE"
                      00136   ENDIF
                      00137  ENDIF
                      00138 
                      00139 ; set DMX_ENABLED to 1 to include the experimental DMX-handling code.
                      00140 #define DMX_ENABLED 0
                      00141 ;
                      00142 ; The following public symbols can be used after this file is
                      00143 ; included (and this file should be included everywhere before
                      00144 ; anything else is included, and in lieu of PROCESSOR directives
                      00145 ; or #includes which bring in processor-specific bits--this file
                      00146 ; will do that for you):
                      00147 ;
                      00148 ; LUMOS_CHIP_TYPE:  Will be one of the following, to show what the intent
                      00149 ;                   of the target chip will be and what its particular 
                      00150 ;                   I/O pin assignments are, role in the overall circuit, etc.
                      00151 ;                   (use the ROLE_* values where possible, though, in your logic)
                      00152 ;
                      00153 ;       LUMOS_CHIP_MASTER       - 48-channel (2-CPU) controller, master CPU
                      00154 ;       LUMOS_CHIP_SLAVE        - 48-channel (2-CPU) controller, slave CPU
                      00155 ;       LUMOS_CHIP_STANDALONE   - 24-channel (1-CPU) controller, sole CPU
                      00156 ;       LUMOS_CHIP_4CHANNEL     - 4-channel  (1-CPU) controller, sole CPU
                      00157 ;       LUMOS_CHIP_QSCC         - private configuration for custom hardware
                      00158 ;       LUMOS_CHIP_QSRC         - private configuration for custom hardware
                      00159 ;
                      00160 ; LUMOS_SLICE_TIMER: Will be one of the following, to specify where the PWM
                      00161 ;                   slice timer sync pulse is coming from:
                      00162 ;
                      00163 ;       LUMOS_ZC        - Hardware zero-crossing detector to PIC interrupt pin
                      00164 ;       LUMOS_INTERNAL  - Internal timing system (using PIC timer module)
                      00165 ;
                      00166 ; LUMOS_ARCH:       Will be one of the following, to show what PIC device
                      00167 ;                   is targeted, strictly to determine chip-specific details,
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00168 ;                   not how Lumos is using it.
                      00169 ;
                      00170 ;       "14K50"         - The PIC18F14K50
                      00171 ;       "4685"          - The PIC18F4685
                      00172 ;
                      00173 ; ROLE_MASTER           - (bool) true if this chip is the master in master/slave arrangement
                      00174 ; ROLE_SLAVE            - (bool) true if this chip is the slave in master/slave arrangement
                      00175 ; ROLE_STANDALONE       - (bool) true if this is the only chip, must run entire board function
                      00176 ; NUM_CHANNELS          - (int) number of output SSR channels
                      00177 #endif
                      00062 #include "lumos_set_ssr.inc"
                      00001 ; vim:set syntax=pic ts=8:
                      00002 ;
                      00003                 LIST N=86
                      00004 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00005 ;@@                                                                         @@
                      00006 ;@@ @      @   @  @   @   @@@    @@@          LUMOS: LIGHT ORCHESTRATION    @@
                      00007 ;@@ @      @   @  @@ @@  @   @  @   @         SYSTEM FIRMWARE VERSION 3.0   @@
                      00008 ;@@ @      @   @  @ @ @  @   @  @                                           @@
                      00009 ;@@ @      @   @  @   @  @   @   @@@   @@@@@  FOR 24- AND 48-CHANNEL AC/DC  @@
                      00010 ;@@ @      @   @  @   @  @   @      @         LUMOS CONTROLLER UNITS        @@
                      00011 ;@@ @      @   @  @   @  @   @  @   @         BASED ON THE PIC18F4685 CHIP  @@
                      00012 ;@@ @@@@@   @@@   @   @   @@@    @@@                                        @@
                      00013 ;@@                                                                         @@
                      00014 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00015 ;
                      00016 ; Copyright (c) 2012, 2014 by Steven L. Willoughby, Aloha, Oregon, USA.  
                      00017 ; All Rights Reserved.  
                      00018 ; Released under the terms and conditions of the Open Software
                      00019 ; License, version 3.0.
                      00020 ;
                      00021 ; Portions based on earlier code copyright (c) 2004, 2005, 2006, 2007
                      00022 ; Steven L. Willoughby, Aloha, Oregon, USA.  All Rights Reserved.
                      00023 ;
                      00024 ; -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*-
                      00025 ;
                      00026 #ifndef LUMOS_SET_SSR_INC
                      00027 #define LUMOS_SET_SSR_INC
                      00028 
                      00029  IF LUMOS_ARCH == LUMOS_ARCH_4685
  00000400            00030 SSR_DATA_BANK   EQU     0x400
  00000500            00031 MAIN_DATA       EQU     0x500
  000000C8            00032 YY_BUF_LEN      EQU     .200
                      00033  ELSE
                      00034   IF LUMOS_ARCH == LUMOS_ARCH_14K50
                      00035 SSR_DATA_BANK   EQU     0x060
                      00036 MAIN_DATA       EQU     0x088
                      00037 YY_BUF_LEN      EQU     .90 
                      00038   ELSE
                      00039    ERROR "Invalid architecture switch for SSR_DATA_BANK"
                      00040   ENDIF
                      00041  ENDIF
                      00042 
                      00043 ;
                      00044 ; SSR_FLAGS words for each output show state information about those
                      00045 ; channels.
                      00046 ;
  00000007            00047 FADE_UP         EQU     7       ; 1-------  This channel is fading up
  00000006            00048 FADE_DOWN       EQU     6       ; -1------  This channel is fading down
  00000005            00049 FADE_CYCLE      EQU     5       ; --1-----  This channel is fading up<-->down
  00000004            00050 MAX_OFF_TIME    EQU     4       ; ---1----  Use maximum off-time in cycle
  00000080            00051 BIT_FADE_UP     EQU     0x80
  00000040            00052 BIT_FADE_DOWN   EQU     0x40
  00000020            00053 BIT_FADE_CYCLE  EQU     0x20
  00000010            00054 BIT_MAX_OFF_TIME EQU    0x10
                      00055 
                      00056 SET_SSR_VALUE MACRO IDX, LEVEL
                      00057         BANKSEL SSR_DATA_BANK
                      00058          MOVLW  LEVEL
                      00059          MOVWF  SSR_00_VALUE+IDX, BANKED
                      00060          CLRF   SSR_00_STEP+IDX, BANKED
                      00061          CLRF   SSR_00_SPEED+IDX, BANKED
                      00062          CLRF   SSR_00_COUNTER+IDX, BANKED
                      00063          CLRF   SSR_00_FLAGS+IDX, BANKED
                      00064         ENDM
                      00065 
                      00066 SET_SSR_PATTERN MACRO IDX, LEVEL, STEP, SPEED, FLAGS
                      00067         BANKSEL SSR_DATA_BANK
                      00068          MOVLW  LEVEL
                      00069          MOVWF  SSR_00_VALUE+IDX, BANKED
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00070          MOVLW  STEP
                      00071          MOVWF  SSR_00_STEP+IDX, BANKED
                      00072          MOVLW  SPEED
                      00073          MOVWF  SSR_00_SPEED+IDX, BANKED
                      00074          MOVWF  SSR_00_COUNTER+IDX, BANKED
                      00075          MOVLW  FLAGS
                      00076          MOVWF  SSR_00_FLAGS+IDX, BANKED
                      00077         ENDM
                      00078 
                      00079 SET_SSR_NORMAL_MODE MACRO IDX
                      00080          SET_SSR_PATTERN IDX, 0, 1, 3, BIT_FADE_UP|BIT_FADE_CYCLE
                      00081         ENDM
                      00082 
                      00083 SET_SSR_DMX_MODE MACRO IDX
                      00084          SET_SSR_PATTERN IDX, 0, 1, 1, BIT_FADE_UP|BIT_FADE_CYCLE
                      00085         ENDM
                      00086 
                      00087 SET_SSR_RAPID_FLASH MACRO IDX
                      00088          SET_SSR_PATTERN IDX, 255, 255, 30, BIT_FADE_DOWN|BIT_FADE_CYCLE
                      00089         ENDM
                      00090 
                      00091 SET_SSR_BLINK_FADE MACRO IDX
                      00092          SET_SSR_PATTERN IDX, 255,   2,  1, BIT_FADE_DOWN
                      00093         ENDM
                      00094 
                      00095 SET_SSR_SLOW_FLASH MACRO IDX
                      00096          SET_SSR_PATTERN IDX, 255, 255, 30, BIT_FADE_DOWN|BIT_FADE_CYCLE|BIT_MAX_OFF_TIME
                      00097         ENDM
                      00098 
                      00099 SET_SSR_RAPID_FADE MACRO IDX
                      00100          SET_SSR_PATTERN IDX, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
                      00101         ENDM
                      00102 
                      00103 SET_SSR_SLOW_FADE MACRO IDX
                      00104          SET_SSR_PATTERN IDX, 0, 1, 1, BIT_FADE_UP|BIT_FADE_CYCLE
                      00105         ENDM
                      00106 
                      00107 SET_SSR_STEADY MACRO IDX
                      00108          SET_SSR_VALUE IDX, 255
                      00109         ENDM
                      00110 
                      00111 SET_SSR_OFF MACRO IDX
                      00112          SET_SSR_VALUE IDX, 0
                      00113         ENDM
                      00114 #endif
                      00063 #include "lumos_ssr_state.inc"
                      00001 ; vim:set syntax=pic ts=8:
                      00002 ;
                      00003 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00004 ;@@                                                                         @@
                      00005 ;@@ @      @   @  @   @   @@@    @@@          LUMOS: LIGHT ORCHESTRATION    @@
                      00006 ;@@ @      @   @  @@ @@  @   @  @   @         SYSTEM FIRMWARE VERSION 3.0   @@
                      00007 ;@@ @      @   @  @ @ @  @   @  @                                           @@
                      00008 ;@@ @      @   @  @   @  @   @   @@@   @@@@@  FOR 4-, 24-, AND 48-CH AC/DC  @@
                      00009 ;@@ @      @   @  @   @  @   @      @         LUMOS CONTROLLER UNITS        @@
                      00010 ;@@ @      @   @  @   @  @   @  @   @         BASED ON THE PIC18F4685 AND   @@
                      00011 ;@@ @@@@@   @@@   @   @   @@@    @@@          PIC18F14K50 CHIPS             @@
                      00012 ;@@                                                                         @@
                      00013 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00014 ;
                      00015 ; Copyright (c) 2015 by Steven L. Willoughby, Aloha, Oregon, USA.  All Rights
                      00016 ; Reserved.  Released under the terms and conditions of the Open Software
                      00017 ; License, version 3.0.
                      00018 ;
                      00019 ; Portions based on earlier code copyright (c) 2004, 2005, 2006, 2007
                      00020 ; Steven L. Willoughby, Aloha, Oregon, USA.  All Rights Reserved.
                      00021 ;
                      00022 ; -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*-
                      00023 ;
                      00024 ; SSR state register bits
                      00025 ;
                      00026 ;==============================================================================
                      00027 ; SSR STATE BITS      
                      00028 ;==============================================================================
                      00029 ;                     ___7______6______5______4______3______2______1______0__
                      00030 ; SSR_STATE          |      |      |SLICE |PRIV_ |SLEEP |DRAIN |PRE_  |TEST_ |
                      00031 ;                    |INCYC |PRECYC| _UPD | MODE |_MODE |_TR   |PRIV  |MODE  |
                      00032 ;                    |______|______|______|______|______|______|______|______|
                      00033 ; SSR_STATE2         |TEST_ |TEST_ |TEST_ |ALL_  |PRIV_ |INHIBI|MSB_  |LITER |
                      00034 ;                    |PAUSE |UPD   |BUTTON|OFF   |FORBID|T_OUTP|ESC   |AL_ESC|
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00035 ;                    |______|______|______|______|______|UT____|______|______|
                      00036 ;
  00000007            00037 INCYC           EQU     7
  00000006            00038 PRECYC          EQU     6
  00000005            00039 SLICE_UPD       EQU     5
  00000004            00040 PRIV_MODE       EQU     4
  00000003            00041 SLEEP_MODE      EQU     3
  00000002            00042 DRAIN_TR        EQU     2
  00000001            00043 PRE_PRIV        EQU     1
  00000000            00044 TEST_MODE       EQU     0
                      00045 
  00000007            00046 TEST_PAUSE      EQU     7
  00000006            00047 TEST_UPD        EQU     6
  00000005            00048 TEST_BUTTON     EQU     5
  00000004            00049 ALL_OFF         EQU     4
  00000003            00050 PRIV_FORBID     EQU     3
  00000002            00051 INHIBIT_OUTPUT  EQU     2
  00000001            00052 MSB_ESC         EQU     1
  00000000            00053 LITERAL_ESC     EQU     0
                      00064 #include "quizshow_config.inc"
                      00001 ; vim:set syntax=pic ts=8:
                      00002 ;
                      00003                 LIST N=86
                      00004 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00005 ;@@                                                                         @@
                      00006 ;@@  @@@   @   @  @@@@@  @@@@@                QUIZ SHOW HARDWARE CONTROLLER @@
                      00007 ;@@ @   @  @   @    @        @                FIRMWARE VERSION 4.0          @@ 
                      00008 ;@@ @   @  @   @    @       @                                               @@
                      00009 ;@@ @   @  @   @    @      @                  FOR HARDWARE REVISION 4.0     @@
                      00010 ;@@ @ @ @  @   @    @     @                   QSCC - QUIZ SHOW CONTESTANT   @@
                      00011 ;@@ @  @@  @   @    @    @                    QSRC - QUIZ SHOW REMOTE       @@
                      00012 ;@@ @@@@@   @@@   @@@@@  @@@@@                                              @@
                      00013 ;@@                                                                         @@
                      00014 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00015 ;
                      00016 ; Copyright (c) 2014 by Steven L. Willoughby, Aloha, Oregon, USA.  
                      00017 ; All Rights Reserved.  Quiz Show portions are unreleased trade secret
                      00018 ; information.
                      00019 ;
                      00020 ; Based on previous works by the same author, some of which are released
                      00021 ; under the Open Software License, version 3.0, which portions are available
                      00022 ; separately for free download.
                      00023 ;
                      00024 ; -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*-
                      00025 ;
                      00026 ; Configuration options.  Set these as desired and then re-assemble the
                      00027 ; code to produce the desired version of the ROM.
                      00028 ;
                      00029 ; 
                      00030 ;==============================================================================
                      00031 ; CONFIGURATION OPTIONS
                      00032 ;==============================================================================
                      00033 ;
                      00034 ; Note: set LUMOS_CHIP_TYPE to LUMOS_CHIP_QSCC or _QSRC in lumos_config.inc
                      00035 ;
                      00065 #include "qscc_hook_main_pins.inc"
                      00001 ; vim:set syntax=pic ts=8:
                      00002 ;
                      00003                 LIST N=86
                      00004 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00005 ;@@                                                                         @@
                      00006 ;@@  @@@   @   @  @@@@@  @@@@@                QUIZ SHOW HARDWARE CONTROLLER @@
                      00007 ;@@ @   @  @   @    @        @                FIRMWARE VERSION 4.0          @@ 
                      00008 ;@@ @   @  @   @    @       @                                               @@
                      00009 ;@@ @   @  @   @    @      @                  FOR HARDWARE REVISION 4.0     @@
                      00010 ;@@ @ @ @  @   @    @     @                   QSCC - QUIZ SHOW CONTESTANT   @@
                      00011 ;@@ @  @@  @   @    @    @                    QSRC - QUIZ SHOW REMOTE       @@
                      00012 ;@@ @@@@@   @@@   @@@@@  @@@@@                                              @@
                      00013 ;@@                                                                         @@
                      00014 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00015 ;
                      00016 ; Copyright (c) 2014 by Steven L. Willoughby, Aloha, Oregon, USA.  
                      00017 ; All Rights Reserved.  Quiz Show portions are unreleased trade secret
                      00018 ; information.
                      00019 ;
                      00020 ; Based on previous works by the same author, some of which are released
                      00021 ; under the Open Software License, version 3.0, which portions are available
                      00022 ; separately for free download.
                      00023 ;
                      00024 ; -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*-
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00025 ;
                      00026 ; This hooks into the Lumos device initialization code which sets up I/O pins.
                      00027 ; We want them arranged differently than the Lumos controllers do, but we put
                      00028 ; the QuizShow code here to keep the Lumos product clean and separate.
                      00029 ; 
                      00030         IF LUMOS_CHIP_TYPE != LUMOS_CHIP_QSCC && LUMOS_CHIP_TYPE != LUMOS_CHIP_QSRC
                      00031          ERROR "qscc_hook_main_pins only used for QS*C systems"
                      00032         ENDIF
                      00033 
                      00034 ;
                      00035 ; QSCC
                      00036 ;
                      00037                     IF LUMOS_CHIP_TYPE == LUMOS_CHIP_QSCC
                      00038 N_BUTTONS            EQU        .6      ; X L A B C D
                      00039 BTN_IDX_X0           EQU        .0
                      00040 BTN_IDX_L0           EQU        .1
                      00041 BTN_IDX_A0           EQU        .2
                      00042 BTN_IDX_B0           EQU        .3
                      00043 BTN_IDX_C0           EQU        .4
                      00044 BTN_IDX_D0           EQU        .5
                      00045 PORT_X0              EQU        PORTA
                      00046 PORT_L0              EQU        PORTA
                      00047 PORT_A0              EQU        PORTA
                      00048 PORT_B0              EQU        PORTA
                      00049 PORT_C0              EQU        PORTA
                      00050 PORT_D0              EQU        PORTA
                      00051 BIT_X0               EQU        1
                      00052 BIT_L0               EQU        0
                      00053 BIT_A0               EQU        5
                      00054 BIT_B0               EQU        4
                      00055 BIT_C0               EQU        3
                      00056 BIT_D0               EQU        2
                      00057 
                      00058 QS_SENS_PORT         EQU        PORTA           ;      76543210
                      00059 QS_SENS_MASK         EQU        B'00111111'     ; RA:  00ABCDXL
                      00060 QS_SENS_CONF         EQU        B'00101000'     ; A+C -> config mode
                      00061 
                      00062 PORT_RX              EQU        PORTC
                      00063 BIT_RX               EQU        7
                      00064 
                      00065 HAS_T_R              EQU        1
                      00066 HAS_ACTIVE           EQU        0
                      00067 HAS_SENSORS          EQU        0
                      00068 HAS_OPTION           EQU        0
                      00069 HAS_STATUS_LEDS      EQU        0
                      00070 HAS_POWER_CTRL       EQU        0
                      00071 
                      00072 PLAT_T_R             EQU        LATC
                      00073 PORT_T_R             EQU        PORTC
                      00074 TRIS_T_R             EQU        TRISC
                      00075 BIT_T_R              EQU        3
                      00076 
                      00077 CHAN_X0R             EQU        .0
                      00078 CHAN_X0G             EQU        .1
                      00079 CHAN_X0B             EQU        .2
                      00080 CHAN_L0R             EQU        .3
                      00081 CHAN_L0Y             EQU        .4
                      00082 CHAN_L0G             EQU        .5
                      00083 CHAN_A0L             EQU        .6
                      00084 CHAN_B0L             EQU        .7
                      00085 CHAN_C0L             EQU        .8
                      00086 CHAN_D0L             EQU        .9
                      00087 CHAN_F_R             EQU        .10
                      00088 CHAN_F_G             EQU        .11
                      00089 CHAN_F_B             EQU        .12
                      00090 CHAN_F_W             EQU        .13
                      00091 
                      00092 PLAT_0               EQU        LATC    ; XR
                      00093 PLAT_1               EQU        LATC    ; XG
                      00094 PLAT_2               EQU        LATC    ; XB
                      00095 PLAT_3               EQU        LATE    ; LR
                      00096 PLAT_4               EQU        LATE    ; LY
                      00097 PLAT_5               EQU        LATE    ; LG
                      00098 PLAT_6               EQU        LATB    ; AL
                      00099 PLAT_7               EQU        LATB    ; BL
                      00100 PLAT_8               EQU        LATB    ; CL
                      00101 PLAT_9               EQU        LATB    ; DL
                      00102 PLAT_10              EQU        LATB    ; FR
                      00103 PLAT_11              EQU        LATB    ; FG
                      00104 PLAT_12              EQU        LATB    ; FB
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00105 PLAT_13              EQU        LATB    ; FW
                      00106 SSR_MAX              EQU        .13
                      00107 
                      00108 BIT_0                EQU        2       ; XR
                      00109 BIT_1                EQU        1       ; XG
                      00110 BIT_2                EQU        0       ; XB
                      00111 BIT_3                EQU        2       ; LR
                      00112 BIT_4                EQU        0       ; LY
                      00113 BIT_5                EQU        1       ; LG
                      00114 BIT_6                EQU        7       ; AL
                      00115 BIT_7                EQU        6       ; BL
                      00116 BIT_8                EQU        5       ; CL
                      00117 BIT_9                EQU        4       ; DL
                      00118 BIT_10               EQU        3       ; FR
                      00119 BIT_11               EQU        2       ; FG
                      00120 BIT_12               EQU        1       ; FB
                      00121 BIT_13               EQU        0       ; FW
                      00122 
                      00123                     ELSE
                      00124                      IF LUMOS_CHIP_TYPE == LUMOS_CHIP_QSRC
  0000000A            00125 N_BUTTONS             EQU       .10     ; X0 L0 X1 L1 ... X4 L4
  00000000            00126 BTN_IDX_X0            EQU       .0
  00000001            00127 BTN_IDX_L0            EQU       .1
  00000002            00128 BTN_IDX_X1            EQU       .2
  00000003            00129 BTN_IDX_L1            EQU       .3
  00000004            00130 BTN_IDX_X2            EQU       .4
  00000005            00131 BTN_IDX_L2            EQU       .5
  00000006            00132 BTN_IDX_X3            EQU       .6
  00000007            00133 BTN_IDX_L3            EQU       .7
  00000008            00134 BTN_IDX_X4            EQU       .8
  00000009            00135 BTN_IDX_L4            EQU       .9
                      00136 
  00000F80            00137 QS_SENS_PORT          EQU       PORTA           ;      76543210
  0000003F            00138 QS_SENS_MASK          EQU       B'00111111'     ; RA:  00LXXLXL
  00000028            00139 QS_SENS_CONF          EQU       B'00101000'     ;        220011
  00000006            00140 QS_SENS_STAND         EQU       B'00000110'     ; L2+X0: CONF; X1+L0: stand
                      00141 
  00000F80            00142 PORT_X0               EQU       PORTA
  00000F80            00143 PORT_L0               EQU       PORTA
  00000F80            00144 PORT_X1               EQU       PORTA
  00000F80            00145 PORT_L1               EQU       PORTA
  00000F80            00146 PORT_X2               EQU       PORTA
  00000F80            00147 PORT_L2               EQU       PORTA
  00000F82            00148 PORT_X3               EQU       PORTC
  00000F83            00149 PORT_L3               EQU       PORTD
  00000F83            00150 PORT_X4               EQU       PORTD
  00000F82            00151 PORT_L4               EQU       PORTC
  00000003            00152 BIT_X0                EQU       3
  00000002            00153 BIT_L0                EQU       2
  00000001            00154 BIT_X1                EQU       1
  00000000            00155 BIT_L1                EQU       0
  00000004            00156 BIT_X2                EQU       4
  00000005            00157 BIT_L2                EQU       5
  00000004            00158 BIT_X3                EQU       4
  00000000            00159 BIT_L3                EQU       0
  00000004            00160 BIT_X4                EQU       4
  00000005            00161 BIT_L4                EQU       5
                      00162 
  00000F82            00163 PORT_RX               EQU       PORTC
  00000007            00164 BIT_RX                EQU       7
                      00165 
  00000001            00166 HAS_T_R               EQU       1
  00000000            00167 HAS_ACTIVE            EQU       0
  00000000            00168 HAS_SENSORS           EQU       0
  00000000            00169 HAS_OPTION            EQU       0
  00000000            00170 HAS_STATUS_LEDS       EQU       0
  00000000            00171 HAS_POWER_CTRL        EQU       0
                      00172 
  00000F8B            00173 PLAT_T_R              EQU       LATC
  00000F82            00174 PORT_T_R              EQU       PORTC
  00000F94            00175 TRIS_T_R              EQU       TRISC
  00000003            00176 BIT_T_R               EQU       3
                      00177 
  00000000            00178 CHAN_X0R              EQU       .0
  00000001            00179 CHAN_X0G              EQU       .1
  00000002            00180 CHAN_X0B              EQU       .2
  00000003            00181 CHAN_L0R              EQU       .3
  00000004            00182 CHAN_X1R              EQU       .4
  00000005            00183 CHAN_X1G              EQU       .5
  00000006            00184 CHAN_X1B              EQU       .6
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000007            00185 CHAN_L1R              EQU       .7
  00000008            00186 CHAN_X2R              EQU       .8
  00000009            00187 CHAN_X2G              EQU       .9
  0000000A            00188 CHAN_X2B              EQU       .10
  0000000B            00189 CHAN_L2R              EQU       .11
  0000000C            00190 CHAN_X3R              EQU       .12
  0000000D            00191 CHAN_X3G              EQU       .13
  0000000E            00192 CHAN_X3B              EQU       .14
  0000000F            00193 CHAN_L3R              EQU       .15
  00000010            00194 CHAN_X4R              EQU       .16
  00000011            00195 CHAN_X4G              EQU       .17
  00000012            00196 CHAN_X4B              EQU       .18
  00000013            00197 CHAN_L4R              EQU       .19
  00000013            00198 CHAN_HB               EQU       CHAN_L4R
  00000F8B            00199 PLAT_0                EQU       LATC    ; X0R
  00000F8B            00200 PLAT_1                EQU       LATC    ; X0G
  00000F8B            00201 PLAT_2                EQU       LATC    ; X0B
  00000F8D            00202 PLAT_3                EQU       LATE    ; L0R
  00000F8A            00203 PLAT_4                EQU       LATB    ; X1R
  00000F8A            00204 PLAT_5                EQU       LATB    ; X1G
  00000F8A            00205 PLAT_6                EQU       LATB    ; X1B
  00000F8A            00206 PLAT_7                EQU       LATB    ; L1R
  00000F8A            00207 PLAT_8                EQU       LATB    ; X2R
  00000F8A            00208 PLAT_9                EQU       LATB    ; X2G
  00000F8A            00209 PLAT_10               EQU       LATB    ; X2B
  00000F8D            00210 PLAT_11               EQU       LATE    ; L2R
  00000F8C            00211 PLAT_12               EQU       LATD    ; X3R
  00000F8C            00212 PLAT_13               EQU       LATD    ; X3G
  00000F8C            00213 PLAT_14               EQU       LATD    ; X3B
  00000F8D            00214 PLAT_15               EQU       LATE    ; L3R
  00000F8A            00215 PLAT_16               EQU       LATB    ; X4R
  00000F8C            00216 PLAT_17               EQU       LATD    ; X4G
  00000F8C            00217 PLAT_18               EQU       LATD    ; X4B
  00000F8C            00218 PLAT_19               EQU       LATD    ; L4R
  00000013            00219 SSR_MAX               EQU       .19
                      00220 
  00000002            00221 BIT_0                 EQU       2       ; X0R
  00000001            00222 BIT_1                 EQU       1       ; X0G
  00000000            00223 BIT_2                 EQU       0       ; X0B
  00000002            00224 BIT_3                 EQU       2       ; L0R
  00000007            00225 BIT_4                 EQU       7       ; X1R
  00000006            00226 BIT_5                 EQU       6       ; X1G
  00000005            00227 BIT_6                 EQU       5       ; X1B
  00000004            00228 BIT_7                 EQU       4       ; L1R
  00000003            00229 BIT_8                 EQU       3       ; X2R
  00000002            00230 BIT_9                 EQU       2       ; X2G
  00000001            00231 BIT_10                EQU       1       ; X2B
  00000000            00232 BIT_11                EQU       0       ; L2R
  00000007            00233 BIT_12                EQU       7       ; X3R
  00000006            00234 BIT_13                EQU       6       ; X3G
  00000005            00235 BIT_14                EQU       5       ; X3B
  00000001            00236 BIT_15                EQU       1       ; L3R
  00000000            00237 BIT_16                EQU       0       ; X4R
  00000003            00238 BIT_17                EQU       3       ; X4G
  00000001            00239 BIT_18                EQU       1       ; X4B
  00000002            00240 BIT_19                EQU       2       ; L4R
                      00241 
  00000001            00242 HAS_FACTORY_RESET    EQU        1       ; this unit has factory reset jumper support
                      00243                                         ; wire a special jumper plug for player #5
                      00244                                         ; to connect X input to PGD pin on ISCP port
                      00245                                         ; connect jumper, power on, then pull jumper
  00000000            00246 FRST_TRISTATE_TEST   EQU        0       ; need to change tristate bits for test pins
  00000F83            00247 FRST_RECEIVER_P      EQU        PORT_X4 ; pin to receive jumpered signal
  00000004            00248 FRST_RECEIVER_B      EQU        BIT_X4  ; bit to receive jumpered signal
  00000F8A            00249 FRST_SENDER_P        EQU        LATB    ; pin to send jumpered signal   PGD=<B7>
  00000007            00250 FRST_SENDER_B        EQU        7       ; bit to send jumpered signal
  00000F8C            00251 FRST_SIG_A_P         EQU        PLAT_19 ; lights to flash for factory reset (on)
  00000002            00252 FRST_SIG_A_B         EQU        BIT_19  ; lights to flash for factory reset
  00000F8B            00253 FRST_SIG_B_P         EQU        PLAT_0  ; lights to flash for factory reset (off)
  00000002            00254 FRST_SIG_B_B         EQU        BIT_0   ; lights to flash for factory reset
  00000F8B            00255 FRST_SIG_C_P         EQU        PLAT_2  ; lights to flash for factory reset (on)
  00000000            00256 FRST_SIG_C_B         EQU        BIT_2   ; lights to flash for factory reset
                      00257                      ENDIF
                      00258                     ENDIF
                      00259 
                      00066 #include "qscc_bits.inc"
                      00001 ; vim:set syntax=pic ts=8:
                      00002 ;
                      00003                 LIST N=86
                      00004 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00005 ;@@                                                                         @@
                      00006 ;@@  @@@   @   @  @@@@@  @@@@@                QUIZ SHOW HARDWARE CONTROLLER @@
                      00007 ;@@ @   @  @   @    @        @                FIRMWARE VERSION 4.0          @@ 
                      00008 ;@@ @   @  @   @    @       @                                               @@
                      00009 ;@@ @   @  @   @    @      @                  FOR HARDWARE REVISION 4.0     @@
                      00010 ;@@ @ @ @  @   @    @     @                   QSCC - QUIZ SHOW CONTESTANT   @@
                      00011 ;@@ @  @@  @   @    @    @                    QSRC - QUIZ SHOW REMOTE       @@
                      00012 ;@@ @@@@@   @@@   @@@@@  @@@@@                                              @@
                      00013 ;@@                                                                         @@
                      00014 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00015 ;
                      00016 ; Copyright (c) 2014 by Steven L. Willoughby, Aloha, Oregon, USA.  
                      00017 ; All Rights Reserved.  Quiz Show portions are unreleased trade secret
                      00018 ; information.
                      00019 ;
                      00020 ; Based on previous works by the same author, some of which are released
                      00021 ; under the Open Software License, version 3.0, which portions are available
                      00022 ; separately for free download.
                      00023 ;
                      00024 ; -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*-
                      00025 ;
                      00026 ; This defines the bits for bit-encoded flags, etc.
                      00027 ; 
                      00028 #ifndef QSCC_BITS_INC
                      00029 #define QSCC_BITS_INC
                      00030 
                      00031         IF LUMOS_CHIP_TYPE != LUMOS_CHIP_QSCC && LUMOS_CHIP_TYPE != LUMOS_CHIP_QSRC
                      00032          ERROR "qscc_bits only used for QS*C systems"
                      00033         ENDIF
                      00034                                         ; QUIZSHOW_FLAGS
  00000002            00035 QS_FLAG_DOING120 EQU    2               ; -----1--      Doing "every 1/120 sec tasks" now
  00000001            00036 QS_FLAG_ON_120_S EQU    1               ; ------1-      Need to do "every 1/120 sec tasks" now
  00000000            00037 QS_FLAG_SCANNING EQU    0               ; -------1      Scanner running
                      00038 
                      00039                                         ; BTN_??_FLAGS
  00000004            00040 BTN_FLG_LCK_ACK EQU     4               ; ---1----      Button lock acknowledged already
  00000003            00041 BTN_FLG_ACTIVE  EQU     3               ; ----1---      Button being pressed now
  00000002            00042 BTN_FLG_LOCKED  EQU     2               ; -----1--      Button locked out
  00000001            00043 BTN_FLG_MASKED  EQU     1               ; ------1-      Button ignored
  00000000            00044 BTN_FLG_PRESSED EQU     0               ; -------1      Button pressed already
                      00045 
  00000C00            00046 QUIZSHOW_DATA   EQU     0xC00
                      00047 #endif
                      00067         RADIX   DEC
  0000                00068         EXTERN  QUIZSHOW_FLAGS
  0000                00069         EXTERN  QS_BTN_TMR_T
  0000                00070         EXTERN  QS_BTN_TMR_U
  0000                00071         EXTERN  SSR_STATE
  0000                00072         GLOBAL  BTN_X0_TIME_T
  0000                00073         GLOBAL  BTN_X0_TIME_U
  0000                00074         GLOBAL  BTN_X0_TIME_H
  0000                00075         GLOBAL  BTN_X0_TIME_L
  0000                00076         GLOBAL  BTN_X0_FLAGS
  0000                00077         GLOBAL  QUIZSHOW_LCKTM
                      00078 ;#include "serial-io.inc"
                      00079 
                      00080 ; Works on Software Alchemy Quiz Show QSCC and QSRC boards revision 4.0.
                      00081 ;
                      00082 ; N.B. THE BOARD SELECT BITS IN LUMOS_CONFIG.INC MUST BE SELECTED
                      00083 ; FOR THE TARGET CONFIGURATION!  EACH ROM IS DIFFERENT!
                      00084 ;
                      00085 ; Target Microcontroller is PIC18F4685, Q=40MHz (100nS instruction cycle)
                      00086 ;
                      00087 ; Serial control (RS-485) at 19.2kbps by default.
                      00088 ; Configurable from 300 to 250000 baud.
                      00089 ;
                      00090 ; OPTION BUTTON:
                      00091 ; XXX The Lumos controllers have an OPTION button which starts configuration
                      00092 ; XXX mode.  QS*C boards don't have those, so instead boot the unit while
                      00093 ; XXX holding down the A and D buttons (QSCC) or the L2 and L0 buttons (QSRC)
                      00094 ; XXX to enter configuration mode.
                      00095 ; 
                      00096 ;=============================================================================
                      00097 ; IMPLEMENTATION NOTES
                      00098 ;-----------------------------------------------------------------------------
                      00099 ;
                      00100 ; The QUIZSHOW controller firmware consists of a number of somewhat 
                      00101 ; independent subsystems:
                      00102 ; 
                      00103 ; LUMOS
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00104 ;       The QSCC and QSRC boards are also Lumos SSR controllers which implement
                      00105 ;       most of the standard Lumos commands.  The various lights used by the
                      00106 ;       quiz show are mapped to Lumos channels.  The Lumos firmware is included
                      00107 ;       into the quizshow firmware, with some special switches enabled to adapt
                      00108 ;       it to this hardware.
                      00109 ;
                      00110 ; START
                      00111 ;       Initializes the microcontroller, starts up the required peripherals,
                      00112 ;       and enters the main loop
                      00113 ;
                      00114 ; SIO
                      00115 ;       Handles all serial I/O operations in the background (interrupt-driven)
                      00116 ;       so the rest of the code only needs to be concerned with higher-level
                      00117 ;       reads and writes.  Buffers hold 256 characters each of input and output.
                      00118 ;
                      00119 ; ISR
                      00120 ;       The interrupt service routine manages a set of counters and timers:
                      00121 ;       1. We run a 120 Hz timer which provides timing for the dimmers.
                      00122 ;
                      00123 ; MAIN_LOOP
                      00124 ;       Manages the display of the readerboards.
                      00125 ;       Updates the status of the SSR lines if it's time to do so
                      00126 ;       Receives a character from the serial line if one's waiting
                      00127 ;
                      00128 ; INTERPRETER
                      00129 ;       When a byte is received on the serial line, it is processed by
                      00130 ;       a small state machine.  The current state is held in YY_STATE (named
                      00131 ;       in honor of the venerable yacc).
                      00132 ;
                      00133 ;-----------------------------------------------------------------------------
                      00134 ; Command Protocol:
                      00135 ;                     ___7______6______5______4______3______2______1______0__
                      00136 ; Command Byte:      |      |                    |                           |
                      00137 ;                    |   1  |    Command code    |   Target device address   |
                      00138 ;                    |______|______|______|______|______|______|______|______|
                      00139 ;
                      00140 ; Any byte with its MSB set is the beginning of a command.  If the target 
                      00141 ; device matches this unit's address, the state machine kicks into gear and
                      00142 ; processes the command (which may require some following data bytes, all
                      00143 ; of which must have their MSB cleared).  Otherwise, the unit ignores the
                      00144 ; byte.
                      00145 ;
                      00146 ;                     ___7______6______5______4______3______2______1______0__
                      00147 ; Extended Command:  |      |                    |                           |
                      00148 ;                    |   1  |          7         |   Target device address   |
                      00149 ;                    |______|______|______|______|______|______|______|______|
                      00150 ;                    |      |                                                |
                      00151 ;                    |   0  |                  Command code                  |
                      00152 ;                    |______|______|______|______|______|______|______|______|
                      00153 ;
                      00154 ; The most common commands are given ID 0-6 so that they may be sent in as few
                      00155 ; bytes as possible (as few as a single byte), but we have more than 8 commands
                      00156 ; so we have an extended code.  If the command code is 7 (all bits set), then
                      00157 ; the following byte contains the actual command code which may be any value
                      00158 ; from 0-127.
                      00159 ;
                      00160 ;                     ___7______6______5______4______3______2______1______0__
                      00161 ; Data Byte:         |      |                                                |
                      00162 ;                    |   0  |                      Data                      |
                      00163 ;                    |______|______|______|______|______|______|______|______|
                      00164 ;
                      00165 ; Any byte with its MSB cleared is a data byte, and is ignored unless we're
                      00166 ; in the middle of interpreting a multi-byte command, in which case it's interpreted
                      00167 ; appropriately as data supporting the command being executed.  This way, other
                      00168 ; devices which share the same protocol format but not necessarily a compatible
                      00169 ; command set may safely know which bytes can be ignored without knowing the
                      00170 ; details of each other's command sets.
                      00171 ;
                      00172 ; Two special bytes are recognized:
                      00173 ;
                      00174 ;                     ___7______6______5______4______3______2______1______0__
                      00175 ; MSB Escape:        |      |                                                |
                      00176 ;                    |   0  |   1      1      1      1      1      1      0  |
                      00177 ;                    |______|______|______|______|______|______|______|______|
                      00178 ;
                      00179 ; If this ($7E) byte is received, it is ignored but the next byte received will
                      00180 ; have its MSB bit set.  This allows data bytes to have full 8-bit values without
                      00181 ; violating the communication protocol described above.  That second byte is not
                      00182 ; interpreted further.
                      00183 ;
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00184 ;                     ___7______6______5______4______3______2______1______0__
                      00185 ; Literal Escape     |      |                                                |
                      00186 ;                    |   0  |   1      1      1      1      1      1      1  |
                      00187 ;                    |______|______|______|______|______|______|______|______|
                      00188 ;
                      00189 ; If this ($7F) byte is received, it is ignored but the next byte is accepted
                      00190 ; as-is without further interpretation.
                      00191 ;
                      00192 ; Specific Example Cases of interest:
                      00193 ;       Sequence    Resulting byte
                      00194 ;       $7E $7E     $FE
                      00195 ;       $7E $7F     $FF
                      00196 ;       $7F $7E     $7E
                      00197 ;       $7F $7F     $7F
                      00198 ;
                      00199 ; A command byte (received with MSB already set) trumps all of the above.  It is
                      00200 ; taken as the start of a command and the escape sequence in progress is canceled.
                      00201 ;
                      00202 ; Commands recognized (L indicates Lumos commands):
                      00203 ;
                      00204 ;   COMMAND  CODE  BITS
                      00205 ;L  BLACKOUT 0     1000aaaa
                      00206 ;L  ON_OFF   1     1001aaaa 0scccccc            Turn channel <c> on (<s>=1) or off (<s>=0)
                      00207 ;L  SET_LVL  2     1010aaaa 0hcccccc 0vvvvvvv    Set dimmer level <v>:<h> on channel <c>
                      00208 ;L  BULK_UPD 3     1011aaaa 0mcccccc ...                Bulk-upload multiple channel levels
                      00209 ;L  RAMP_LVL 4     1100aaaa Cdcccccc ...         Ramp channel <c> smoothly up (<d>=1) or down (<C>=1 cyc
                            le)
                      00210 ;   SCAN_ST  5     1101aaaa                      Start scanning buttons
                      00211 ;   SCAN_Q   6     1110aaaa 0000000s             Read scan results / Stop
                      00212 ;   EXTENDED 7     1111aaaa                      Extended command, decoded further in next byte
                      00213 ;L@ SLEEP    7+0   1111aaaa 00000000 01011010 01011010  Put unit to sleep
                      00214 ;L@ WAKE     7+1   1111aaaa 00000001 01011010 01011010  Take unit out of sleep mode
                      00215 ;L  SHUTDOWN 7+2   1111aaaa 00000010 01011000 01011001  Take unit completely offline
                      00216 ;L< QUERY    7+3   1111aaaa 00000011 00100100 01010100  Report device status
                      00217 ;X! DEF_SEQ  7+4   1111aaaa 00000100 0iiiiiii ...       Define sequence <i>
                      00218 ;X  EXEC_SEQ 7+5   1111aaaa 00000101 0iiiiiii           Execute sequence <i> (0=stop)
                      00219 ;X! CLR_SEQ  7+8   1111aaaa 00001000 01000011 01000001  Erase all stored sequences
                      00220 ;L  XPRIV    7+9   1111aaaa 00001001                    Forbid priviliged mode
                      00221 ;            7+10  1111aaaa 00001010                    Reserved for future use
                      00222 ;             :        :        :                           :     :     :    : 
                      00223 ;            7+28  1111aaaa 00011100                    Reserved for future use                 
                      00224 ;   OUT_SCAN 7+29  1111aaaa 00011101                    SCAN_Q reply
                      00225 ;L  OUT_NAK  7+30  1111aaaa 00011110                    QUERY NAK                               
                      00226 ;L  OUT_RPLY 7+31  1111aaaa 00011111 ...                Reply to QUERY command_________________ 
                      00227 ;   IC_***** 7+32  11110000 00100000                    Reserved (Lumos internal)
                      00228 ;             :        :        :                           :     :   :      :         ////////
                      00229 ;            7+63  11110000 00111111                    Reserved for new commands______////////
                      00230 ;*! CF_PHASE 7+64  1111aaaa 010000pp 0ppppppp 01010000 01001111   Phase offset=<p>       CONFIG
                      00231 ;*! CF_ADDR  7+96  1111aaaa 0110AAAA 01001001 01000001 01000100   Change address to <A>  ||||||
                      00232 ;*  CF_NOPRV 7+112 1111aaaa 01110000                              Leave privileged mode  ||||||
                      00233 ;*  CF_CONF  7+113 1111aaaa 01110001 ...                          Configure device       ||||||
                      00234 ;*! CF_BAUD  7+114 1111aaaa 01110010 0bbbbbbb 00100110            Set baud rate to <b>   ||||||
                      00235 ;*! CF_RESET 7+115 1111aaaa 01110011 00100100 01110010            Reset factory defaults ||||||
                      00236 ;*  CF_XPRIV 7+116 1111aaaa 01110100                              Forbid priviliged mode ||||||
                      00237 ;*           7+117 1111aaaa 01110101                     Reserved for future config cmd  ||||||
                      00238 ;*                     :        :                            :     :     :      :    :   ||||||
                      00239 ;*           7+127 1111aaaa 01111111                     Reserved for future config cmd__||||||
                      00240 ;
                      00241 ; Legend:
                      00242 ;   X Not yet implemented; planned for future; subject to change
                      00243 ;   @ Unit may automatically take this action
                      00244 ;   * Privileged configuration-mode command
                      00245 ;   ! Permanent effect (written to EEPROM)
                      00246 ;   < Command generates response data (back to host)
                      00247 ;   a Device address (0-15)
                      00248 ;   b Baud rate code (0-127), but units may only define a small subset of those values
                      00249 ;   c Output channel (0-63, but unit may only support a lesser number)
                      00250 ;   d Direction: up (<d>=1) or down (<d>=0).
                      00251 ;   h High-res level bit (LSB of 8-bit value when in high-res mode)
                      00252 ;   m Mode (1=high-res, 0=low-res)
                      00253 ;   n Number of items affected
                      00254 ;   s Output state: 0=off, 1=on
                      00255 ;   v Value of dimmer (0-127) (most significant 7 bits of dimmer value)
                      00256 ;
                      00257 ; Payloads for many-byte commands
                      00258 ;
                      00259 ; BULK_UPD:  00cccccc 0nnnnnnn v0 v1 v2 ... vn 01010101
                      00260 ;       Updates <n>+1 channels starting at <c>, giving <v> values for each as per SET_LVL.
                      00261 ;
                      00262 ; RAMP_LVL:  Cdcccccc 0sssssss 0ttttttt   Channel <c> up/down in <s>+1 steps every <t>+1/120 sec
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00263 ;
                      00264 ; DEF_SEQ:   0iiiiiii 0nnnnnnn (...)*<n+1> 01000100 01110011  Define sequence <i> of length <n+1>
                      00265 ;                                                             0 is boot sequence, 1-63 is EEPROM
                      00266 ;                                                             64-127 is RAM.
                      00267 ;
                      00268 ; CF_BAUD:   Values recognized:
                      00269 ;       00000000 ($00)      300 baud
                      00270 ;       00000001 ($01)      600
                      00271 ;       00000010 ($02)    1,200
                      00272 ;       00000011 ($03)    2,400
                      00273 ;       00000100 ($04)    4,800
                      00274 ;       00000101 ($05)    9,600
                      00275 ;       00000110 ($06)   19,200
                      00276 ;       00000111 ($07)   38,400
                      00277 ;       00001000 ($08)   57,600
                      00278 ;       00001001 ($09)  115,200
                      00279 ;       00001010 ($0A)  250,000
                      00280 ;
                      00281 ;
                      00282 ; Response packet from QUERY command (37 bytes):
                      00283 ; note the ROM version byte also serves to indicate the format of the response
                      00284 ; bytes which follow.  If the query packet format changes, the ROM version byte
                      00285 ; MUST also change.
                      00286 ;
                      00287 ;    1111aaaa 00011111 00110000 0ABCDdcc 0ccccccc 0ABCDqsf 0ABCDXpp 0ppppppp 
                      00288 ;        \__/           \_/\__/  \__/|\_________/  \__/|||  \__/|\_________/  
                      00289 ;          |             maj |     | |   |           | |||   |  |      `--phase
                      00290 ;          `--reporting    minor   | |   `--DMX      | |||   |  `--config locked?
                      00291 ;              unit addr  rom      | |      channel  | |||   `--active
                      00292 ;                         vers.    | |               | ||`--mem full?
                      00293 ;                                  | `--DMX mode?    | |`--sleeping?
                      00294 ;                                  `--configured     | `--config mode?
                      00295 ;                                                    `--masks
                      00296 ;
                      00297 ;    0eeeeeee 0eeeeeee 0MMMMMMM 0MMMMMMM 0X0iiiii 0xxxxxxx 
                      00298 ;     \______________/  \______________/  | \___/  \_____/
                      00299 ;        `--EEPROM free    `--RAM free    |   |       `--executing seq.
                      00300 ;                                         |   `--device model
                      00301 ;                                         `--seq running?
                      00302 ;
                      00303 ;    0owE0000 0IIIIIII 0iiiiiii 0PPPPPPP        Sensor trigger info for A
                      00304 ;    0owE0001 0IIIIIII 0iiiiiii 0PPPPPPP        Sensor trigger info for B
                      00305 ;    0owE0010 0IIIIIII 0iiiiiii 0PPPPPPP        Sensor trigger info for C
                      00306 ;    0owE0011 0IIIIIII 0iiiiiii 0PPPPPPP        Sensor trigger info for D
                      00307 ;
                      00308 ;    0fffffff 0fffffff 000000pp 0ppppppp ssssssss ssssssss 00110011
                      00309 ;    \______/ \______/       \_________/ \______S/N______/
                      00310 ;        |        |               `--phase (channels 24-47)
                      00311 ;        |        `--fault code (channels 24-47)
                      00312 ;        `--fault code (channels 0-23)
                      00313 ;
                      00314 ; Response to SCAN_Q query commands:
                      00315 ; Note that the ROM version dictates these changes too, so if this format
                      00316 ; changes the ROM version MUST change (as reported in the QUERY response
                      00317 ; above).
                      00318 ;                               31       23       15       7      0
                      00319 ;    1111aaaa 00011101 0R0nnnnn tttttttt tttttttt tttttttt tttttttt ...
                      00320 ;        \__/           | \___/ \_________________________________/
                      00321 ;          |            |   |                    | (x n)
                      00322 ;          `--reporting | number of    0=not pressed yet
                      00323 ;              unit addr| buttons     >0=microseconds elapsed before press
                      00324 ;                       | reported            (range: .000001~4294.967295 s)
                      00325 ;                       0=scanning stopped       00:00.000001~71:34.967295 
                      00326 ;                       1=scanner is still running
                      00327 ;                      
                      00328 ;    01010001 00101010 
                      00329 ;
                      00330 ; QSCC sends 6 buttons: X, L, A, B, C, D.
                      00331 ; QSRC sends 10 buttons: X0, L0, X1, L1, X2, L2, X3, L3, X4, L4.  
                      00332 ;
                      00333 ; Also note that the controller is allowed to send OUT_NAK packets to the
                      00334 ; host in response to QUERY commands.  This does not complete the exchange,
                      00335 ; but serves to ask the host to continue waiting if the device won't be able
                      00336 ; to reply to the QUERY for long enough that it risks a timeout.  The host
                      00337 ; is under no obligation to respect the OUT_NAK packets.
                      00338 ;
                      00339 ;   1111aaaa 00011110 
                      00340 ;
                      00341 ; A controller MUST never send data except in response to an explicit
                      00342 ; request from the host.  Controllers MUST immediately cease sending
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00343 ; data upon receiving any bytes on the network (this indicates that
                      00344 ; the host is no longer waiting for a reply but has moved on to something
                      00345 ; else or is querying another device now).  No further data may be sent
                      00346 ; until again explicitly asked for.
                      00347 ;
                      00348 ;
                      00349 ;                     _______________________________________________________
                      00350 ; Channel ID:        |      |      |                                         |
                      00351 ;                    |  0   | ON   |               Channel ID                |
                      00352 ;                    |______|______|______|______|______|______|______|______|
                      00353 ; The ON bit <6> determines whether the channel is being turned on (1) or 
                      00354 ; off (0) for the "Set/clear single channel" command.  it is ignored when
                      00355 ; setting the channel to a specific dimmer value.
                      00356 ;
                      00357 ;=============================================================================
                      00358 ; HARDWARE DESCRIPTION
                      00359 ;-----------------------------------------------------------------------------
                      00360 ;
                      00361 ; The controllers use the PIC18F4685 microcontroller, and have identical
                      00362 ; circuit boards, although the assignment of I/O pins is very different
                      00363 ; between them.
                      00364 ;
                      00365 ;  PIC18F4685 Microcontroller I/O pin assignments:
                      00366 ;
                      00367 ; QSRC    QSCC           ________   _________         QSCC    QSRC 
                      00368 ; BOARD:  BOARD:        |o       \_/         |        BOARD:  BOARD:
                      00369 ; /RESET  /RESET -->  1 | /MCLR RE3  PGD RB7 | 40 --> /AL     /X1R   
                      00370 ; /L1     /L     -->  2 | RA0        PGC RB6 | 39 --> /BL     /X1G    
                      00371 ; /X2     /X     -->  3 | RA1        PGM RB5 | 38 --> /CL     /X1B   
                      00372 ; /L0     /D     -->  4 | RA2            RB4 | 37 --> /DL     /L1R  
                      00373 ; /X0     /C     -->  5 | RA3            RB3 | 36 --> /FR     /X2R  
                      00374 ; /X2     /B     -->  6 | RA4       INT2 RB2 | 35 --> /FG     /X2G   
                      00375 ; /L2     /A     -->  7 | RA5       INT1 RB1 | 34 --> /FB     /X2B    
                      00376 ; /L2R    /LY    <--  8 | RE0       INT0 RB0 | 33 --> /FW     /X4R     
                      00377 ; /L3R    /LG    <--  9 | RE1            VDD | 32 --- +5V       
                      00378 ; /L0R    /LR    <-- 10 | RE2            VSS | 31 --- GND      
                      00379 ;            +5V --- 11 | VDD            RD7 | 30 --> D7      /X3R  
                      00380 ;            GND --- 12 | VSS            RD6 | 29 --> D6      /X3G  
                      00381 ;           xtal --- 13 | OSC            RD5 | 28 --> D5      /X3B  
                      00382 ;             +----- 14 | OSC            RD4 | 27 --- D4 ->   /X4 <-
                      00383 ; /X0B    /XB    <-- 15 | RC0         RX RC7 | 26 <-- Serial RxD
                      00384 ; /X0G    /XG    <-- 16 | RC1         TX RC6 | 25 --> Serial TxD
                      00385 ; /X0R    /XR    <-- 17 | RC2            RC5 | 24 --- PS0 ->  /L4 <-
                      00386 ; T/R     T/R    <-- 18 | RC3            RC4 | 23 --- PS1 ->  /X3 <- 
                      00387 ; /L3 ->  D0 <-  --- 19 | RD0            RD3 | 22 --> D3      /X4G  
                      00388 ; /X4B    D1     <-- 20 | RD1            RD2 | 21 --> D2      /L4R  
                      00389 ;                       |____________________|
                      00390 ;
                      00391 ;
                      00392 ; ========================================================================
                      00393 ; PROGRAM MEMORY MAP
                      00394 ; ______________________________________________________________________________
                      00395 ;
                      00396 ; 14K50 4685    _________________ ___
                      00397 ; $00000 $00000 | RESET Vector    | V_RST
                      00398 ; $00007 $00007 |_________________|___
                      00399 ; $00008 $00008 | High Int Vector | V_INT_H
                      00400 ; $00017 $00017 |_________________|___
                      00401 ; $00018 $00018 | Low Int Vector  | V_INT_L
                      00402 ; $0001F $0001F |_________________|
                      00403 ; $00020 $00020 |/////////////////|
                      00404 ; $000FF $000FF |/////////////////|___
                      00405 ; $00100 $00100 | Boot code       | _BOOT
                      00406 ;               |.................|___
                      00407 ;               | Interrupt hand- | _INT
                      00408 ;               |  lers           |      
                      00409 ;               |/////////////////|
                      00410 ; $007FF $007FF |/////////////////|___
                      00411 ; $00800 $00800 | Mainline code   | _MAIN
                      00412 ;               |.................|___
                      00413 ;           ??? | Device init     | LUMOS_CODE_INIT
                      00414 ;               |_________________|___
                      00415 ;           ??? | Serial I/O      | _SIO_CODE
                      00416 ;               | Module          |
                      00417 ;               |_________________|___
                      00418 ;               |/////////////////|
                      00419 ;               |/////////////////|
                      00420 ;               |/////////////////|
                      00421 ;               |/////////////////|
                      00422 ;               |/////////////////|___
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00423 ; $02E00 $14000 | EEPROM defaults | _MAIN_EEPROM_TBL
                      00424 ; $02EFF $14FFF |_________________|___
                      00425 ; $02F00 $15000 |Serial I/O Mod   | _SIO_LOOKUP_TABLES
                      00426 ;               |lookup tables    |
                      00427 ;        $150FF |_________________|___
                      00428 ;        $15100 |                 |
                      00429 ;               |                 |
                      00430 ; $02FEF $16FEF |_________________|___
                      00431 ; $02FF0 $16FF0 |System Mfg Data  | _SYSTEM_MFG_DATA
                      00432 ; $02FFF $16FFF |_________________|___
                      00433 ; $03000 $17000 |                 | 
                      00434 ; $03FFF $17FFF |_________________|___
                      00435 ;               |/////////////////|
                      00436 ;               |/////////////////|
                      00437 ;$1FFFFF$1FFFFF |/////////////////|___
                      00438 ;
                      00439 ;
                      00440 ; ========================================================================
                      00441 ; DATA MEMORY MAP (4685)
                      00442 ;
                      00443 ;       _________________ ___ ___ ___ ___ ___ ___ ___ ___
                      00444 ; $000 | global state,   | _ADATA            BANK 0
                      00445 ; $05F | ISR data, etc.  |                (ACCESS AREA)
                      00446 ;      |.................|...............................
                      00447 ; $060 |                 |                   
                      00448 ;      |_________________|___ ___ ___ ___ ___ ___ ___ ___
                      00449 ; $100 | Serial I/O TxD  | _SIO_TXBUF_DATA   BANK 1
                      00450 ;      | ring buffer     |
                      00451 ;      |_________________|___ ___ ___ ___ ___ ___ ___ ___
                      00452 ; $200 | Serial I/O RxD  | _SIO_RXBUF_DATA   BANK 2
                      00453 ;      | ring buffer     |
                      00454 ;      |_________________|___ ___ ___ ___ ___ ___ ___ ___
                      00455 ; $300 | Serial I/O mod  | _SIO_VAR_DATA     BANK 3
                      00456 ;      | variable space  |
                      00457 ;      |_________________|___ ___ ___ ___ ___ ___ ___ ___
                      00458 ; $400 | SSR state data  | _SSR_DATA         BANK 4
                      00459 ;      |                 |
                      00460 ;      |_________________|___ ___ ___ ___ ___ ___ ___ ___
                      00461 ; $500 | Parser buffer   | _MAINDATA         BANK 5
                      00462 ;      |.................|
                      00463 ; $5?? |                 |
                      00464 ;      |_________________|___ ___ ___ ___ ___ ___ ___ ___
                      00465 ; $600 | Stored sequences| _SEQ_DATA         BANK 6
                      00466 ;      | (1792 bytes)    |
                      00467 ;              .
                      00468 ;              .                 
                      00469 ;              .                
                      00470 ;      |                 |
                      00471 ;      |                 |
                      00472 ;      |_________________|___ ___ ___ ___ ___ ___ ___ ___
                      00473 ; $C00 | Quizshow Data   | _QUIZSHOW_DATA    BANK C
                      00474 ;      |                 |
                      00475 ;      |_________________|___ ___ ___ ___ ___ ___ ___ ___
                      00476 ; $D00 |                 |                   BANK D
                      00477 ;      | CAN special     |
                      00478 ;      | function        |___ ___ ___ ___ ___ ___ ___ ___
                      00479 ; $E00 | registers       |                   BANK E
                      00480 ;      | (not used for   |
                      00481 ;      | Lumos)          |___ ___ ___ ___ ___ ___ ___ ___
                      00482 ; $F00 |                 |                   BANK F
                      00483 ;      |                 |
                      00484 ; $F5F |.................|...............................
                      00485 ; $F60 | Special Function|                (ACCESS AREA)
                      00486 ;      | (device) regis- |
                      00487 ;      | ters            |
                      00488 ; $FFF |_________________|___ ___ ___ ___ ___ ___ ___ ___
                      00489 ;
                      00490 ; ========================================================================
                      00491 ; EEPROM MEMORY
                      00492 ;
                      00493 ;
                      00494 ;       ______________            ______________ 
                      00495 ; $000 |_0xFF_________|     $010 | Saved        |
                      00496 ; $001 |_Baud_Rate____|     $011 | Sequence     |
                      00497 ; $002 |_Device_ID____|     $012 | Storage      |
                      00498 ; $003 | Phase     MSB|     $013 |       |      |
                      00499 ; $004 |_Offset____LSB|     $014 |       |      |
                      00500 ; $005 | DMX Slot  MSB|     $015 |       |      |
                      00501 ; $006 |___________LSB|       .          .
                      00502 ; $007 |_Sensor_cfg___|       .          .
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00503 ; $008 |______________|       .          .
                      00504 ; $009 |______________|     $3F9 |       |      |
                      00505 ; $00A |______________|     $3FA |       |      |
                      00506 ; $00B |______________|     $3FB | (1008 |      |
                      00507 ; $00C |______________|     $3FC | bytes)|      |
                      00508 ; $00D |______________|     $3FD |       |      |
                      00509 ; $00E |______________|     $3FE |       |      |
                      00510 ; $00F |_0x42_________|     $3FF |_______V______|
                      00511 ;
                      00512 ;
                      00513 
                      00514 ; ========================================================================
                      00515 ; DEVICES USED
                      00516 ;
                      00517 ; TMR0 L  120 Hz interrupt source (for boards without zero-crossing detector)
                      00518 ; TMR1
                      00519 ; TMR2 L  Dimmer slice timer (1/260 of a 120 Hz half-cycle)
                      00520 ; TMR3 L  Break detector for DMX reception
                      00521 ; UART L  SIO module
                      00522 ;=============================================================================
                      00523 ;
                      00524 ;------------------------------------------------------------------------------
                      00525 ; Significant Registers (ACCESS BANK)
                      00526 ;------------------------------------------------------------------------------
                      00527 ;
                      00528 ;                     ___7______6______5______4______3______2______1______0__
                      00529 ; ISR_TMPL_STATUS    |                                                       |
                      00530 ;                    | Temporary storage for STATUS register in low-pri ISR  |
                      00531 ;                    |______|______|______|______|______|______|______|______|
                      00532 ; ISR_TMPL_BSR       |                                                       |
                      00533 ;                    | Temporary storage for BSR register in low-priority ISR|
                      00534 ;                    |______|______|______|______|______|______|______|______|
                      00535 ; ISR_TMPL_WREG      |                                                       |
                      00536 ;                    | Temporary storage for W register in low-priority ISR  |
                      00537 ;                    |______|______|______|______|______|______|______|______|
                      00538 ; MY_ADDRESS         |                           |                           |
                      00539 ;                    |                           |       Unit address        |
                      00540 ;                    |______|______|______|______|______|______|______|______|
                      00541 ; PHASE_OFFSETH      |                                                       |
                      00542 ;                    |               Phase offset value (MSB)                |
                      00543 ;                    |______|______|______|______|______|______|______|______|
                      00544 ; PHASE_OFFSETL      |                                                       |
                      00545 ;                    |               Phase offset value (LSB)                |
                      00546 ;                    |______|______|______|______|______|______|______|______|
                      00547 ; SSR_STATE          |      |      |SLICE |PRIV_ |SLEEP |DRAIN |PRE_  |TEST_ |
                      00548 ;                    |INCYC |PRECYC| _UPD | MODE |_MODE |_TR   |PRIV  |MODE  |
                      00549 ;                    |______|______|______|______|______|______|______|______|
                      00550 ; SSR_STATE2         |TEST_ |TEST_ |TEST_ |ALL_  |PRIV_ |INHIBI|MSB_  |LITER |
                      00551 ;                    |PAUSE |UPD   |BUTTON|OFF   |FORBID|T_OUTP|ESC   |AL_ESC|
                      00552 ;                    |______|______|______|______|______|UT____|______|______|
                      00553 ; DMX_SLOTH          |DMX_EN|DMX_  |DMX_  |                           |DMX Sl|
                      00554 ;                    |      |SPEED |FRAME |                           |ot MSB|
                      00555 ;                    |______|______|______|______|______|______|______|______|
                      00556 ; DMX_SLOTL          |                                                       |
                      00557 ;                    |       Starting DMX Slot Number - 1 (low 8 bits)       |
                      00558 ;                    |______|______|______|______|______|______|______|______|
                      00559 ; YY_STATE           |                                                       |
                      00560 ;                    |                      Parser State                     |
                      00561 ;                    |______|______|______|______|______|______|______|______|
                      00562 ; YY_COMMAND         |                                                       |
                      00563 ;                    |                      Command Code                     |
                      00564 ;                    |______|______|______|______|______|______|______|______|
                      00565 ; YY_CMD_FLAGS       |                                                       |
                      00566 ;                    |               Command-specific Flag Bits              |
                      00567 ;                    |______|______|______|______|______|______|______|______|
                      00568 ; YY_DATA            |                                                       |
                      00569 ;                    |                      Command Data                     |
                      00570 ;                    |______|______|______|______|______|______|______|______|
                      00571 ; YY_LOOKAHEAD_MAX   |                                                       |
                      00572 ;                    |               Maximum length for look-ahead           |
                      00573 ;                    |______|______|______|______|______|______|______|______|
                      00574 ; YY_LOOK_FOR        |                                                       |
                      00575 ;                    |               Sentinel value to search for            |
                      00576 ;                    |______|______|______|______|______|______|______|______|
                      00577 ; YY_BUF_IDX         |                                                       |
                      00578 ;                    |     Offset in YY_BUFFER where we will write next      |
                      00579 ;                    |______|______|______|______|______|______|______|______|
                      00580 ; YY_NEXT_STATE      |                                                       |
                      00581 ;                    |     State to transition to when YY_LOOK_FOR is found  |
                      00582 ;                    |______|______|______|______|______|______|______|______|
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00583 ; YY_YY              |                                                       |
                      00584 ;                    |     General-purpose storage for use inside commands   |
                      00585 ;                    |______|______|______|______|______|______|______|______|
                      00586 ; LAST_ERROR         |                                                       |
                      00587 ;                    |  Last error code encountered (cleared when reported)  |
                      00588 ;                    |______|______|______|______|______|______|______|______|
                      00589 ; CUR_PREH           |                                                       |
                      00590 ;                    |         Pre-cycle count-down ticks left (MSB)         |
                      00591 ;                    |______|______|______|______|______|______|______|______|
                      00592 ; CUR_PRE            |                                                       |
                      00593 ;                    |         Pre-cycle count-down ticks left (LSB)         |
                      00594 ;                    |______|______|______|______|______|______|______|______|
                      00595 ; CUR_SLICE          |                                                       |
                      00596 ;                    |      Slice number within active portion of cycle      |
                      00597 ;                    |______|______|______|______|______|______|______|______|
                      00598 ; TARGET_SSR         |NOT_MY|INVALI|                                         |
                      00599 ;                    | _SSR |D_SSR |    SSR number for current command       |
                      00600 ;                    |______|______|______|______|______|______|______|______|
                      00601 ; OPTION_DEBOUNCE    |                                                       |
                      00602 ;                    |      Counter to debounce OPTION button presses        |
                      00603 ;                    |______|______|______|______|______|______|______|______|
                      00604 ; OPTION_HOLD        |                                                       |
                      00605 ;                    |      Counter for how long OPTION button is held       |
                      00606 ;                    |______|______|______|______|______|______|______|______|
                      00607 ; TEST_CYCLE         |                                                       |
                      00608 ;                    |        Count-down of ZC cycles until next step        |
                      00609 ;                    |______|______|______|______|______|______|______|______|
                      00610 ; TEST_SSR           |             |                                         |
                      00611 ;                    |             |  current SSR being tested               |
                      00612 ;                    |______|______|______|______|______|______|______|______|
                      00613 ; AUTO_OFF_CTRH      |                                                       |
                      00614 ;                    |         countdown register until auto-power-off (MSB) |
                      00615 ;                    |______|______|______|______|______|______|______|______|
                      00616 ; AUTO_OFF_CTRL      |                                                       |
                      00617 ;                    |         countdown register until auto-power-off (LSB) |
                      00618 ;                    |______|______|______|______|______|______|______|______|
                      00619 ; I                  |                                                       |
                      00620 ;                    |      General-purpose local counter variable           |
                      00621 ;                    |______|______|______|______|______|______|______|______|
                      00622 ; J                  |                                                       |
                      00623 ;                    |      General-purpose local counter variable           |
                      00624 ;                    |______|______|______|______|______|______|______|______|
                      00625 ; K                  |                                                       |
                      00626 ;                    |      General-purpose local counter variable           |
                      00627 ;                    |______|______|______|______|______|______|______|______|
                      00628 ; KK                 |                                                       |
                      00629 ;                    |      General-purpose local counter variable           |
                      00630 ;                    |______|______|______|______|______|______|______|______|
                      00631 ; TR_I               |                                                       |
                      00632 ;                    |      T/R delay timer delay counter                    |
                      00633 ;                    |______|______|______|______|______|______|______|______|
                      00634 ;
                      00635 ;
                      00636 ;------------------------------------------------------------------------------
                      00637 ; (SSR_DATA_BANK)
                      00638 ;------------------------------------------------------------------------------
                      00639 ;
                      00640 ; *** THE FOLLOWING BLOCKS *MUST* BE THE SAME SIZE AS EACH OTHER ***
                      00641 ;
                      00642 ;                     ___7______6______5______4______3______2______1______0__
                      00643 ; SSR_00_VALUE       |                                                       |
                      00644 ;                    | Brightness value of SSR #00 (00=off, ... FF=fully on) |
                      00645 ;                    |______|______|______|______|______|______|______|______|
                      00646 ;                    |                                                       |
                      00647 ;                    | Brightness value of SSR #01 (00=off, ... FF=fully on) |
                      00648 ;                    |______|______|______|______|______|______|______|______|
                      00649 ;                                                .
                      00650 ;                                                .
                      00651 ;                     ___________________________.___________________________
                      00652 ;                    |                                                       |
                      00653 ;                    | Brightness value of SSR #23 (00=off, ... FF=fully on) |
                      00654 ;                    |______|______|______|______|______|______|______|______|
                      00655 ;                    |                                                       |
                      00656 ;                    | Brightness value of Green   (00=off, ... FF=fully on) |
                      00657 ;                    |______|______|______|______|______|______|______|______|
                      00658 ;                    |                                                       |
                      00659 ;                    | Brightness value of Yellow  (00=off, ... FF=fully on) |
                      00660 ;                    |______|______|______|______|______|______|______|______|
                      00661 ;                    |                                                       |
                      00662 ;                    | Brightness value of Red     (00=off, ... FF=fully on) |
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00663 ;                    |______|______|______|______|______|______|______|______|
                      00664 ;                    | IF MASTER/STANDALONE:                                 |
                      00665 ;                    | Brightness value of Active  (00=off, ... FF=fully on) |
                      00666 ;                    |______|______|______|______|______|______|______|______|
                      00667 ; SSR_00_FLAGS       | FADE | FADE | FADE_|MAX_OF|      |      |      |      |
                      00668 ;                    | _UP  | _DOWN| CYCLE|F_TIME|      |      |      |      |
                      00669 ;                    |______|______|______|______|______|______|______|______|
                      00670 ;                                                .
                      00671 ;                                                .
                      00672 ;                     ___________________________.___________________________
                      00673 ; SSR_00_STEP        |                                                       |
                      00674 ;                    |          Brightness increment (0..255)                |
                      00675 ;                    |______|______|______|______|______|______|______|______|
                      00676 ;                                                .
                      00677 ;                                                .
                      00678 ;                     ___________________________.___________________________
                      00679 ; SSR_00_SPEED       |                                                       |
                      00680 ;                    |          Cycles between each step (0..255)            |
                      00681 ;                    |______|______|______|______|______|______|______|______|
                      00682 ;                                                .
                      00683 ;                                                .
                      00684 ;                     ___________________________.___________________________
                      00685 ; SSR_00_COUNTER     |                                                       |
                      00686 ;                    |          Cycles until next step (0..255)              |
                      00687 ;                    |______|______|______|______|______|______|______|______|
                      00688 ;                                                .
                      00689 ;                                                .
                      00690 ;                                                .                           
                      00691 ;
  0000                00692         GLOBAL  QSCC_START
  0000                00693         GLOBAL  QSCC_MAIN
  0000                00694         GLOBAL  QSCC_CMD5_START
  0000                00695         GLOBAL  QS_STOP_SCANNER
                      00696 
                      00697 ;------------------------------------------------------------------------------
                      00698 ; QUIZSHOW_DATA BANK
                      00699 ;------------------------------------------------------------------------------
                      00700 ;
                      00701 ;                     ___7______6______5______4______3______2______1______0__
                      00702 ; BTN_X0_TIME_T      |                                                       |
                      00703 ;                    |         Button press time (uS) <31:24>                |
                      00704 ;                    |______|______|______|______|______|______|______|______|
                      00705 ; BTN_X1_TIME_T      |                                                       |
                      00706 ;                    |         Button press time (uS) <31:24>                |
                      00707 ;                    |______|______|______|______|______|______|______|______|
                      00708 ;                                                :
                      00709 ;                     ___________________________:___________________________
                      00710 ; BTN_X0_TIME_U      |                                                       |
                      00711 ;                    |         Button press time (uS) <23:16>                |
                      00712 ;                    |______|______|______|______|______|______|______|______|
                      00713 ;                                                :
                      00714 ;                     ___________________________:___________________________
                      00715 ; BTN_X0_TIME_H      |                                                       |
                      00716 ;                    |         Button press time (uS) <15:8>                 |
                      00717 ;                    |______|______|______|______|______|______|______|______|
                      00718 ;                                                :
                      00719 ;                     ___________________________:___________________________
                      00720 ; BTN_X0_TIME_L      |                                                       |
                      00721 ;                    |         Button press time (uS) <7:0>                  |
                      00722 ;                    |______|______|______|______|______|______|______|______|
                      00723 ;                                                :
                      00724 ;                     ___________________________:___________________________
                      00725 ;
                      00726 ;      .
                      00727 ;      .        Ditto for L0, X1, L1, X2, L2, X3, L3, X4, L4            (QSRC)
                      00728 ;      .        Or... for L0, A, B, C, D                                (QSCC)
                      00729 ;
  00000C00            00730 QUIZSHOW_DATA   EQU     0xC00
                      00731 _QUIZSHOW_DATA  UDATA   QUIZSHOW_DATA
000C00                00732 BTN_X0_TIME_T   RES     N_BUTTONS       ; button press times (bits 31-24)
000C0A                00733 BTN_X0_TIME_U   RES     N_BUTTONS       ; button press times (bits 23-16)
000C14                00734 BTN_X0_TIME_H   RES     N_BUTTONS       ; button press times (bits 15-08)
000C1E                00735 BTN_X0_TIME_L   RES     N_BUTTONS       ; button press times (bits 07-00)
000C28                00736 BTN_X0_FLAGS    RES     N_BUTTONS       ; button flags
000C32                00737 BTN_X0_LOCKTMR  RES     N_BUTTONS       ; number of 1/120 sec remaining in lock
000C3C                00738 BTN_X0_DEB_TMR  RES     N_BUTTONS       ; number of polls to satisfy debounce logic
000C46                00739 QUIZSHOW_LCKTM  RES     1               ; number of 1/120 sec we lock out offenders
                      00740 _QUIZSHOW_CODE  CODE
                      00741 
                      00742 
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00743 ;
                      00744 ; Clear all button timers and states
                      00745 ;
                      00746 CLEAR_BUTTONS MACRO FULL_RESET
                      00747 CB_IDX  SET     0
                      00748         WHILE   CB_IDX < N_BUTTONS
                      00749          CLRF   BTN_X0_TIME_T+#v(CB_IDX), BANKED
                      00750          CLRF   BTN_X0_TIME_U+#v(CB_IDX), BANKED
                      00751          CLRF   BTN_X0_TIME_H+#v(CB_IDX), BANKED
                      00752          CLRF   BTN_X0_TIME_L+#v(CB_IDX), BANKED
                      00753          IF FULL_RESET
                      00754           CLRF  BTN_X0_FLAGS+#v(CB_IDX), BANKED
                      00755           CLRF  BTN_X0_LOCKTMR+#v(CB_IDX), BANKED
                      00756           CLRF  BTN_X0_DEB_TMR+#v(CB_IDX), BANKED
                      00757          ELSE
                      00758           BCF   BTN_X0_FLAGS+#v(CB_IDX), BTN_FLG_PRESSED, BANKED
                      00759          ENDIF
                      00760 CB_IDX   ++
                      00761         ENDW
                      00762         ENDM
                      00763                 
                      00764 ;
                      00765 ; Startup code (on top of what LUMOS_START does), right before the main loop
                      00766 ; is launched.
                      00767 ;
000000                00768 QSCC_START:
000000 0004           00769         CLRWDT
000002 010C           00770         BANKSEL QUIZSHOW_DATA
000004 6A00           00771         CLRF    QUIZSHOW_FLAGS, ACCESS
000006 0E3C           00772         MOVLW   .60
000008 6F00           00773         MOVWF   QUIZSHOW_LCKTM, BANKED                  ; lockout time is 1/2 second
                      00774         CLEAR_BUTTONS 1
  00000000                M CB_IDX  SET     0
                          M         WHILE   CB_IDX < N_BUTTONS
00000A 6B00               M          CLRF   BTN_X0_TIME_T+0,          BANKED
00000C 6B00               M          CLRF   BTN_X0_TIME_U+0,          BANKED
00000E 6B00               M          CLRF   BTN_X0_TIME_H+0,          BANKED
000010 6B00               M          CLRF   BTN_X0_TIME_L+0,          BANKED
                          M          IF 1
000012 6B00               M           CLRF  BTN_X0_FLAGS+0,          BANKED
000014 6B00               M           CLRF  BTN_X0_LOCKTMR+0,          BANKED
000016 6B00               M           CLRF  BTN_X0_DEB_TMR+0,          BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+0,          BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000001                M CB_IDX   ++
000018 6B00               M          CLRF   BTN_X0_TIME_T+1,          BANKED
00001A 6B00               M          CLRF   BTN_X0_TIME_U+1,          BANKED
00001C 6B00               M          CLRF   BTN_X0_TIME_H+1,          BANKED
00001E 6B00               M          CLRF   BTN_X0_TIME_L+1,          BANKED
                          M          IF 1
000020 6B00               M           CLRF  BTN_X0_FLAGS+1,          BANKED
000022 6B00               M           CLRF  BTN_X0_LOCKTMR+1,          BANKED
000024 6B00               M           CLRF  BTN_X0_DEB_TMR+1,          BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+1,          BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000002                M CB_IDX   ++
000026 6B00               M          CLRF   BTN_X0_TIME_T+2,          BANKED
000028 6B00               M          CLRF   BTN_X0_TIME_U+2,          BANKED
00002A 6B00               M          CLRF   BTN_X0_TIME_H+2,          BANKED
00002C 6B00               M          CLRF   BTN_X0_TIME_L+2,          BANKED
                          M          IF 1
00002E 6B00               M           CLRF  BTN_X0_FLAGS+2,          BANKED
000030 6B00               M           CLRF  BTN_X0_LOCKTMR+2,          BANKED
000032 6B00               M           CLRF  BTN_X0_DEB_TMR+2,          BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+2,          BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000003                M CB_IDX   ++
000034 6B00               M          CLRF   BTN_X0_TIME_T+3,          BANKED
000036 6B00               M          CLRF   BTN_X0_TIME_U+3,          BANKED
000038 6B00               M          CLRF   BTN_X0_TIME_H+3,          BANKED
00003A 6B00               M          CLRF   BTN_X0_TIME_L+3,          BANKED
                          M          IF 1
00003C 6B00               M           CLRF  BTN_X0_FLAGS+3,          BANKED
00003E 6B00               M           CLRF  BTN_X0_LOCKTMR+3,          BANKED
000040 6B00               M           CLRF  BTN_X0_DEB_TMR+3,          BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+3,          BTN_FLG_PRESSED, BANKED
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M          ENDIF
  00000004                M CB_IDX   ++
000042 6B00               M          CLRF   BTN_X0_TIME_T+4,          BANKED
000044 6B00               M          CLRF   BTN_X0_TIME_U+4,          BANKED
000046 6B00               M          CLRF   BTN_X0_TIME_H+4,          BANKED
000048 6B00               M          CLRF   BTN_X0_TIME_L+4,          BANKED
                          M          IF 1
00004A 6B00               M           CLRF  BTN_X0_FLAGS+4,          BANKED
00004C 6B00               M           CLRF  BTN_X0_LOCKTMR+4,          BANKED
00004E 6B00               M           CLRF  BTN_X0_DEB_TMR+4,          BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+4,          BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000005                M CB_IDX   ++
000050 6B00               M          CLRF   BTN_X0_TIME_T+5,          BANKED
000052 6B00               M          CLRF   BTN_X0_TIME_U+5,          BANKED
000054 6B00               M          CLRF   BTN_X0_TIME_H+5,          BANKED
000056 6B00               M          CLRF   BTN_X0_TIME_L+5,          BANKED
                          M          IF 1
000058 6B00               M           CLRF  BTN_X0_FLAGS+5,          BANKED
00005A 6B00               M           CLRF  BTN_X0_LOCKTMR+5,          BANKED
00005C 6B00               M           CLRF  BTN_X0_DEB_TMR+5,          BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+5,          BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000006                M CB_IDX   ++
00005E 6B00               M          CLRF   BTN_X0_TIME_T+6,          BANKED
000060 6B00               M          CLRF   BTN_X0_TIME_U+6,          BANKED
000062 6B00               M          CLRF   BTN_X0_TIME_H+6,          BANKED
000064 6B00               M          CLRF   BTN_X0_TIME_L+6,          BANKED
                          M          IF 1
000066 6B00               M           CLRF  BTN_X0_FLAGS+6,          BANKED
000068 6B00               M           CLRF  BTN_X0_LOCKTMR+6,          BANKED
00006A 6B00               M           CLRF  BTN_X0_DEB_TMR+6,          BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+6,          BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000007                M CB_IDX   ++
00006C 6B00               M          CLRF   BTN_X0_TIME_T+7,          BANKED
00006E 6B00               M          CLRF   BTN_X0_TIME_U+7,          BANKED
000070 6B00               M          CLRF   BTN_X0_TIME_H+7,          BANKED
000072 6B00               M          CLRF   BTN_X0_TIME_L+7,          BANKED
                          M          IF 1
000074 6B00               M           CLRF  BTN_X0_FLAGS+7,          BANKED
000076 6B00               M           CLRF  BTN_X0_LOCKTMR+7,          BANKED
000078 6B00               M           CLRF  BTN_X0_DEB_TMR+7,          BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+7,          BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000008                M CB_IDX   ++
00007A 6B00               M          CLRF   BTN_X0_TIME_T+8,          BANKED
00007C 6B00               M          CLRF   BTN_X0_TIME_U+8,          BANKED
00007E 6B00               M          CLRF   BTN_X0_TIME_H+8,          BANKED
000080 6B00               M          CLRF   BTN_X0_TIME_L+8,          BANKED
                          M          IF 1
000082 6B00               M           CLRF  BTN_X0_FLAGS+8,          BANKED
000084 6B00               M           CLRF  BTN_X0_LOCKTMR+8,          BANKED
000086 6B00               M           CLRF  BTN_X0_DEB_TMR+8,          BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+8,          BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000009                M CB_IDX   ++
000088 6B00               M          CLRF   BTN_X0_TIME_T+9,          BANKED
00008A 6B00               M          CLRF   BTN_X0_TIME_U+9,          BANKED
00008C 6B00               M          CLRF   BTN_X0_TIME_H+9,          BANKED
00008E 6B00               M          CLRF   BTN_X0_TIME_L+9,          BANKED
                          M          IF 1
000090 6B00               M           CLRF  BTN_X0_FLAGS+9,          BANKED
000092 6B00               M           CLRF  BTN_X0_LOCKTMR+9,          BANKED
000094 6B00               M           CLRF  BTN_X0_DEB_TMR+9,          BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+9,          BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  0000000A                M CB_IDX   ++
                          M         ENDW
000096 0004           00775         CLRWDT
                      00776         ;
                      00777         ; Special Modes
                      00778         ; If the unit powers up with A+C (X0+L2) held down, it goes into config mode.
                      00779         ; XXX If it powers up with L0+X1 held down, it goes into standalone mode. (future)
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00780         ; 
000098 0E3F           00781         MOVLW   QS_SENS_MASK
00009A 1480           00782         ANDWF   QS_SENS_PORT, W, ACCESS
00009C 0A28           00783         XORLW   QS_SENS_CONF
00009E E1??           00784         BNZ     QSCC_SENS_END
                      00785 
0000A0 8800           00786         BSF     SSR_STATE, PRIV_MODE, ACCESS
                      00787         SET_SSR_RAPID_FADE CHAN_HB      ; CHANGES BANK!
                          M          SET_SSR_PATTERN CHAN_HB, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0000A2 0104               M         BANKSEL SSR_DATA_BANK
0000A4 0E00               M          MOVLW  0
0000A6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_HB, BANKED
0000A8 0E04               M          MOVLW  4
0000AA 6F00               M          MOVWF  SSR_00_STEP+CHAN_HB, BANKED
0000AC 0E01               M          MOVLW  1
0000AE 6F00               M          MOVWF  SSR_00_SPEED+CHAN_HB, BANKED
0000B0 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_HB, BANKED
0000B2 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0000B4 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_HB, BANKED
                      00788 
0000B6                00789 QSCC_SENS_END:
                      00790         SET_SSR_NORMAL_MODE CHAN_HB     ; CHANGES BANK!
                          M          SET_SSR_PATTERN CHAN_HB, 0, 1, 3, BIT_FADE_UP|BIT_FADE_CYCLE
0000B6 0104               M         BANKSEL SSR_DATA_BANK
0000B8 0E00               M          MOVLW  0
0000BA 6F00               M          MOVWF  SSR_00_VALUE+CHAN_HB, BANKED
0000BC 0E01               M          MOVLW  1
0000BE 6F00               M          MOVWF  SSR_00_STEP+CHAN_HB, BANKED
0000C0 0E03               M          MOVLW  3
0000C2 6F00               M          MOVWF  SSR_00_SPEED+CHAN_HB, BANKED
0000C4 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_HB, BANKED
0000C6 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0000C8 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_HB, BANKED
0000CA 0012           00791         RETURN
                      00792 ;
                      00793 ; Main loop code (in addition to Lumos' main loop code)
                      00794 ;
  0000                00795         EXTERN  SSR_00_VALUE
  0000                00796         EXTERN  SSR_00_FLAGS
  0000                00797         EXTERN  SSR_00_STEP
  0000                00798         EXTERN  SSR_00_SPEED
  0000                00799         EXTERN  SSR_00_COUNTER
                      00800 
0000CC                00801 QSCC_MAIN:
0000CC 0004           00802         CLRWDT
                      00803 ;
                      00804 ;
                      00805 ; SCAN_DEBOUNCE <BTN_IDX>, <PORT>, <BIT>, <LT>, <N>, <LCK>
                      00806 ;       Updates the state of the specified button.
                      00807 ;       Uses the button's debounce counter to buffer transition noise.
                      00808 ;       when the counter fills or drains completely, the ACTIVE status
                      00809 ;       bit flips to note the official real-time state of the button.
                      00810 ;       This triggers local action on LOCKED status and registering
                      00811 ;       button presses while scanning.  Controls local lights only
                      00812 ;       to the extent mandated for these actions.
                      00813 ;
  00000000            00814 SCN_DBN SET     0
                      00815 SCAN_DEBOUNCE MACRO BTN_IDX, BTN_PORT, BTN_BIT, LT, LTN, LCK
                      00816         BANKSEL QUIZSHOW_DATA
                      00817         CLRWDT
                      00818         ;
                      00819         ; Sense button state: 
                      00820         ;  0=pressed
                      00821         ;  1=released
                      00822         ;
                      00823         BTFSS   #v(BTN_PORT), BTN_BIT, ACCESS
                      00824         BRA     SCN_DB_DOWN_#v(SCN_DBN) ; pressed? branch
                      00825         ;
                      00826         ; button senses as "up". drain debounce counter if possible
                      00827         ;
                      00828         TSTFSZ  BTN_X0_DEB_TMR+#v(BTN_IDX), BANKED
                      00829         BRA     SCN_DB_DRAIN_#v(SCN_DBN)
                      00830         ;
                      00831         ; The button is officially "up".  If this is news, respond
                      00832         ; to this change now.  All we need to do is note the status
                      00833         ; change. Everything else happens later when the code notices
                      00834         ; this flag state.
                      00835         ;
                      00836         BCF     BTN_X0_FLAGS+#v(BTN_IDX), BTN_FLG_ACTIVE, BANKED
                      00837         BRA     SCN_DB_DONE_#v(SCN_DBN)
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00838 
                      00839 SCN_DB_DRAIN_#v(SCN_DBN):
                      00840         ;
                      00841         ; Drain the button debounce counter
                      00842         ;
                      00843         DECF    BTN_X0_DEB_TMR+#v(BTN_IDX), F, BANKED
                      00844         BRA     SCN_DB_DONE_#v(SCN_DBN)
                      00845 
                      00846 SCN_DB_RST_LCK_#v(SCN_DBN):
                      00847         ;
                      00848         ; The button needs to be locked out!
                      00849         ; We found them pushing the button when they weren't supposed to.
                      00850         ;
                      00851         BSF     BTN_X0_FLAGS+#v(BTN_IDX), BTN_FLG_LOCKED, BANKED
                      00852         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+#v(BTN_IDX)
                      00853         LOCAL_LIGHT_INDICATOR BTN_IDX, LT, LTN, LCK
                      00854         BRA     SCN_DB_DONE_#v(SCN_DBN)
                      00855 
                      00856 SCN_DB_DOWN_#v(SCN_DBN):
                      00857         ;
                      00858         ; button senses as "down". fill debounce counter if possible
                      00859         ;
                      00860         INCFSZ  BTN_X0_DEB_TMR+#v(BTN_IDX), F, BANKED
                      00861         BRA     SCN_DB_DONE_#v(SCN_DBN)
                      00862         ;
                      00863         ; counter was full (since we overflowed it to 0 again). so
                      00864         ; the button is officially "down".  Put the counter back
                      00865         ; to 255 and proceed with what it means for the button to be
                      00866         ; officially down.
                      00867         ;
                      00868         SETF    BTN_X0_DEB_TMR+#v(BTN_IDX), BANKED
                      00869         BTFSC   BTN_X0_FLAGS+#v(BTN_IDX), BTN_FLG_LOCKED, BANKED        ; is it locked?
                      00870         BRA     SCN_DB_RST_LCK_#v(SCN_DBN)                      ; stay locked longer
                      00871         BTFSC   BTN_X0_FLAGS+#v(BTN_IDX), BTN_FLG_ACTIVE, BANKED        ; if we already saw the button p
                            ress
                      00872         BRA     SCN_DB_DONE_#v(SCN_DBN)                         ;   then we don't need to do anything mo
                            re
                      00873         ;
                      00874         ; We didn't know the button was down yet. Let's see what
                      00875         ; that changes...
                      00876         ;
                      00877         BSF     BTN_X0_FLAGS+#v(BTN_IDX), BTN_FLG_ACTIVE, BANKED        ; mark as "down"
                      00878         BTFSC   BTN_X0_FLAGS+#v(BTN_IDX), BTN_FLG_MASKED, BANKED        ; is it masked?
                      00879         BRA     SCN_DB_DONE_#v(SCN_DBN)                         ; then ignore it
                      00880         BTFSC   BTN_X0_FLAGS+#v(BTN_IDX), BTN_FLG_PRESSED, BANKED       ; already noted?
                      00881         BRA     SCN_DB_DONE_#v(SCN_DBN)                         ; then we're already done
                      00882         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS        ; legal to press?
                      00883         BRA     SCN_DB_RST_LCK_#v(SCN_DBN)                      ; if not, lock out!
                      00884         ;
                      00885         ; The button was pressed legally and this is the first time we
                      00886         ; noticed it. Record it as the official press for this button.
                      00887         ;
                      00888         BSF     BTN_X0_FLAGS+#v(BTN_IDX), BTN_FLG_PRESSED, BANKED
                      00889         BCF     INTCON, 7, ACCESS                               ; disable interrupts
                      00890         BCF     INTCON, 6, ACCESS                               ; disable interrupts
                      00891         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+#v(BTN_IDX)
                      00892         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+#v(BTN_IDX)
                      00893         MOVFF   TMR1L, BTN_X0_TIME_L+#v(BTN_IDX)
                      00894         MOVFF   TMR1H, BTN_X0_TIME_H+#v(BTN_IDX)
                      00895         BSF     INTCON, 7, ACCESS                               ; enable interrupts
                      00896         BSF     INTCON, 6, ACCESS                               ; enable interrupts
                      00897         LOCAL_LIGHT_INDICATOR BTN_IDX, LT, LTN, LCK
                      00898 
                      00899 SCN_DB_DONE_#v(SCN_DBN):
                      00900         ;
                      00901         ; We're done with the button debouncing operations.
                      00902         ;
                      00903         ; If we're processing the 120Hz cleanup operations, do them now
                      00904         ; for this button.
                      00905         ;
                      00906         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
                      00907         BRA     SCN_DB_END_#v(SCN_DBN)
                      00908         ;
                      00909         ; If the button is locked out, decrement its timer. If it reaches
                      00910         ; zero, we can release the lock now.
                      00911         ;
                      00912         BTFSC   BTN_X0_FLAGS+#v(BTN_IDX), BTN_FLG_LOCKED, BANKED
                      00913         DECFSZ  BTN_X0_LOCKTMR+#v(BTN_IDX), F, BANKED
                      00914         BRA     SCN_DB_END_#v(SCN_DBN)
                      00915         BCF     BTN_X0_FLAGS+#v(BTN_IDX), BTN_FLG_LOCKED, BANKED        ; release the lock
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00916         BCF     BTN_X0_FLAGS+#v(BTN_IDX), BTN_FLG_LCK_ACK, BANKED
                      00917         LOCAL_LIGHT_INDICATOR BTN_IDX, LT, LTN, LCK
                      00918 
                      00919 SCN_DB_END_#v(SCN_DBN):
                      00920 SCN_DBN ++
                      00921         ENDM
                      00922 
                      00923 ;
                      00924 ; LOCAL_LIGHT_INDICATOR <button index>, <light index>, <lights>, <lock light>
                      00925 ;       Turns on lights to indicate button state that we manage locally here
                      00926 ;       on the console (as opposed to what the external host does)
                      00927 ;       
                      00928 ;       When the scanner starts, enabled buttons are illuminated white, disabled are off.
                      00929 ;       Anytime a button is locked, it is illuminated in flashing red.
                      00930 ; 
                      00931 ;
  00000000            00932 LLIM_N  SET     0
                      00933 LOCAL_LIGHT_INDICATOR MACRO BTN_IDX, LT, LTN, LCK
                      00934         BANKSEL QUIZSHOW_DATA
                      00935         BTFSS   BTN_X0_FLAGS+#v(BTN_IDX), BTN_FLG_LOCKED, BANKED
                      00936         BRA     LLIM_NOT_LOCKED_#v(LLIM_N)
                      00937         BTFSC   BTN_X0_FLAGS+#v(BTN_IDX), BTN_FLG_LCK_ACK, BANKED
                      00938         BRA     LLIM_NOT_LOCKED_#v(LLIM_N)
                      00939         ;
                      00940         ; light up for locked mode for the first time
                      00941         ;
                      00942         BSF     BTN_X0_FLAGS+#v(BTN_IDX), BTN_FLG_LCK_ACK, BANKED       ; don't do it again
                      00943 LLIM_LTN SET    LTN
                      00944         WHILE LLIM_LTN > 0
                      00945 LLIM_LTN --
                      00946          SET_SSR_OFF #v(LT+LLIM_LTN)
                      00947         ENDW
                      00948         SET_SSR_RAPID_FADE LCK
                      00949         BRA     LLIM_END_#v(LLIM_N)
                      00950 
                      00951 LLIM_NOT_LOCKED_#v(LLIM_N):
                      00952         BTFSC   BTN_X0_FLAGS+#v(BTN_IDX), BTN_FLG_MASKED, BANKED
                      00953         BRA     LLIM_OFF_#v(LLIM_N)
                      00954         BTFSC   BTN_X0_FLAGS+#v(BTN_IDX), BTN_FLG_PRESSED, BANKED
                      00955         BRA     LLIM_OFF_#v(LLIM_N)
                      00956         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
                      00957         BRA     LLIM_OFF_#v(LLIM_N)
                      00958         ;
                      00959         ; scanning and not pressed or masked? light up fully
                      00960         ;
                      00961 LLIM_LTN SET    LTN
                      00962         WHILE LLIM_LTN > 0
                      00963 LLIM_LTN --
                      00964          SET_SSR_STEADY #v(LT+LLIM_LTN)
                      00965         ENDW
                      00966         BRA     LLIM_END_#v(LLIM_N)
                      00967         
                      00968 LLIM_OFF_#v(LLIM_N):
                      00969         ;
                      00970         ; button pressed or masked, or scan is off; 
                      00971         ; turn off until the host computer
                      00972         ; stops the scan and awards the winner
                      00973         ;
                      00974 LLIM_LTN SET    LTN
                      00975         WHILE LLIM_LTN > 0
                      00976 LLIM_LTN --
                      00977          SET_SSR_OFF #v(LT+LLIM_LTN)
                      00978         ENDW
                      00979 
                      00980 LLIM_END_#v(LLIM_N):
                      00981         BANKSEL QUIZSHOW_DATA
                      00982 LLIM_N  ++
                      00983         ENDM
                      00984 
0000CE 010C           00985         BANKSEL QUIZSHOW_DATA
0000D0 A200           00986         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_ON_120_S, ACCESS
0000D2 D???           00987         BRA     SCAN_DEBOUNCERS
0000D4 8400           00988         BSF     QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
0000D6 9200           00989         BCF     QUIZSHOW_FLAGS, QS_FLAG_ON_120_S, ACCESS
                      00990 
0000D8                00991 SCAN_DEBOUNCERS:
                      00992         IF LUMOS_CHIP_TYPE == LUMOS_CHIP_QSCC
                      00993          SCAN_DEBOUNCE  BTN_IDX_X0, PORT_X0, BIT_X0, CHAN_X0R, 3, CHAN_X0R
                      00994          SCAN_DEBOUNCE  BTN_IDX_L0, PORT_L0, BIT_L0, CHAN_L0R, 2, CHAN_L0R
                      00995          SCAN_DEBOUNCE  BTN_IDX_A0, PORT_A0, BIT_A0, CHAN_A0L, 1, CHAN_A0L
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00996          SCAN_DEBOUNCE  BTN_IDX_B0, PORT_B0, BIT_B0, CHAN_B0L, 1, CHAN_B0L
                      00997          SCAN_DEBOUNCE  BTN_IDX_C0, PORT_C0, BIT_C0, CHAN_C0L, 1, CHAN_C0L
                      00998          SCAN_DEBOUNCE  BTN_IDX_D0, PORT_D0, BIT_D0, CHAN_D0L, 1, CHAN_D0L
                      00999         ELSE
                      01000          IF LUMOS_CHIP_TYPE == LUMOS_CHIP_QSRC
                      01001           SCAN_DEBOUNCE BTN_IDX_X0, PORT_X0, BIT_X0, CHAN_X0R, 3, CHAN_X0R
0000D8 010C               M         BANKSEL QUIZSHOW_DATA
0000DA 0004               M         CLRWDT
                          M         ;
                          M         ; Sense button state: 
                          M         ;  0=pressed
                          M         ;  1=released
                          M         ;
0000DC A680               M         BTFSS   3968,         BIT_X0,  ACCESS
0000DE D???               M         BRA     SCN_DB_DOWN_0           ; pressed? branch
                          M         ;
                          M         ; button senses as "up". drain debounce counter if possible
                          M         ;
0000E0 6700               M         TSTFSZ  BTN_X0_DEB_TMR+0,           BANKED
0000E2 D???               M         BRA     SCN_DB_DRAIN_0
                          M         ;
                          M         ; The button is officially "up".  If this is news, respond
                          M         ; to this change now.  All we need to do is note the status
                          M         ; change. Everything else happens later when the code notices
                          M         ; this flag state.
                          M         ;
0000E4 9700               M         BCF     BTN_X0_FLAGS+0,           BTN_FLG_ACTIVE, BANKED
0000E6 D???               M         BRA     SCN_DB_DONE_0
                          M 
0000E8                    M SCN_DB_DRAIN_0:
                          M         ;
                          M         ; Drain the button debounce counter
                          M         ;
0000E8 0700               M         DECF    BTN_X0_DEB_TMR+0,           F, BANKED
0000EA D???               M         BRA     SCN_DB_DONE_0
                          M 
0000EC                    M SCN_DB_RST_LCK_0:
                          M         ;
                          M         ; The button needs to be locked out!
                          M         ; We found them pushing the button when they weren't supposed to.
                          M         ;
0000EC 8500               M         BSF     BTN_X0_FLAGS+0,           BTN_FLG_LOCKED, BANKED
0000EE C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+0
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X0, CHAN_X0R, 3, CHAN_X0R
0000F2 010C               M         BANKSEL QUIZSHOW_DATA
0000F4 A500               M         BTFSS   BTN_X0_FLAGS+0,           BTN_FLG_LOCKED, BANKED
0000F6 D???               M         BRA     LLIM_NOT_LOCKED_0
0000F8 B900               M         BTFSC   BTN_X0_FLAGS+0,           BTN_FLG_LCK_ACK, BANKED
0000FA D???               M         BRA     LLIM_NOT_LOCKED_0
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
0000FC 8900               M         BSF     BTN_X0_FLAGS+0,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 2
                          M          SET_SSR_VALUE 2,   0
0000FE 0104               M         BANKSEL SSR_DATA_BANK
000100 0E00               M          MOVLW  0
000102 6F00               M          MOVWF  SSR_00_VALUE+2,   BANKED
000104 6B00               M          CLRF   SSR_00_STEP+2,   BANKED
000106 6B00               M          CLRF   SSR_00_SPEED+2,   BANKED
000108 6B00               M          CLRF   SSR_00_COUNTER+2,   BANKED
00010A 6B00               M          CLRF   SSR_00_FLAGS+2,   BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 1
                          M          SET_SSR_VALUE 1,   0
00010C 0104               M         BANKSEL SSR_DATA_BANK
00010E 0E00               M          MOVLW  0
000110 6F00               M          MOVWF  SSR_00_VALUE+1,   BANKED
000112 6B00               M          CLRF   SSR_00_STEP+1,   BANKED
000114 6B00               M          CLRF   SSR_00_SPEED+1,   BANKED
000116 6B00               M          CLRF   SSR_00_COUNTER+1,   BANKED
000118 6B00               M          CLRF   SSR_00_FLAGS+1,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 0
                          M          SET_SSR_VALUE 0,   0
00011A 0104               M         BANKSEL SSR_DATA_BANK
00011C 0E00               M          MOVLW  0
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00011E 6F00               M          MOVWF  SSR_00_VALUE+0,   BANKED
000120 6B00               M          CLRF   SSR_00_STEP+0,   BANKED
000122 6B00               M          CLRF   SSR_00_SPEED+0,   BANKED
000124 6B00               M          CLRF   SSR_00_COUNTER+0,   BANKED
000126 6B00               M          CLRF   SSR_00_FLAGS+0,   BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_X0R
                          M          SET_SSR_PATTERN CHAN_X0R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000128 0104               M         BANKSEL SSR_DATA_BANK
00012A 0E00               M          MOVLW  0
00012C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
00012E 0E04               M          MOVLW  4
000130 6F00               M          MOVWF  SSR_00_STEP+CHAN_X0R, BANKED
000132 0E01               M          MOVLW  1
000134 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X0R, BANKED
000136 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X0R, BANKED
000138 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
00013A 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X0R, BANKED
00013C D???               M         BRA     LLIM_END_0
                          M 
00013E                    M LLIM_NOT_LOCKED_0:
00013E B300               M         BTFSC   BTN_X0_FLAGS+0,           BTN_FLG_MASKED, BANKED
000140 D???               M         BRA     LLIM_OFF_0
000142 B100               M         BTFSC   BTN_X0_FLAGS+0,           BTN_FLG_PRESSED, BANKED
000144 D???               M         BRA     LLIM_OFF_0
000146 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000148 D???               M         BRA     LLIM_OFF_0
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_STEADY 2
                          M          SET_SSR_VALUE 2,   255
00014A 0104               M         BANKSEL SSR_DATA_BANK
00014C 0EFF               M          MOVLW  255
00014E 6F00               M          MOVWF  SSR_00_VALUE+2,   BANKED
000150 6B00               M          CLRF   SSR_00_STEP+2,   BANKED
000152 6B00               M          CLRF   SSR_00_SPEED+2,   BANKED
000154 6B00               M          CLRF   SSR_00_COUNTER+2,   BANKED
000156 6B00               M          CLRF   SSR_00_FLAGS+2,   BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_STEADY 1
                          M          SET_SSR_VALUE 1,   255
000158 0104               M         BANKSEL SSR_DATA_BANK
00015A 0EFF               M          MOVLW  255
00015C 6F00               M          MOVWF  SSR_00_VALUE+1,   BANKED
00015E 6B00               M          CLRF   SSR_00_STEP+1,   BANKED
000160 6B00               M          CLRF   SSR_00_SPEED+1,   BANKED
000162 6B00               M          CLRF   SSR_00_COUNTER+1,   BANKED
000164 6B00               M          CLRF   SSR_00_FLAGS+1,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 0
                          M          SET_SSR_VALUE 0,   255
000166 0104               M         BANKSEL SSR_DATA_BANK
000168 0EFF               M          MOVLW  255
00016A 6F00               M          MOVWF  SSR_00_VALUE+0,   BANKED
00016C 6B00               M          CLRF   SSR_00_STEP+0,   BANKED
00016E 6B00               M          CLRF   SSR_00_SPEED+0,   BANKED
000170 6B00               M          CLRF   SSR_00_COUNTER+0,   BANKED
000172 6B00               M          CLRF   SSR_00_FLAGS+0,   BANKED
                          M         ENDW
000174 D???               M         BRA     LLIM_END_0
                          M         
000176                    M LLIM_OFF_0:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 2
                          M          SET_SSR_VALUE 2,   0
000176 0104               M         BANKSEL SSR_DATA_BANK
000178 0E00               M          MOVLW  0
00017A 6F00               M          MOVWF  SSR_00_VALUE+2,   BANKED
00017C 6B00               M          CLRF   SSR_00_STEP+2,   BANKED
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00017E 6B00               M          CLRF   SSR_00_SPEED+2,   BANKED
000180 6B00               M          CLRF   SSR_00_COUNTER+2,   BANKED
000182 6B00               M          CLRF   SSR_00_FLAGS+2,   BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 1
                          M          SET_SSR_VALUE 1,   0
000184 0104               M         BANKSEL SSR_DATA_BANK
000186 0E00               M          MOVLW  0
000188 6F00               M          MOVWF  SSR_00_VALUE+1,   BANKED
00018A 6B00               M          CLRF   SSR_00_STEP+1,   BANKED
00018C 6B00               M          CLRF   SSR_00_SPEED+1,   BANKED
00018E 6B00               M          CLRF   SSR_00_COUNTER+1,   BANKED
000190 6B00               M          CLRF   SSR_00_FLAGS+1,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 0
                          M          SET_SSR_VALUE 0,   0
000192 0104               M         BANKSEL SSR_DATA_BANK
000194 0E00               M          MOVLW  0
000196 6F00               M          MOVWF  SSR_00_VALUE+0,   BANKED
000198 6B00               M          CLRF   SSR_00_STEP+0,   BANKED
00019A 6B00               M          CLRF   SSR_00_SPEED+0,   BANKED
00019C 6B00               M          CLRF   SSR_00_COUNTER+0,   BANKED
00019E 6B00               M          CLRF   SSR_00_FLAGS+0,   BANKED
                          M         ENDW
                          M 
0001A0                    M LLIM_END_0:
0001A0 010C               M         BANKSEL QUIZSHOW_DATA
  00000001                M LLIM_N  ++
0001A2 D???               M         BRA     SCN_DB_DONE_0
                          M 
0001A4                    M SCN_DB_DOWN_0:
                          M         ;
                          M         ; button senses as "down". fill debounce counter if possible
                          M         ;
0001A4 3F00               M         INCFSZ  BTN_X0_DEB_TMR+0,           F, BANKED
0001A6 D???               M         BRA     SCN_DB_DONE_0
                          M         ;
                          M         ; counter was full (since we overflowed it to 0 again). so
                          M         ; the button is officially "down".  Put the counter back
                          M         ; to 255 and proceed with what it means for the button to be
                          M         ; officially down.
                          M         ;
0001A8 6900               M         SETF    BTN_X0_DEB_TMR+0,           BANKED
0001AA B500               M         BTFSC   BTN_X0_FLAGS+0,           BTN_FLG_LOCKED, BANKED        ; is it locked?
0001AC D???               M         BRA     SCN_DB_RST_LCK_0                                ; stay locked longer
0001AE B700               M         BTFSC   BTN_X0_FLAGS+0,           BTN_FLG_ACTIVE, BANKED        ; if we already saw the button p
                            ress
0001B0 D???               M         BRA     SCN_DB_DONE_0                                   ;   then we don't need to do anything mo
                            re
                          M         ;
                          M         ; We didn't know the button was down yet. Let's see what
                          M         ; that changes...
                          M         ;
0001B2 8700               M         BSF     BTN_X0_FLAGS+0,           BTN_FLG_ACTIVE, BANKED        ; mark as "down"
0001B4 B300               M         BTFSC   BTN_X0_FLAGS+0,           BTN_FLG_MASKED, BANKED        ; is it masked?
0001B6 D???               M         BRA     SCN_DB_DONE_0                                   ; then ignore it
0001B8 B100               M         BTFSC   BTN_X0_FLAGS+0,           BTN_FLG_PRESSED, BANKED       ; already noted?
0001BA D???               M         BRA     SCN_DB_DONE_0                                   ; then we're already done
0001BC A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS        ; legal to press?
0001BE D???               M         BRA     SCN_DB_RST_LCK_0                                ; if not, lock out!
                          M         ;
                          M         ; The button was pressed legally and this is the first time we
                          M         ; noticed it. Record it as the official press for this button.
                          M         ;
0001C0 8100               M         BSF     BTN_X0_FLAGS+0,           BTN_FLG_PRESSED, BANKED
0001C2 9EF2               M         BCF     INTCON, 7, ACCESS                               ; disable interrupts
0001C4 9CF2               M         BCF     INTCON, 6, ACCESS                               ; disable interrupts
0001C6 C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+0
0001CA C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+0
0001CE CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+0
0001D2 CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+0
0001D6 8EF2               M         BSF     INTCON, 7, ACCESS                               ; enable interrupts
0001D8 8CF2               M         BSF     INTCON, 6, ACCESS                               ; enable interrupts
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X0, CHAN_X0R, 3, CHAN_X0R
0001DA 010C               M         BANKSEL QUIZSHOW_DATA
0001DC A500               M         BTFSS   BTN_X0_FLAGS+0,           BTN_FLG_LOCKED, BANKED
0001DE D???               M         BRA     LLIM_NOT_LOCKED_1
0001E0 B900               M         BTFSC   BTN_X0_FLAGS+0,           BTN_FLG_LCK_ACK, BANKED
0001E2 D???               M         BRA     LLIM_NOT_LOCKED_1
                          M         ;
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ; light up for locked mode for the first time
                          M         ;
0001E4 8900               M         BSF     BTN_X0_FLAGS+0,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 2
                          M          SET_SSR_VALUE 2,   0
0001E6 0104               M         BANKSEL SSR_DATA_BANK
0001E8 0E00               M          MOVLW  0
0001EA 6F00               M          MOVWF  SSR_00_VALUE+2,   BANKED
0001EC 6B00               M          CLRF   SSR_00_STEP+2,   BANKED
0001EE 6B00               M          CLRF   SSR_00_SPEED+2,   BANKED
0001F0 6B00               M          CLRF   SSR_00_COUNTER+2,   BANKED
0001F2 6B00               M          CLRF   SSR_00_FLAGS+2,   BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 1
                          M          SET_SSR_VALUE 1,   0
0001F4 0104               M         BANKSEL SSR_DATA_BANK
0001F6 0E00               M          MOVLW  0
0001F8 6F00               M          MOVWF  SSR_00_VALUE+1,   BANKED
0001FA 6B00               M          CLRF   SSR_00_STEP+1,   BANKED
0001FC 6B00               M          CLRF   SSR_00_SPEED+1,   BANKED
0001FE 6B00               M          CLRF   SSR_00_COUNTER+1,   BANKED
000200 6B00               M          CLRF   SSR_00_FLAGS+1,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 0
                          M          SET_SSR_VALUE 0,   0
000202 0104               M         BANKSEL SSR_DATA_BANK
000204 0E00               M          MOVLW  0
000206 6F00               M          MOVWF  SSR_00_VALUE+0,   BANKED
000208 6B00               M          CLRF   SSR_00_STEP+0,   BANKED
00020A 6B00               M          CLRF   SSR_00_SPEED+0,   BANKED
00020C 6B00               M          CLRF   SSR_00_COUNTER+0,   BANKED
00020E 6B00               M          CLRF   SSR_00_FLAGS+0,   BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_X0R
                          M          SET_SSR_PATTERN CHAN_X0R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000210 0104               M         BANKSEL SSR_DATA_BANK
000212 0E00               M          MOVLW  0
000214 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
000216 0E04               M          MOVLW  4
000218 6F00               M          MOVWF  SSR_00_STEP+CHAN_X0R, BANKED
00021A 0E01               M          MOVLW  1
00021C 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X0R, BANKED
00021E 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X0R, BANKED
000220 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000222 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X0R, BANKED
000224 D???               M         BRA     LLIM_END_1
                          M 
000226                    M LLIM_NOT_LOCKED_1:
000226 B300               M         BTFSC   BTN_X0_FLAGS+0,           BTN_FLG_MASKED, BANKED
000228 D???               M         BRA     LLIM_OFF_1
00022A B100               M         BTFSC   BTN_X0_FLAGS+0,           BTN_FLG_PRESSED, BANKED
00022C D???               M         BRA     LLIM_OFF_1
00022E A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000230 D???               M         BRA     LLIM_OFF_1
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_STEADY 2
                          M          SET_SSR_VALUE 2,   255
000232 0104               M         BANKSEL SSR_DATA_BANK
000234 0EFF               M          MOVLW  255
000236 6F00               M          MOVWF  SSR_00_VALUE+2,   BANKED
000238 6B00               M          CLRF   SSR_00_STEP+2,   BANKED
00023A 6B00               M          CLRF   SSR_00_SPEED+2,   BANKED
00023C 6B00               M          CLRF   SSR_00_COUNTER+2,   BANKED
00023E 6B00               M          CLRF   SSR_00_FLAGS+2,   BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_STEADY 1
                          M          SET_SSR_VALUE 1,   255
000240 0104               M         BANKSEL SSR_DATA_BANK
000242 0EFF               M          MOVLW  255
000244 6F00               M          MOVWF  SSR_00_VALUE+1,   BANKED
000246 6B00               M          CLRF   SSR_00_STEP+1,   BANKED
000248 6B00               M          CLRF   SSR_00_SPEED+1,   BANKED
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00024A 6B00               M          CLRF   SSR_00_COUNTER+1,   BANKED
00024C 6B00               M          CLRF   SSR_00_FLAGS+1,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 0
                          M          SET_SSR_VALUE 0,   255
00024E 0104               M         BANKSEL SSR_DATA_BANK
000250 0EFF               M          MOVLW  255
000252 6F00               M          MOVWF  SSR_00_VALUE+0,   BANKED
000254 6B00               M          CLRF   SSR_00_STEP+0,   BANKED
000256 6B00               M          CLRF   SSR_00_SPEED+0,   BANKED
000258 6B00               M          CLRF   SSR_00_COUNTER+0,   BANKED
00025A 6B00               M          CLRF   SSR_00_FLAGS+0,   BANKED
                          M         ENDW
00025C D???               M         BRA     LLIM_END_1
                          M         
00025E                    M LLIM_OFF_1:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 2
                          M          SET_SSR_VALUE 2,   0
00025E 0104               M         BANKSEL SSR_DATA_BANK
000260 0E00               M          MOVLW  0
000262 6F00               M          MOVWF  SSR_00_VALUE+2,   BANKED
000264 6B00               M          CLRF   SSR_00_STEP+2,   BANKED
000266 6B00               M          CLRF   SSR_00_SPEED+2,   BANKED
000268 6B00               M          CLRF   SSR_00_COUNTER+2,   BANKED
00026A 6B00               M          CLRF   SSR_00_FLAGS+2,   BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 1
                          M          SET_SSR_VALUE 1,   0
00026C 0104               M         BANKSEL SSR_DATA_BANK
00026E 0E00               M          MOVLW  0
000270 6F00               M          MOVWF  SSR_00_VALUE+1,   BANKED
000272 6B00               M          CLRF   SSR_00_STEP+1,   BANKED
000274 6B00               M          CLRF   SSR_00_SPEED+1,   BANKED
000276 6B00               M          CLRF   SSR_00_COUNTER+1,   BANKED
000278 6B00               M          CLRF   SSR_00_FLAGS+1,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 0
                          M          SET_SSR_VALUE 0,   0
00027A 0104               M         BANKSEL SSR_DATA_BANK
00027C 0E00               M          MOVLW  0
00027E 6F00               M          MOVWF  SSR_00_VALUE+0,   BANKED
000280 6B00               M          CLRF   SSR_00_STEP+0,   BANKED
000282 6B00               M          CLRF   SSR_00_SPEED+0,   BANKED
000284 6B00               M          CLRF   SSR_00_COUNTER+0,   BANKED
000286 6B00               M          CLRF   SSR_00_FLAGS+0,   BANKED
                          M         ENDW
                          M 
000288                    M LLIM_END_1:
000288 010C               M         BANKSEL QUIZSHOW_DATA
  00000002                M LLIM_N  ++
                          M 
00028A                    M SCN_DB_DONE_0:
                          M         ;
                          M         ; We're done with the button debouncing operations.
                          M         ;
                          M         ; If we're processing the 120Hz cleanup operations, do them now
                          M         ; for this button.
                          M         ;
00028A A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
00028C D???               M         BRA     SCN_DB_END_0
                          M         ;
                          M         ; If the button is locked out, decrement its timer. If it reaches
                          M         ; zero, we can release the lock now.
                          M         ;
00028E B500               M         BTFSC   BTN_X0_FLAGS+0,           BTN_FLG_LOCKED, BANKED
000290 2F00               M         DECFSZ  BTN_X0_LOCKTMR+0,           F, BANKED
000292 D???               M         BRA     SCN_DB_END_0
000294 9500               M         BCF     BTN_X0_FLAGS+0,           BTN_FLG_LOCKED, BANKED        ; release the lock
000296 9900               M         BCF     BTN_X0_FLAGS+0,           BTN_FLG_LCK_ACK, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X0, CHAN_X0R, 3, CHAN_X0R
000298 010C               M         BANKSEL QUIZSHOW_DATA
00029A A500               M         BTFSS   BTN_X0_FLAGS+0,           BTN_FLG_LOCKED, BANKED
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00029C D???               M         BRA     LLIM_NOT_LOCKED_2
00029E B900               M         BTFSC   BTN_X0_FLAGS+0,           BTN_FLG_LCK_ACK, BANKED
0002A0 D???               M         BRA     LLIM_NOT_LOCKED_2
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
0002A2 8900               M         BSF     BTN_X0_FLAGS+0,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 2
                          M          SET_SSR_VALUE 2,   0
0002A4 0104               M         BANKSEL SSR_DATA_BANK
0002A6 0E00               M          MOVLW  0
0002A8 6F00               M          MOVWF  SSR_00_VALUE+2,   BANKED
0002AA 6B00               M          CLRF   SSR_00_STEP+2,   BANKED
0002AC 6B00               M          CLRF   SSR_00_SPEED+2,   BANKED
0002AE 6B00               M          CLRF   SSR_00_COUNTER+2,   BANKED
0002B0 6B00               M          CLRF   SSR_00_FLAGS+2,   BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 1
                          M          SET_SSR_VALUE 1,   0
0002B2 0104               M         BANKSEL SSR_DATA_BANK
0002B4 0E00               M          MOVLW  0
0002B6 6F00               M          MOVWF  SSR_00_VALUE+1,   BANKED
0002B8 6B00               M          CLRF   SSR_00_STEP+1,   BANKED
0002BA 6B00               M          CLRF   SSR_00_SPEED+1,   BANKED
0002BC 6B00               M          CLRF   SSR_00_COUNTER+1,   BANKED
0002BE 6B00               M          CLRF   SSR_00_FLAGS+1,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 0
                          M          SET_SSR_VALUE 0,   0
0002C0 0104               M         BANKSEL SSR_DATA_BANK
0002C2 0E00               M          MOVLW  0
0002C4 6F00               M          MOVWF  SSR_00_VALUE+0,   BANKED
0002C6 6B00               M          CLRF   SSR_00_STEP+0,   BANKED
0002C8 6B00               M          CLRF   SSR_00_SPEED+0,   BANKED
0002CA 6B00               M          CLRF   SSR_00_COUNTER+0,   BANKED
0002CC 6B00               M          CLRF   SSR_00_FLAGS+0,   BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_X0R
                          M          SET_SSR_PATTERN CHAN_X0R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0002CE 0104               M         BANKSEL SSR_DATA_BANK
0002D0 0E00               M          MOVLW  0
0002D2 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
0002D4 0E04               M          MOVLW  4
0002D6 6F00               M          MOVWF  SSR_00_STEP+CHAN_X0R, BANKED
0002D8 0E01               M          MOVLW  1
0002DA 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X0R, BANKED
0002DC 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X0R, BANKED
0002DE 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0002E0 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X0R, BANKED
0002E2 D???               M         BRA     LLIM_END_2
                          M 
0002E4                    M LLIM_NOT_LOCKED_2:
0002E4 B300               M         BTFSC   BTN_X0_FLAGS+0,           BTN_FLG_MASKED, BANKED
0002E6 D???               M         BRA     LLIM_OFF_2
0002E8 B100               M         BTFSC   BTN_X0_FLAGS+0,           BTN_FLG_PRESSED, BANKED
0002EA D???               M         BRA     LLIM_OFF_2
0002EC A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0002EE D???               M         BRA     LLIM_OFF_2
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_STEADY 2
                          M          SET_SSR_VALUE 2,   255
0002F0 0104               M         BANKSEL SSR_DATA_BANK
0002F2 0EFF               M          MOVLW  255
0002F4 6F00               M          MOVWF  SSR_00_VALUE+2,   BANKED
0002F6 6B00               M          CLRF   SSR_00_STEP+2,   BANKED
0002F8 6B00               M          CLRF   SSR_00_SPEED+2,   BANKED
0002FA 6B00               M          CLRF   SSR_00_COUNTER+2,   BANKED
0002FC 6B00               M          CLRF   SSR_00_FLAGS+2,   BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_STEADY 1
                          M          SET_SSR_VALUE 1,   255
0002FE 0104               M         BANKSEL SSR_DATA_BANK
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000300 0EFF               M          MOVLW  255
000302 6F00               M          MOVWF  SSR_00_VALUE+1,   BANKED
000304 6B00               M          CLRF   SSR_00_STEP+1,   BANKED
000306 6B00               M          CLRF   SSR_00_SPEED+1,   BANKED
000308 6B00               M          CLRF   SSR_00_COUNTER+1,   BANKED
00030A 6B00               M          CLRF   SSR_00_FLAGS+1,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 0
                          M          SET_SSR_VALUE 0,   255
00030C 0104               M         BANKSEL SSR_DATA_BANK
00030E 0EFF               M          MOVLW  255
000310 6F00               M          MOVWF  SSR_00_VALUE+0,   BANKED
000312 6B00               M          CLRF   SSR_00_STEP+0,   BANKED
000314 6B00               M          CLRF   SSR_00_SPEED+0,   BANKED
000316 6B00               M          CLRF   SSR_00_COUNTER+0,   BANKED
000318 6B00               M          CLRF   SSR_00_FLAGS+0,   BANKED
                          M         ENDW
00031A D???               M         BRA     LLIM_END_2
                          M         
00031C                    M LLIM_OFF_2:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 2
                          M          SET_SSR_VALUE 2,   0
00031C 0104               M         BANKSEL SSR_DATA_BANK
00031E 0E00               M          MOVLW  0
000320 6F00               M          MOVWF  SSR_00_VALUE+2,   BANKED
000322 6B00               M          CLRF   SSR_00_STEP+2,   BANKED
000324 6B00               M          CLRF   SSR_00_SPEED+2,   BANKED
000326 6B00               M          CLRF   SSR_00_COUNTER+2,   BANKED
000328 6B00               M          CLRF   SSR_00_FLAGS+2,   BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 1
                          M          SET_SSR_VALUE 1,   0
00032A 0104               M         BANKSEL SSR_DATA_BANK
00032C 0E00               M          MOVLW  0
00032E 6F00               M          MOVWF  SSR_00_VALUE+1,   BANKED
000330 6B00               M          CLRF   SSR_00_STEP+1,   BANKED
000332 6B00               M          CLRF   SSR_00_SPEED+1,   BANKED
000334 6B00               M          CLRF   SSR_00_COUNTER+1,   BANKED
000336 6B00               M          CLRF   SSR_00_FLAGS+1,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 0
                          M          SET_SSR_VALUE 0,   0
000338 0104               M         BANKSEL SSR_DATA_BANK
00033A 0E00               M          MOVLW  0
00033C 6F00               M          MOVWF  SSR_00_VALUE+0,   BANKED
00033E 6B00               M          CLRF   SSR_00_STEP+0,   BANKED
000340 6B00               M          CLRF   SSR_00_SPEED+0,   BANKED
000342 6B00               M          CLRF   SSR_00_COUNTER+0,   BANKED
000344 6B00               M          CLRF   SSR_00_FLAGS+0,   BANKED
                          M         ENDW
                          M 
000346                    M LLIM_END_2:
000346 010C               M         BANKSEL QUIZSHOW_DATA
  00000003                M LLIM_N  ++
                          M 
000348                    M SCN_DB_END_0:
  00000001                M SCN_DBN ++
                      01002           SCAN_DEBOUNCE BTN_IDX_L0, PORT_L0, BIT_L0, CHAN_L0R, 1, CHAN_L0R
000348 010C               M         BANKSEL QUIZSHOW_DATA
00034A 0004               M         CLRWDT
                          M         ;
                          M         ; Sense button state: 
                          M         ;  0=pressed
                          M         ;  1=released
                          M         ;
00034C A480               M         BTFSS   3968,         BIT_L0,  ACCESS
00034E D???               M         BRA     SCN_DB_DOWN_1           ; pressed? branch
                          M         ;
                          M         ; button senses as "up". drain debounce counter if possible
                          M         ;
000350 6700               M         TSTFSZ  BTN_X0_DEB_TMR+1,           BANKED
000352 D???               M         BRA     SCN_DB_DRAIN_1
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;
                          M         ; The button is officially "up".  If this is news, respond
                          M         ; to this change now.  All we need to do is note the status
                          M         ; change. Everything else happens later when the code notices
                          M         ; this flag state.
                          M         ;
000354 9700               M         BCF     BTN_X0_FLAGS+1,           BTN_FLG_ACTIVE, BANKED
000356 D???               M         BRA     SCN_DB_DONE_1
                          M 
000358                    M SCN_DB_DRAIN_1:
                          M         ;
                          M         ; Drain the button debounce counter
                          M         ;
000358 0700               M         DECF    BTN_X0_DEB_TMR+1,           F, BANKED
00035A D???               M         BRA     SCN_DB_DONE_1
                          M 
00035C                    M SCN_DB_RST_LCK_1:
                          M         ;
                          M         ; The button needs to be locked out!
                          M         ; We found them pushing the button when they weren't supposed to.
                          M         ;
00035C 8500               M         BSF     BTN_X0_FLAGS+1,           BTN_FLG_LOCKED, BANKED
00035E C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+1
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L0, CHAN_L0R, 1, CHAN_L0R
000362 010C               M         BANKSEL QUIZSHOW_DATA
000364 A500               M         BTFSS   BTN_X0_FLAGS+1,           BTN_FLG_LOCKED, BANKED
000366 D???               M         BRA     LLIM_NOT_LOCKED_3
000368 B900               M         BTFSC   BTN_X0_FLAGS+1,           BTN_FLG_LCK_ACK, BANKED
00036A D???               M         BRA     LLIM_NOT_LOCKED_3
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
00036C 8900               M         BSF     BTN_X0_FLAGS+1,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 3
                          M          SET_SSR_VALUE 3,   0
00036E 0104               M         BANKSEL SSR_DATA_BANK
000370 0E00               M          MOVLW  0
000372 6F00               M          MOVWF  SSR_00_VALUE+3,   BANKED
000374 6B00               M          CLRF   SSR_00_STEP+3,   BANKED
000376 6B00               M          CLRF   SSR_00_SPEED+3,   BANKED
000378 6B00               M          CLRF   SSR_00_COUNTER+3,   BANKED
00037A 6B00               M          CLRF   SSR_00_FLAGS+3,   BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_L0R
                          M          SET_SSR_PATTERN CHAN_L0R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
00037C 0104               M         BANKSEL SSR_DATA_BANK
00037E 0E00               M          MOVLW  0
000380 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
000382 0E04               M          MOVLW  4
000384 6F00               M          MOVWF  SSR_00_STEP+CHAN_L0R, BANKED
000386 0E01               M          MOVLW  1
000388 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L0R, BANKED
00038A 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L0R, BANKED
00038C 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
00038E 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L0R, BANKED
000390 D???               M         BRA     LLIM_END_3
                          M 
000392                    M LLIM_NOT_LOCKED_3:
000392 B300               M         BTFSC   BTN_X0_FLAGS+1,           BTN_FLG_MASKED, BANKED
000394 D???               M         BRA     LLIM_OFF_3
000396 B100               M         BTFSC   BTN_X0_FLAGS+1,           BTN_FLG_PRESSED, BANKED
000398 D???               M         BRA     LLIM_OFF_3
00039A A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
00039C D???               M         BRA     LLIM_OFF_3
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 3
                          M          SET_SSR_VALUE 3,   255
00039E 0104               M         BANKSEL SSR_DATA_BANK
0003A0 0EFF               M          MOVLW  255
0003A2 6F00               M          MOVWF  SSR_00_VALUE+3,   BANKED
0003A4 6B00               M          CLRF   SSR_00_STEP+3,   BANKED
0003A6 6B00               M          CLRF   SSR_00_SPEED+3,   BANKED
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003A8 6B00               M          CLRF   SSR_00_COUNTER+3,   BANKED
0003AA 6B00               M          CLRF   SSR_00_FLAGS+3,   BANKED
                          M         ENDW
0003AC D???               M         BRA     LLIM_END_3
                          M         
0003AE                    M LLIM_OFF_3:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 3
                          M          SET_SSR_VALUE 3,   0
0003AE 0104               M         BANKSEL SSR_DATA_BANK
0003B0 0E00               M          MOVLW  0
0003B2 6F00               M          MOVWF  SSR_00_VALUE+3,   BANKED
0003B4 6B00               M          CLRF   SSR_00_STEP+3,   BANKED
0003B6 6B00               M          CLRF   SSR_00_SPEED+3,   BANKED
0003B8 6B00               M          CLRF   SSR_00_COUNTER+3,   BANKED
0003BA 6B00               M          CLRF   SSR_00_FLAGS+3,   BANKED
                          M         ENDW
                          M 
0003BC                    M LLIM_END_3:
0003BC 010C               M         BANKSEL QUIZSHOW_DATA
  00000004                M LLIM_N  ++
0003BE D???               M         BRA     SCN_DB_DONE_1
                          M 
0003C0                    M SCN_DB_DOWN_1:
                          M         ;
                          M         ; button senses as "down". fill debounce counter if possible
                          M         ;
0003C0 3F00               M         INCFSZ  BTN_X0_DEB_TMR+1,           F, BANKED
0003C2 D???               M         BRA     SCN_DB_DONE_1
                          M         ;
                          M         ; counter was full (since we overflowed it to 0 again). so
                          M         ; the button is officially "down".  Put the counter back
                          M         ; to 255 and proceed with what it means for the button to be
                          M         ; officially down.
                          M         ;
0003C4 6900               M         SETF    BTN_X0_DEB_TMR+1,           BANKED
0003C6 B500               M         BTFSC   BTN_X0_FLAGS+1,           BTN_FLG_LOCKED, BANKED        ; is it locked?
0003C8 D???               M         BRA     SCN_DB_RST_LCK_1                                ; stay locked longer
0003CA B700               M         BTFSC   BTN_X0_FLAGS+1,           BTN_FLG_ACTIVE, BANKED        ; if we already saw the button p
                            ress
0003CC D???               M         BRA     SCN_DB_DONE_1                                   ;   then we don't need to do anything mo
                            re
                          M         ;
                          M         ; We didn't know the button was down yet. Let's see what
                          M         ; that changes...
                          M         ;
0003CE 8700               M         BSF     BTN_X0_FLAGS+1,           BTN_FLG_ACTIVE, BANKED        ; mark as "down"
0003D0 B300               M         BTFSC   BTN_X0_FLAGS+1,           BTN_FLG_MASKED, BANKED        ; is it masked?
0003D2 D???               M         BRA     SCN_DB_DONE_1                                   ; then ignore it
0003D4 B100               M         BTFSC   BTN_X0_FLAGS+1,           BTN_FLG_PRESSED, BANKED       ; already noted?
0003D6 D???               M         BRA     SCN_DB_DONE_1                                   ; then we're already done
0003D8 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS        ; legal to press?
0003DA D???               M         BRA     SCN_DB_RST_LCK_1                                ; if not, lock out!
                          M         ;
                          M         ; The button was pressed legally and this is the first time we
                          M         ; noticed it. Record it as the official press for this button.
                          M         ;
0003DC 8100               M         BSF     BTN_X0_FLAGS+1,           BTN_FLG_PRESSED, BANKED
0003DE 9EF2               M         BCF     INTCON, 7, ACCESS                               ; disable interrupts
0003E0 9CF2               M         BCF     INTCON, 6, ACCESS                               ; disable interrupts
0003E2 C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+1
0003E6 C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+1
0003EA CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+1
0003EE CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+1
0003F2 8EF2               M         BSF     INTCON, 7, ACCESS                               ; enable interrupts
0003F4 8CF2               M         BSF     INTCON, 6, ACCESS                               ; enable interrupts
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L0, CHAN_L0R, 1, CHAN_L0R
0003F6 010C               M         BANKSEL QUIZSHOW_DATA
0003F8 A500               M         BTFSS   BTN_X0_FLAGS+1,           BTN_FLG_LOCKED, BANKED
0003FA D???               M         BRA     LLIM_NOT_LOCKED_4
0003FC B900               M         BTFSC   BTN_X0_FLAGS+1,           BTN_FLG_LCK_ACK, BANKED
0003FE D???               M         BRA     LLIM_NOT_LOCKED_4
                          M         ;
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ; light up for locked mode for the first time
                          M         ;
000400 8900               M         BSF     BTN_X0_FLAGS+1,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 3
                          M          SET_SSR_VALUE 3,   0
000402 0104               M         BANKSEL SSR_DATA_BANK
000404 0E00               M          MOVLW  0
000406 6F00               M          MOVWF  SSR_00_VALUE+3,   BANKED
000408 6B00               M          CLRF   SSR_00_STEP+3,   BANKED
00040A 6B00               M          CLRF   SSR_00_SPEED+3,   BANKED
00040C 6B00               M          CLRF   SSR_00_COUNTER+3,   BANKED
00040E 6B00               M          CLRF   SSR_00_FLAGS+3,   BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_L0R
                          M          SET_SSR_PATTERN CHAN_L0R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000410 0104               M         BANKSEL SSR_DATA_BANK
000412 0E00               M          MOVLW  0
000414 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
000416 0E04               M          MOVLW  4
000418 6F00               M          MOVWF  SSR_00_STEP+CHAN_L0R, BANKED
00041A 0E01               M          MOVLW  1
00041C 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L0R, BANKED
00041E 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L0R, BANKED
000420 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000422 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L0R, BANKED
000424 D???               M         BRA     LLIM_END_4
                          M 
000426                    M LLIM_NOT_LOCKED_4:
000426 B300               M         BTFSC   BTN_X0_FLAGS+1,           BTN_FLG_MASKED, BANKED
000428 D???               M         BRA     LLIM_OFF_4
00042A B100               M         BTFSC   BTN_X0_FLAGS+1,           BTN_FLG_PRESSED, BANKED
00042C D???               M         BRA     LLIM_OFF_4
00042E A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000430 D???               M         BRA     LLIM_OFF_4
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 3
                          M          SET_SSR_VALUE 3,   255
000432 0104               M         BANKSEL SSR_DATA_BANK
000434 0EFF               M          MOVLW  255
000436 6F00               M          MOVWF  SSR_00_VALUE+3,   BANKED
000438 6B00               M          CLRF   SSR_00_STEP+3,   BANKED
00043A 6B00               M          CLRF   SSR_00_SPEED+3,   BANKED
00043C 6B00               M          CLRF   SSR_00_COUNTER+3,   BANKED
00043E 6B00               M          CLRF   SSR_00_FLAGS+3,   BANKED
                          M         ENDW
000440 D???               M         BRA     LLIM_END_4
                          M         
000442                    M LLIM_OFF_4:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 3
                          M          SET_SSR_VALUE 3,   0
000442 0104               M         BANKSEL SSR_DATA_BANK
000444 0E00               M          MOVLW  0
000446 6F00               M          MOVWF  SSR_00_VALUE+3,   BANKED
000448 6B00               M          CLRF   SSR_00_STEP+3,   BANKED
00044A 6B00               M          CLRF   SSR_00_SPEED+3,   BANKED
00044C 6B00               M          CLRF   SSR_00_COUNTER+3,   BANKED
00044E 6B00               M          CLRF   SSR_00_FLAGS+3,   BANKED
                          M         ENDW
                          M 
000450                    M LLIM_END_4:
000450 010C               M         BANKSEL QUIZSHOW_DATA
  00000005                M LLIM_N  ++
                          M 
000452                    M SCN_DB_DONE_1:
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;
                          M         ; We're done with the button debouncing operations.
                          M         ;
                          M         ; If we're processing the 120Hz cleanup operations, do them now
                          M         ; for this button.
                          M         ;
000452 A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
000454 D???               M         BRA     SCN_DB_END_1
                          M         ;
                          M         ; If the button is locked out, decrement its timer. If it reaches
                          M         ; zero, we can release the lock now.
                          M         ;
000456 B500               M         BTFSC   BTN_X0_FLAGS+1,           BTN_FLG_LOCKED, BANKED
000458 2F00               M         DECFSZ  BTN_X0_LOCKTMR+1,           F, BANKED
00045A D???               M         BRA     SCN_DB_END_1
00045C 9500               M         BCF     BTN_X0_FLAGS+1,           BTN_FLG_LOCKED, BANKED        ; release the lock
00045E 9900               M         BCF     BTN_X0_FLAGS+1,           BTN_FLG_LCK_ACK, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L0, CHAN_L0R, 1, CHAN_L0R
000460 010C               M         BANKSEL QUIZSHOW_DATA
000462 A500               M         BTFSS   BTN_X0_FLAGS+1,           BTN_FLG_LOCKED, BANKED
000464 D???               M         BRA     LLIM_NOT_LOCKED_5
000466 B900               M         BTFSC   BTN_X0_FLAGS+1,           BTN_FLG_LCK_ACK, BANKED
000468 D???               M         BRA     LLIM_NOT_LOCKED_5
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
00046A 8900               M         BSF     BTN_X0_FLAGS+1,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 3
                          M          SET_SSR_VALUE 3,   0
00046C 0104               M         BANKSEL SSR_DATA_BANK
00046E 0E00               M          MOVLW  0
000470 6F00               M          MOVWF  SSR_00_VALUE+3,   BANKED
000472 6B00               M          CLRF   SSR_00_STEP+3,   BANKED
000474 6B00               M          CLRF   SSR_00_SPEED+3,   BANKED
000476 6B00               M          CLRF   SSR_00_COUNTER+3,   BANKED
000478 6B00               M          CLRF   SSR_00_FLAGS+3,   BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_L0R
                          M          SET_SSR_PATTERN CHAN_L0R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
00047A 0104               M         BANKSEL SSR_DATA_BANK
00047C 0E00               M          MOVLW  0
00047E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
000480 0E04               M          MOVLW  4
000482 6F00               M          MOVWF  SSR_00_STEP+CHAN_L0R, BANKED
000484 0E01               M          MOVLW  1
000486 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L0R, BANKED
000488 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L0R, BANKED
00048A 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
00048C 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L0R, BANKED
00048E D???               M         BRA     LLIM_END_5
                          M 
000490                    M LLIM_NOT_LOCKED_5:
000490 B300               M         BTFSC   BTN_X0_FLAGS+1,           BTN_FLG_MASKED, BANKED
000492 D???               M         BRA     LLIM_OFF_5
000494 B100               M         BTFSC   BTN_X0_FLAGS+1,           BTN_FLG_PRESSED, BANKED
000496 D???               M         BRA     LLIM_OFF_5
000498 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
00049A D???               M         BRA     LLIM_OFF_5
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 3
                          M          SET_SSR_VALUE 3,   255
00049C 0104               M         BANKSEL SSR_DATA_BANK
00049E 0EFF               M          MOVLW  255
0004A0 6F00               M          MOVWF  SSR_00_VALUE+3,   BANKED
0004A2 6B00               M          CLRF   SSR_00_STEP+3,   BANKED
0004A4 6B00               M          CLRF   SSR_00_SPEED+3,   BANKED
0004A6 6B00               M          CLRF   SSR_00_COUNTER+3,   BANKED
0004A8 6B00               M          CLRF   SSR_00_FLAGS+3,   BANKED
                          M         ENDW
0004AA D???               M         BRA     LLIM_END_5
                          M         
0004AC                    M LLIM_OFF_5:
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 3
                          M          SET_SSR_VALUE 3,   0
0004AC 0104               M         BANKSEL SSR_DATA_BANK
0004AE 0E00               M          MOVLW  0
0004B0 6F00               M          MOVWF  SSR_00_VALUE+3,   BANKED
0004B2 6B00               M          CLRF   SSR_00_STEP+3,   BANKED
0004B4 6B00               M          CLRF   SSR_00_SPEED+3,   BANKED
0004B6 6B00               M          CLRF   SSR_00_COUNTER+3,   BANKED
0004B8 6B00               M          CLRF   SSR_00_FLAGS+3,   BANKED
                          M         ENDW
                          M 
0004BA                    M LLIM_END_5:
0004BA 010C               M         BANKSEL QUIZSHOW_DATA
  00000006                M LLIM_N  ++
                          M 
0004BC                    M SCN_DB_END_1:
  00000002                M SCN_DBN ++
                      01003           SCAN_DEBOUNCE BTN_IDX_X1, PORT_X1, BIT_X1, CHAN_X1R, 3, CHAN_X1R
0004BC 010C               M         BANKSEL QUIZSHOW_DATA
0004BE 0004               M         CLRWDT
                          M         ;
                          M         ; Sense button state: 
                          M         ;  0=pressed
                          M         ;  1=released
                          M         ;
0004C0 A280               M         BTFSS   3968,         BIT_X1,  ACCESS
0004C2 D???               M         BRA     SCN_DB_DOWN_2           ; pressed? branch
                          M         ;
                          M         ; button senses as "up". drain debounce counter if possible
                          M         ;
0004C4 6700               M         TSTFSZ  BTN_X0_DEB_TMR+2,           BANKED
0004C6 D???               M         BRA     SCN_DB_DRAIN_2
                          M         ;
                          M         ; The button is officially "up".  If this is news, respond
                          M         ; to this change now.  All we need to do is note the status
                          M         ; change. Everything else happens later when the code notices
                          M         ; this flag state.
                          M         ;
0004C8 9700               M         BCF     BTN_X0_FLAGS+2,           BTN_FLG_ACTIVE, BANKED
0004CA D???               M         BRA     SCN_DB_DONE_2
                          M 
0004CC                    M SCN_DB_DRAIN_2:
                          M         ;
                          M         ; Drain the button debounce counter
                          M         ;
0004CC 0700               M         DECF    BTN_X0_DEB_TMR+2,           F, BANKED
0004CE D???               M         BRA     SCN_DB_DONE_2
                          M 
0004D0                    M SCN_DB_RST_LCK_2:
                          M         ;
                          M         ; The button needs to be locked out!
                          M         ; We found them pushing the button when they weren't supposed to.
                          M         ;
0004D0 8500               M         BSF     BTN_X0_FLAGS+2,           BTN_FLG_LOCKED, BANKED
0004D2 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+2
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X1, CHAN_X1R, 3, CHAN_X1R
0004D6 010C               M         BANKSEL QUIZSHOW_DATA
0004D8 A500               M         BTFSS   BTN_X0_FLAGS+2,           BTN_FLG_LOCKED, BANKED
0004DA D???               M         BRA     LLIM_NOT_LOCKED_6
0004DC B900               M         BTFSC   BTN_X0_FLAGS+2,           BTN_FLG_LCK_ACK, BANKED
0004DE D???               M         BRA     LLIM_NOT_LOCKED_6
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
0004E0 8900               M         BSF     BTN_X0_FLAGS+2,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 6
                          M          SET_SSR_VALUE 6,   0
0004E2 0104               M         BANKSEL SSR_DATA_BANK
0004E4 0E00               M          MOVLW  0
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004E6 6F00               M          MOVWF  SSR_00_VALUE+6,   BANKED
0004E8 6B00               M          CLRF   SSR_00_STEP+6,   BANKED
0004EA 6B00               M          CLRF   SSR_00_SPEED+6,   BANKED
0004EC 6B00               M          CLRF   SSR_00_COUNTER+6,   BANKED
0004EE 6B00               M          CLRF   SSR_00_FLAGS+6,   BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 5
                          M          SET_SSR_VALUE 5,   0
0004F0 0104               M         BANKSEL SSR_DATA_BANK
0004F2 0E00               M          MOVLW  0
0004F4 6F00               M          MOVWF  SSR_00_VALUE+5,   BANKED
0004F6 6B00               M          CLRF   SSR_00_STEP+5,   BANKED
0004F8 6B00               M          CLRF   SSR_00_SPEED+5,   BANKED
0004FA 6B00               M          CLRF   SSR_00_COUNTER+5,   BANKED
0004FC 6B00               M          CLRF   SSR_00_FLAGS+5,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 4
                          M          SET_SSR_VALUE 4,   0
0004FE 0104               M         BANKSEL SSR_DATA_BANK
000500 0E00               M          MOVLW  0
000502 6F00               M          MOVWF  SSR_00_VALUE+4,   BANKED
000504 6B00               M          CLRF   SSR_00_STEP+4,   BANKED
000506 6B00               M          CLRF   SSR_00_SPEED+4,   BANKED
000508 6B00               M          CLRF   SSR_00_COUNTER+4,   BANKED
00050A 6B00               M          CLRF   SSR_00_FLAGS+4,   BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_X1R
                          M          SET_SSR_PATTERN CHAN_X1R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
00050C 0104               M         BANKSEL SSR_DATA_BANK
00050E 0E00               M          MOVLW  0
000510 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
000512 0E04               M          MOVLW  4
000514 6F00               M          MOVWF  SSR_00_STEP+CHAN_X1R, BANKED
000516 0E01               M          MOVLW  1
000518 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X1R, BANKED
00051A 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X1R, BANKED
00051C 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
00051E 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X1R, BANKED
000520 D???               M         BRA     LLIM_END_6
                          M 
000522                    M LLIM_NOT_LOCKED_6:
000522 B300               M         BTFSC   BTN_X0_FLAGS+2,           BTN_FLG_MASKED, BANKED
000524 D???               M         BRA     LLIM_OFF_6
000526 B100               M         BTFSC   BTN_X0_FLAGS+2,           BTN_FLG_PRESSED, BANKED
000528 D???               M         BRA     LLIM_OFF_6
00052A A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
00052C D???               M         BRA     LLIM_OFF_6
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_STEADY 6
                          M          SET_SSR_VALUE 6,   255
00052E 0104               M         BANKSEL SSR_DATA_BANK
000530 0EFF               M          MOVLW  255
000532 6F00               M          MOVWF  SSR_00_VALUE+6,   BANKED
000534 6B00               M          CLRF   SSR_00_STEP+6,   BANKED
000536 6B00               M          CLRF   SSR_00_SPEED+6,   BANKED
000538 6B00               M          CLRF   SSR_00_COUNTER+6,   BANKED
00053A 6B00               M          CLRF   SSR_00_FLAGS+6,   BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_STEADY 5
                          M          SET_SSR_VALUE 5,   255
00053C 0104               M         BANKSEL SSR_DATA_BANK
00053E 0EFF               M          MOVLW  255
000540 6F00               M          MOVWF  SSR_00_VALUE+5,   BANKED
000542 6B00               M          CLRF   SSR_00_STEP+5,   BANKED
000544 6B00               M          CLRF   SSR_00_SPEED+5,   BANKED
000546 6B00               M          CLRF   SSR_00_COUNTER+5,   BANKED
000548 6B00               M          CLRF   SSR_00_FLAGS+5,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 4
                          M          SET_SSR_VALUE 4,   255
00054A 0104               M         BANKSEL SSR_DATA_BANK
00054C 0EFF               M          MOVLW  255
00054E 6F00               M          MOVWF  SSR_00_VALUE+4,   BANKED
000550 6B00               M          CLRF   SSR_00_STEP+4,   BANKED
000552 6B00               M          CLRF   SSR_00_SPEED+4,   BANKED
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000554 6B00               M          CLRF   SSR_00_COUNTER+4,   BANKED
000556 6B00               M          CLRF   SSR_00_FLAGS+4,   BANKED
                          M         ENDW
000558 D???               M         BRA     LLIM_END_6
                          M         
00055A                    M LLIM_OFF_6:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 6
                          M          SET_SSR_VALUE 6,   0
00055A 0104               M         BANKSEL SSR_DATA_BANK
00055C 0E00               M          MOVLW  0
00055E 6F00               M          MOVWF  SSR_00_VALUE+6,   BANKED
000560 6B00               M          CLRF   SSR_00_STEP+6,   BANKED
000562 6B00               M          CLRF   SSR_00_SPEED+6,   BANKED
000564 6B00               M          CLRF   SSR_00_COUNTER+6,   BANKED
000566 6B00               M          CLRF   SSR_00_FLAGS+6,   BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 5
                          M          SET_SSR_VALUE 5,   0
000568 0104               M         BANKSEL SSR_DATA_BANK
00056A 0E00               M          MOVLW  0
00056C 6F00               M          MOVWF  SSR_00_VALUE+5,   BANKED
00056E 6B00               M          CLRF   SSR_00_STEP+5,   BANKED
000570 6B00               M          CLRF   SSR_00_SPEED+5,   BANKED
000572 6B00               M          CLRF   SSR_00_COUNTER+5,   BANKED
000574 6B00               M          CLRF   SSR_00_FLAGS+5,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 4
                          M          SET_SSR_VALUE 4,   0
000576 0104               M         BANKSEL SSR_DATA_BANK
000578 0E00               M          MOVLW  0
00057A 6F00               M          MOVWF  SSR_00_VALUE+4,   BANKED
00057C 6B00               M          CLRF   SSR_00_STEP+4,   BANKED
00057E 6B00               M          CLRF   SSR_00_SPEED+4,   BANKED
000580 6B00               M          CLRF   SSR_00_COUNTER+4,   BANKED
000582 6B00               M          CLRF   SSR_00_FLAGS+4,   BANKED
                          M         ENDW
                          M 
000584                    M LLIM_END_6:
000584 010C               M         BANKSEL QUIZSHOW_DATA
  00000007                M LLIM_N  ++
000586 D???               M         BRA     SCN_DB_DONE_2
                          M 
000588                    M SCN_DB_DOWN_2:
                          M         ;
                          M         ; button senses as "down". fill debounce counter if possible
                          M         ;
000588 3F00               M         INCFSZ  BTN_X0_DEB_TMR+2,           F, BANKED
00058A D???               M         BRA     SCN_DB_DONE_2
                          M         ;
                          M         ; counter was full (since we overflowed it to 0 again). so
                          M         ; the button is officially "down".  Put the counter back
                          M         ; to 255 and proceed with what it means for the button to be
                          M         ; officially down.
                          M         ;
00058C 6900               M         SETF    BTN_X0_DEB_TMR+2,           BANKED
00058E B500               M         BTFSC   BTN_X0_FLAGS+2,           BTN_FLG_LOCKED, BANKED        ; is it locked?
000590 D???               M         BRA     SCN_DB_RST_LCK_2                                ; stay locked longer
000592 B700               M         BTFSC   BTN_X0_FLAGS+2,           BTN_FLG_ACTIVE, BANKED        ; if we already saw the button p
                            ress
000594 D???               M         BRA     SCN_DB_DONE_2                                   ;   then we don't need to do anything mo
                            re
                          M         ;
                          M         ; We didn't know the button was down yet. Let's see what
                          M         ; that changes...
                          M         ;
000596 8700               M         BSF     BTN_X0_FLAGS+2,           BTN_FLG_ACTIVE, BANKED        ; mark as "down"
000598 B300               M         BTFSC   BTN_X0_FLAGS+2,           BTN_FLG_MASKED, BANKED        ; is it masked?
00059A D???               M         BRA     SCN_DB_DONE_2                                   ; then ignore it
00059C B100               M         BTFSC   BTN_X0_FLAGS+2,           BTN_FLG_PRESSED, BANKED       ; already noted?
00059E D???               M         BRA     SCN_DB_DONE_2                                   ; then we're already done
0005A0 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS        ; legal to press?
0005A2 D???               M         BRA     SCN_DB_RST_LCK_2                                ; if not, lock out!
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;
                          M         ; The button was pressed legally and this is the first time we
                          M         ; noticed it. Record it as the official press for this button.
                          M         ;
0005A4 8100               M         BSF     BTN_X0_FLAGS+2,           BTN_FLG_PRESSED, BANKED
0005A6 9EF2               M         BCF     INTCON, 7, ACCESS                               ; disable interrupts
0005A8 9CF2               M         BCF     INTCON, 6, ACCESS                               ; disable interrupts
0005AA C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+2
0005AE C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+2
0005B2 CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+2
0005B6 CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+2
0005BA 8EF2               M         BSF     INTCON, 7, ACCESS                               ; enable interrupts
0005BC 8CF2               M         BSF     INTCON, 6, ACCESS                               ; enable interrupts
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X1, CHAN_X1R, 3, CHAN_X1R
0005BE 010C               M         BANKSEL QUIZSHOW_DATA
0005C0 A500               M         BTFSS   BTN_X0_FLAGS+2,           BTN_FLG_LOCKED, BANKED
0005C2 D???               M         BRA     LLIM_NOT_LOCKED_7
0005C4 B900               M         BTFSC   BTN_X0_FLAGS+2,           BTN_FLG_LCK_ACK, BANKED
0005C6 D???               M         BRA     LLIM_NOT_LOCKED_7
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
0005C8 8900               M         BSF     BTN_X0_FLAGS+2,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 6
                          M          SET_SSR_VALUE 6,   0
0005CA 0104               M         BANKSEL SSR_DATA_BANK
0005CC 0E00               M          MOVLW  0
0005CE 6F00               M          MOVWF  SSR_00_VALUE+6,   BANKED
0005D0 6B00               M          CLRF   SSR_00_STEP+6,   BANKED
0005D2 6B00               M          CLRF   SSR_00_SPEED+6,   BANKED
0005D4 6B00               M          CLRF   SSR_00_COUNTER+6,   BANKED
0005D6 6B00               M          CLRF   SSR_00_FLAGS+6,   BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 5
                          M          SET_SSR_VALUE 5,   0
0005D8 0104               M         BANKSEL SSR_DATA_BANK
0005DA 0E00               M          MOVLW  0
0005DC 6F00               M          MOVWF  SSR_00_VALUE+5,   BANKED
0005DE 6B00               M          CLRF   SSR_00_STEP+5,   BANKED
0005E0 6B00               M          CLRF   SSR_00_SPEED+5,   BANKED
0005E2 6B00               M          CLRF   SSR_00_COUNTER+5,   BANKED
0005E4 6B00               M          CLRF   SSR_00_FLAGS+5,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 4
                          M          SET_SSR_VALUE 4,   0
0005E6 0104               M         BANKSEL SSR_DATA_BANK
0005E8 0E00               M          MOVLW  0
0005EA 6F00               M          MOVWF  SSR_00_VALUE+4,   BANKED
0005EC 6B00               M          CLRF   SSR_00_STEP+4,   BANKED
0005EE 6B00               M          CLRF   SSR_00_SPEED+4,   BANKED
0005F0 6B00               M          CLRF   SSR_00_COUNTER+4,   BANKED
0005F2 6B00               M          CLRF   SSR_00_FLAGS+4,   BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_X1R
                          M          SET_SSR_PATTERN CHAN_X1R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0005F4 0104               M         BANKSEL SSR_DATA_BANK
0005F6 0E00               M          MOVLW  0
0005F8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
0005FA 0E04               M          MOVLW  4
0005FC 6F00               M          MOVWF  SSR_00_STEP+CHAN_X1R, BANKED
0005FE 0E01               M          MOVLW  1
000600 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X1R, BANKED
000602 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X1R, BANKED
000604 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000606 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X1R, BANKED
000608 D???               M         BRA     LLIM_END_7
                          M 
00060A                    M LLIM_NOT_LOCKED_7:
00060A B300               M         BTFSC   BTN_X0_FLAGS+2,           BTN_FLG_MASKED, BANKED
00060C D???               M         BRA     LLIM_OFF_7
00060E B100               M         BTFSC   BTN_X0_FLAGS+2,           BTN_FLG_PRESSED, BANKED
000610 D???               M         BRA     LLIM_OFF_7
000612 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000614 D???               M         BRA     LLIM_OFF_7
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_STEADY 6
                          M          SET_SSR_VALUE 6,   255
000616 0104               M         BANKSEL SSR_DATA_BANK
000618 0EFF               M          MOVLW  255
00061A 6F00               M          MOVWF  SSR_00_VALUE+6,   BANKED
00061C 6B00               M          CLRF   SSR_00_STEP+6,   BANKED
00061E 6B00               M          CLRF   SSR_00_SPEED+6,   BANKED
000620 6B00               M          CLRF   SSR_00_COUNTER+6,   BANKED
000622 6B00               M          CLRF   SSR_00_FLAGS+6,   BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_STEADY 5
                          M          SET_SSR_VALUE 5,   255
000624 0104               M         BANKSEL SSR_DATA_BANK
000626 0EFF               M          MOVLW  255
000628 6F00               M          MOVWF  SSR_00_VALUE+5,   BANKED
00062A 6B00               M          CLRF   SSR_00_STEP+5,   BANKED
00062C 6B00               M          CLRF   SSR_00_SPEED+5,   BANKED
00062E 6B00               M          CLRF   SSR_00_COUNTER+5,   BANKED
000630 6B00               M          CLRF   SSR_00_FLAGS+5,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 4
                          M          SET_SSR_VALUE 4,   255
000632 0104               M         BANKSEL SSR_DATA_BANK
000634 0EFF               M          MOVLW  255
000636 6F00               M          MOVWF  SSR_00_VALUE+4,   BANKED
000638 6B00               M          CLRF   SSR_00_STEP+4,   BANKED
00063A 6B00               M          CLRF   SSR_00_SPEED+4,   BANKED
00063C 6B00               M          CLRF   SSR_00_COUNTER+4,   BANKED
00063E 6B00               M          CLRF   SSR_00_FLAGS+4,   BANKED
                          M         ENDW
000640 D???               M         BRA     LLIM_END_7
                          M         
000642                    M LLIM_OFF_7:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 6
                          M          SET_SSR_VALUE 6,   0
000642 0104               M         BANKSEL SSR_DATA_BANK
000644 0E00               M          MOVLW  0
000646 6F00               M          MOVWF  SSR_00_VALUE+6,   BANKED
000648 6B00               M          CLRF   SSR_00_STEP+6,   BANKED
00064A 6B00               M          CLRF   SSR_00_SPEED+6,   BANKED
00064C 6B00               M          CLRF   SSR_00_COUNTER+6,   BANKED
00064E 6B00               M          CLRF   SSR_00_FLAGS+6,   BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 5
                          M          SET_SSR_VALUE 5,   0
000650 0104               M         BANKSEL SSR_DATA_BANK
000652 0E00               M          MOVLW  0
000654 6F00               M          MOVWF  SSR_00_VALUE+5,   BANKED
000656 6B00               M          CLRF   SSR_00_STEP+5,   BANKED
000658 6B00               M          CLRF   SSR_00_SPEED+5,   BANKED
00065A 6B00               M          CLRF   SSR_00_COUNTER+5,   BANKED
00065C 6B00               M          CLRF   SSR_00_FLAGS+5,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 4
                          M          SET_SSR_VALUE 4,   0
00065E 0104               M         BANKSEL SSR_DATA_BANK
000660 0E00               M          MOVLW  0
000662 6F00               M          MOVWF  SSR_00_VALUE+4,   BANKED
000664 6B00               M          CLRF   SSR_00_STEP+4,   BANKED
000666 6B00               M          CLRF   SSR_00_SPEED+4,   BANKED
000668 6B00               M          CLRF   SSR_00_COUNTER+4,   BANKED
00066A 6B00               M          CLRF   SSR_00_FLAGS+4,   BANKED
                          M         ENDW
                          M 
00066C                    M LLIM_END_7:
00066C 010C               M         BANKSEL QUIZSHOW_DATA
  00000008                M LLIM_N  ++
                          M 
00066E                    M SCN_DB_DONE_2:
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;
                          M         ; We're done with the button debouncing operations.
                          M         ;
                          M         ; If we're processing the 120Hz cleanup operations, do them now
                          M         ; for this button.
                          M         ;
00066E A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
000670 D???               M         BRA     SCN_DB_END_2
                          M         ;
                          M         ; If the button is locked out, decrement its timer. If it reaches
                          M         ; zero, we can release the lock now.
                          M         ;
000672 B500               M         BTFSC   BTN_X0_FLAGS+2,           BTN_FLG_LOCKED, BANKED
000674 2F00               M         DECFSZ  BTN_X0_LOCKTMR+2,           F, BANKED
000676 D???               M         BRA     SCN_DB_END_2
000678 9500               M         BCF     BTN_X0_FLAGS+2,           BTN_FLG_LOCKED, BANKED        ; release the lock
00067A 9900               M         BCF     BTN_X0_FLAGS+2,           BTN_FLG_LCK_ACK, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X1, CHAN_X1R, 3, CHAN_X1R
00067C 010C               M         BANKSEL QUIZSHOW_DATA
00067E A500               M         BTFSS   BTN_X0_FLAGS+2,           BTN_FLG_LOCKED, BANKED
000680 D???               M         BRA     LLIM_NOT_LOCKED_8
000682 B900               M         BTFSC   BTN_X0_FLAGS+2,           BTN_FLG_LCK_ACK, BANKED
000684 D???               M         BRA     LLIM_NOT_LOCKED_8
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
000686 8900               M         BSF     BTN_X0_FLAGS+2,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 6
                          M          SET_SSR_VALUE 6,   0
000688 0104               M         BANKSEL SSR_DATA_BANK
00068A 0E00               M          MOVLW  0
00068C 6F00               M          MOVWF  SSR_00_VALUE+6,   BANKED
00068E 6B00               M          CLRF   SSR_00_STEP+6,   BANKED
000690 6B00               M          CLRF   SSR_00_SPEED+6,   BANKED
000692 6B00               M          CLRF   SSR_00_COUNTER+6,   BANKED
000694 6B00               M          CLRF   SSR_00_FLAGS+6,   BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 5
                          M          SET_SSR_VALUE 5,   0
000696 0104               M         BANKSEL SSR_DATA_BANK
000698 0E00               M          MOVLW  0
00069A 6F00               M          MOVWF  SSR_00_VALUE+5,   BANKED
00069C 6B00               M          CLRF   SSR_00_STEP+5,   BANKED
00069E 6B00               M          CLRF   SSR_00_SPEED+5,   BANKED
0006A0 6B00               M          CLRF   SSR_00_COUNTER+5,   BANKED
0006A2 6B00               M          CLRF   SSR_00_FLAGS+5,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 4
                          M          SET_SSR_VALUE 4,   0
0006A4 0104               M         BANKSEL SSR_DATA_BANK
0006A6 0E00               M          MOVLW  0
0006A8 6F00               M          MOVWF  SSR_00_VALUE+4,   BANKED
0006AA 6B00               M          CLRF   SSR_00_STEP+4,   BANKED
0006AC 6B00               M          CLRF   SSR_00_SPEED+4,   BANKED
0006AE 6B00               M          CLRF   SSR_00_COUNTER+4,   BANKED
0006B0 6B00               M          CLRF   SSR_00_FLAGS+4,   BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_X1R
                          M          SET_SSR_PATTERN CHAN_X1R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0006B2 0104               M         BANKSEL SSR_DATA_BANK
0006B4 0E00               M          MOVLW  0
0006B6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
0006B8 0E04               M          MOVLW  4
0006BA 6F00               M          MOVWF  SSR_00_STEP+CHAN_X1R, BANKED
0006BC 0E01               M          MOVLW  1
0006BE 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X1R, BANKED
0006C0 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X1R, BANKED
0006C2 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0006C4 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X1R, BANKED
0006C6 D???               M         BRA     LLIM_END_8
                          M 
0006C8                    M LLIM_NOT_LOCKED_8:
0006C8 B300               M         BTFSC   BTN_X0_FLAGS+2,           BTN_FLG_MASKED, BANKED
0006CA D???               M         BRA     LLIM_OFF_8
0006CC B100               M         BTFSC   BTN_X0_FLAGS+2,           BTN_FLG_PRESSED, BANKED
0006CE D???               M         BRA     LLIM_OFF_8
0006D0 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006D2 D???               M         BRA     LLIM_OFF_8
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_STEADY 6
                          M          SET_SSR_VALUE 6,   255
0006D4 0104               M         BANKSEL SSR_DATA_BANK
0006D6 0EFF               M          MOVLW  255
0006D8 6F00               M          MOVWF  SSR_00_VALUE+6,   BANKED
0006DA 6B00               M          CLRF   SSR_00_STEP+6,   BANKED
0006DC 6B00               M          CLRF   SSR_00_SPEED+6,   BANKED
0006DE 6B00               M          CLRF   SSR_00_COUNTER+6,   BANKED
0006E0 6B00               M          CLRF   SSR_00_FLAGS+6,   BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_STEADY 5
                          M          SET_SSR_VALUE 5,   255
0006E2 0104               M         BANKSEL SSR_DATA_BANK
0006E4 0EFF               M          MOVLW  255
0006E6 6F00               M          MOVWF  SSR_00_VALUE+5,   BANKED
0006E8 6B00               M          CLRF   SSR_00_STEP+5,   BANKED
0006EA 6B00               M          CLRF   SSR_00_SPEED+5,   BANKED
0006EC 6B00               M          CLRF   SSR_00_COUNTER+5,   BANKED
0006EE 6B00               M          CLRF   SSR_00_FLAGS+5,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 4
                          M          SET_SSR_VALUE 4,   255
0006F0 0104               M         BANKSEL SSR_DATA_BANK
0006F2 0EFF               M          MOVLW  255
0006F4 6F00               M          MOVWF  SSR_00_VALUE+4,   BANKED
0006F6 6B00               M          CLRF   SSR_00_STEP+4,   BANKED
0006F8 6B00               M          CLRF   SSR_00_SPEED+4,   BANKED
0006FA 6B00               M          CLRF   SSR_00_COUNTER+4,   BANKED
0006FC 6B00               M          CLRF   SSR_00_FLAGS+4,   BANKED
                          M         ENDW
0006FE D???               M         BRA     LLIM_END_8
                          M         
000700                    M LLIM_OFF_8:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 6
                          M          SET_SSR_VALUE 6,   0
000700 0104               M         BANKSEL SSR_DATA_BANK
000702 0E00               M          MOVLW  0
000704 6F00               M          MOVWF  SSR_00_VALUE+6,   BANKED
000706 6B00               M          CLRF   SSR_00_STEP+6,   BANKED
000708 6B00               M          CLRF   SSR_00_SPEED+6,   BANKED
00070A 6B00               M          CLRF   SSR_00_COUNTER+6,   BANKED
00070C 6B00               M          CLRF   SSR_00_FLAGS+6,   BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 5
                          M          SET_SSR_VALUE 5,   0
00070E 0104               M         BANKSEL SSR_DATA_BANK
000710 0E00               M          MOVLW  0
000712 6F00               M          MOVWF  SSR_00_VALUE+5,   BANKED
000714 6B00               M          CLRF   SSR_00_STEP+5,   BANKED
000716 6B00               M          CLRF   SSR_00_SPEED+5,   BANKED
000718 6B00               M          CLRF   SSR_00_COUNTER+5,   BANKED
00071A 6B00               M          CLRF   SSR_00_FLAGS+5,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 4
                          M          SET_SSR_VALUE 4,   0
00071C 0104               M         BANKSEL SSR_DATA_BANK
00071E 0E00               M          MOVLW  0
000720 6F00               M          MOVWF  SSR_00_VALUE+4,   BANKED
000722 6B00               M          CLRF   SSR_00_STEP+4,   BANKED
000724 6B00               M          CLRF   SSR_00_SPEED+4,   BANKED
000726 6B00               M          CLRF   SSR_00_COUNTER+4,   BANKED
000728 6B00               M          CLRF   SSR_00_FLAGS+4,   BANKED
                          M         ENDW
                          M 
00072A                    M LLIM_END_8:
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00072A 010C               M         BANKSEL QUIZSHOW_DATA
  00000009                M LLIM_N  ++
                          M 
00072C                    M SCN_DB_END_2:
  00000003                M SCN_DBN ++
                      01004           SCAN_DEBOUNCE BTN_IDX_L1, PORT_L1, BIT_L1, CHAN_L1R, 1, CHAN_L1R
00072C 010C               M         BANKSEL QUIZSHOW_DATA
00072E 0004               M         CLRWDT
                          M         ;
                          M         ; Sense button state: 
                          M         ;  0=pressed
                          M         ;  1=released
                          M         ;
000730 A080               M         BTFSS   3968,         BIT_L1,  ACCESS
000732 D???               M         BRA     SCN_DB_DOWN_3           ; pressed? branch
                          M         ;
                          M         ; button senses as "up". drain debounce counter if possible
                          M         ;
000734 6700               M         TSTFSZ  BTN_X0_DEB_TMR+3,           BANKED
000736 D???               M         BRA     SCN_DB_DRAIN_3
                          M         ;
                          M         ; The button is officially "up".  If this is news, respond
                          M         ; to this change now.  All we need to do is note the status
                          M         ; change. Everything else happens later when the code notices
                          M         ; this flag state.
                          M         ;
000738 9700               M         BCF     BTN_X0_FLAGS+3,           BTN_FLG_ACTIVE, BANKED
00073A D???               M         BRA     SCN_DB_DONE_3
                          M 
00073C                    M SCN_DB_DRAIN_3:
                          M         ;
                          M         ; Drain the button debounce counter
                          M         ;
00073C 0700               M         DECF    BTN_X0_DEB_TMR+3,           F, BANKED
00073E D???               M         BRA     SCN_DB_DONE_3
                          M 
000740                    M SCN_DB_RST_LCK_3:
                          M         ;
                          M         ; The button needs to be locked out!
                          M         ; We found them pushing the button when they weren't supposed to.
                          M         ;
000740 8500               M         BSF     BTN_X0_FLAGS+3,           BTN_FLG_LOCKED, BANKED
000742 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+3
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L1, CHAN_L1R, 1, CHAN_L1R
000746 010C               M         BANKSEL QUIZSHOW_DATA
000748 A500               M         BTFSS   BTN_X0_FLAGS+3,           BTN_FLG_LOCKED, BANKED
00074A D???               M         BRA     LLIM_NOT_LOCKED_9
00074C B900               M         BTFSC   BTN_X0_FLAGS+3,           BTN_FLG_LCK_ACK, BANKED
00074E D???               M         BRA     LLIM_NOT_LOCKED_9
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
000750 8900               M         BSF     BTN_X0_FLAGS+3,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 7
                          M          SET_SSR_VALUE 7,   0
000752 0104               M         BANKSEL SSR_DATA_BANK
000754 0E00               M          MOVLW  0
000756 6F00               M          MOVWF  SSR_00_VALUE+7,   BANKED
000758 6B00               M          CLRF   SSR_00_STEP+7,   BANKED
00075A 6B00               M          CLRF   SSR_00_SPEED+7,   BANKED
00075C 6B00               M          CLRF   SSR_00_COUNTER+7,   BANKED
00075E 6B00               M          CLRF   SSR_00_FLAGS+7,   BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_L1R
                          M          SET_SSR_PATTERN CHAN_L1R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000760 0104               M         BANKSEL SSR_DATA_BANK
000762 0E00               M          MOVLW  0
000764 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
000766 0E04               M          MOVLW  4
000768 6F00               M          MOVWF  SSR_00_STEP+CHAN_L1R, BANKED
00076A 0E01               M          MOVLW  1
00076C 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L1R, BANKED
00076E 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L1R, BANKED
000770 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000772 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L1R, BANKED
000774 D???               M         BRA     LLIM_END_9
                          M 
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000776                    M LLIM_NOT_LOCKED_9:
000776 B300               M         BTFSC   BTN_X0_FLAGS+3,           BTN_FLG_MASKED, BANKED
000778 D???               M         BRA     LLIM_OFF_9
00077A B100               M         BTFSC   BTN_X0_FLAGS+3,           BTN_FLG_PRESSED, BANKED
00077C D???               M         BRA     LLIM_OFF_9
00077E A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000780 D???               M         BRA     LLIM_OFF_9
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 7
                          M          SET_SSR_VALUE 7,   255
000782 0104               M         BANKSEL SSR_DATA_BANK
000784 0EFF               M          MOVLW  255
000786 6F00               M          MOVWF  SSR_00_VALUE+7,   BANKED
000788 6B00               M          CLRF   SSR_00_STEP+7,   BANKED
00078A 6B00               M          CLRF   SSR_00_SPEED+7,   BANKED
00078C 6B00               M          CLRF   SSR_00_COUNTER+7,   BANKED
00078E 6B00               M          CLRF   SSR_00_FLAGS+7,   BANKED
                          M         ENDW
000790 D???               M         BRA     LLIM_END_9
                          M         
000792                    M LLIM_OFF_9:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 7
                          M          SET_SSR_VALUE 7,   0
000792 0104               M         BANKSEL SSR_DATA_BANK
000794 0E00               M          MOVLW  0
000796 6F00               M          MOVWF  SSR_00_VALUE+7,   BANKED
000798 6B00               M          CLRF   SSR_00_STEP+7,   BANKED
00079A 6B00               M          CLRF   SSR_00_SPEED+7,   BANKED
00079C 6B00               M          CLRF   SSR_00_COUNTER+7,   BANKED
00079E 6B00               M          CLRF   SSR_00_FLAGS+7,   BANKED
                          M         ENDW
                          M 
0007A0                    M LLIM_END_9:
0007A0 010C               M         BANKSEL QUIZSHOW_DATA
  0000000A                M LLIM_N  ++
0007A2 D???               M         BRA     SCN_DB_DONE_3
                          M 
0007A4                    M SCN_DB_DOWN_3:
                          M         ;
                          M         ; button senses as "down". fill debounce counter if possible
                          M         ;
0007A4 3F00               M         INCFSZ  BTN_X0_DEB_TMR+3,           F, BANKED
0007A6 D???               M         BRA     SCN_DB_DONE_3
                          M         ;
                          M         ; counter was full (since we overflowed it to 0 again). so
                          M         ; the button is officially "down".  Put the counter back
                          M         ; to 255 and proceed with what it means for the button to be
                          M         ; officially down.
                          M         ;
0007A8 6900               M         SETF    BTN_X0_DEB_TMR+3,           BANKED
0007AA B500               M         BTFSC   BTN_X0_FLAGS+3,           BTN_FLG_LOCKED, BANKED        ; is it locked?
0007AC D???               M         BRA     SCN_DB_RST_LCK_3                                ; stay locked longer
0007AE B700               M         BTFSC   BTN_X0_FLAGS+3,           BTN_FLG_ACTIVE, BANKED        ; if we already saw the button p
                            ress
0007B0 D???               M         BRA     SCN_DB_DONE_3                                   ;   then we don't need to do anything mo
                            re
                          M         ;
                          M         ; We didn't know the button was down yet. Let's see what
                          M         ; that changes...
                          M         ;
0007B2 8700               M         BSF     BTN_X0_FLAGS+3,           BTN_FLG_ACTIVE, BANKED        ; mark as "down"
0007B4 B300               M         BTFSC   BTN_X0_FLAGS+3,           BTN_FLG_MASKED, BANKED        ; is it masked?
0007B6 D???               M         BRA     SCN_DB_DONE_3                                   ; then ignore it
0007B8 B100               M         BTFSC   BTN_X0_FLAGS+3,           BTN_FLG_PRESSED, BANKED       ; already noted?
0007BA D???               M         BRA     SCN_DB_DONE_3                                   ; then we're already done
0007BC A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS        ; legal to press?
0007BE D???               M         BRA     SCN_DB_RST_LCK_3                                ; if not, lock out!
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;
                          M         ; The button was pressed legally and this is the first time we
                          M         ; noticed it. Record it as the official press for this button.
                          M         ;
0007C0 8100               M         BSF     BTN_X0_FLAGS+3,           BTN_FLG_PRESSED, BANKED
0007C2 9EF2               M         BCF     INTCON, 7, ACCESS                               ; disable interrupts
0007C4 9CF2               M         BCF     INTCON, 6, ACCESS                               ; disable interrupts
0007C6 C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+3
0007CA C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+3
0007CE CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+3
0007D2 CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+3
0007D6 8EF2               M         BSF     INTCON, 7, ACCESS                               ; enable interrupts
0007D8 8CF2               M         BSF     INTCON, 6, ACCESS                               ; enable interrupts
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L1, CHAN_L1R, 1, CHAN_L1R
0007DA 010C               M         BANKSEL QUIZSHOW_DATA
0007DC A500               M         BTFSS   BTN_X0_FLAGS+3,           BTN_FLG_LOCKED, BANKED
0007DE D???               M         BRA     LLIM_NOT_LOCKED_10
0007E0 B900               M         BTFSC   BTN_X0_FLAGS+3,           BTN_FLG_LCK_ACK, BANKED
0007E2 D???               M         BRA     LLIM_NOT_LOCKED_10
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
0007E4 8900               M         BSF     BTN_X0_FLAGS+3,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 7
                          M          SET_SSR_VALUE 7,   0
0007E6 0104               M         BANKSEL SSR_DATA_BANK
0007E8 0E00               M          MOVLW  0
0007EA 6F00               M          MOVWF  SSR_00_VALUE+7,   BANKED
0007EC 6B00               M          CLRF   SSR_00_STEP+7,   BANKED
0007EE 6B00               M          CLRF   SSR_00_SPEED+7,   BANKED
0007F0 6B00               M          CLRF   SSR_00_COUNTER+7,   BANKED
0007F2 6B00               M          CLRF   SSR_00_FLAGS+7,   BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_L1R
                          M          SET_SSR_PATTERN CHAN_L1R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0007F4 0104               M         BANKSEL SSR_DATA_BANK
0007F6 0E00               M          MOVLW  0
0007F8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
0007FA 0E04               M          MOVLW  4
0007FC 6F00               M          MOVWF  SSR_00_STEP+CHAN_L1R, BANKED
0007FE 0E01               M          MOVLW  1
000800 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L1R, BANKED
000802 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L1R, BANKED
000804 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000806 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L1R, BANKED
000808 D???               M         BRA     LLIM_END_10
                          M 
00080A                    M LLIM_NOT_LOCKED_10:
00080A B300               M         BTFSC   BTN_X0_FLAGS+3,           BTN_FLG_MASKED, BANKED
00080C D???               M         BRA     LLIM_OFF_10
00080E B100               M         BTFSC   BTN_X0_FLAGS+3,           BTN_FLG_PRESSED, BANKED
000810 D???               M         BRA     LLIM_OFF_10
000812 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000814 D???               M         BRA     LLIM_OFF_10
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 7
                          M          SET_SSR_VALUE 7,   255
000816 0104               M         BANKSEL SSR_DATA_BANK
000818 0EFF               M          MOVLW  255
00081A 6F00               M          MOVWF  SSR_00_VALUE+7,   BANKED
00081C 6B00               M          CLRF   SSR_00_STEP+7,   BANKED
00081E 6B00               M          CLRF   SSR_00_SPEED+7,   BANKED
000820 6B00               M          CLRF   SSR_00_COUNTER+7,   BANKED
000822 6B00               M          CLRF   SSR_00_FLAGS+7,   BANKED
                          M         ENDW
000824 D???               M         BRA     LLIM_END_10
                          M         
000826                    M LLIM_OFF_10:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 7
                          M          SET_SSR_VALUE 7,   0
000826 0104               M         BANKSEL SSR_DATA_BANK
000828 0E00               M          MOVLW  0
00082A 6F00               M          MOVWF  SSR_00_VALUE+7,   BANKED
00082C 6B00               M          CLRF   SSR_00_STEP+7,   BANKED
00082E 6B00               M          CLRF   SSR_00_SPEED+7,   BANKED
000830 6B00               M          CLRF   SSR_00_COUNTER+7,   BANKED
000832 6B00               M          CLRF   SSR_00_FLAGS+7,   BANKED
                          M         ENDW
                          M 
000834                    M LLIM_END_10:
000834 010C               M         BANKSEL QUIZSHOW_DATA
  0000000B                M LLIM_N  ++
                          M 
000836                    M SCN_DB_DONE_3:
                          M         ;
                          M         ; We're done with the button debouncing operations.
                          M         ;
                          M         ; If we're processing the 120Hz cleanup operations, do them now
                          M         ; for this button.
                          M         ;
000836 A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
000838 D???               M         BRA     SCN_DB_END_3
                          M         ;
                          M         ; If the button is locked out, decrement its timer. If it reaches
                          M         ; zero, we can release the lock now.
                          M         ;
00083A B500               M         BTFSC   BTN_X0_FLAGS+3,           BTN_FLG_LOCKED, BANKED
00083C 2F00               M         DECFSZ  BTN_X0_LOCKTMR+3,           F, BANKED
00083E D???               M         BRA     SCN_DB_END_3
000840 9500               M         BCF     BTN_X0_FLAGS+3,           BTN_FLG_LOCKED, BANKED        ; release the lock
000842 9900               M         BCF     BTN_X0_FLAGS+3,           BTN_FLG_LCK_ACK, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L1, CHAN_L1R, 1, CHAN_L1R
000844 010C               M         BANKSEL QUIZSHOW_DATA
000846 A500               M         BTFSS   BTN_X0_FLAGS+3,           BTN_FLG_LOCKED, BANKED
000848 D???               M         BRA     LLIM_NOT_LOCKED_11
00084A B900               M         BTFSC   BTN_X0_FLAGS+3,           BTN_FLG_LCK_ACK, BANKED
00084C D???               M         BRA     LLIM_NOT_LOCKED_11
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
00084E 8900               M         BSF     BTN_X0_FLAGS+3,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 7
                          M          SET_SSR_VALUE 7,   0
000850 0104               M         BANKSEL SSR_DATA_BANK
000852 0E00               M          MOVLW  0
000854 6F00               M          MOVWF  SSR_00_VALUE+7,   BANKED
000856 6B00               M          CLRF   SSR_00_STEP+7,   BANKED
000858 6B00               M          CLRF   SSR_00_SPEED+7,   BANKED
00085A 6B00               M          CLRF   SSR_00_COUNTER+7,   BANKED
00085C 6B00               M          CLRF   SSR_00_FLAGS+7,   BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_L1R
                          M          SET_SSR_PATTERN CHAN_L1R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
00085E 0104               M         BANKSEL SSR_DATA_BANK
000860 0E00               M          MOVLW  0
000862 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
000864 0E04               M          MOVLW  4
000866 6F00               M          MOVWF  SSR_00_STEP+CHAN_L1R, BANKED
000868 0E01               M          MOVLW  1
00086A 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L1R, BANKED
00086C 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L1R, BANKED
00086E 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000870 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L1R, BANKED
000872 D???               M         BRA     LLIM_END_11
                          M 
000874                    M LLIM_NOT_LOCKED_11:
000874 B300               M         BTFSC   BTN_X0_FLAGS+3,           BTN_FLG_MASKED, BANKED
000876 D???               M         BRA     LLIM_OFF_11
000878 B100               M         BTFSC   BTN_X0_FLAGS+3,           BTN_FLG_PRESSED, BANKED
00087A D???               M         BRA     LLIM_OFF_11
00087C A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00087E D???               M         BRA     LLIM_OFF_11
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 7
                          M          SET_SSR_VALUE 7,   255
000880 0104               M         BANKSEL SSR_DATA_BANK
000882 0EFF               M          MOVLW  255
000884 6F00               M          MOVWF  SSR_00_VALUE+7,   BANKED
000886 6B00               M          CLRF   SSR_00_STEP+7,   BANKED
000888 6B00               M          CLRF   SSR_00_SPEED+7,   BANKED
00088A 6B00               M          CLRF   SSR_00_COUNTER+7,   BANKED
00088C 6B00               M          CLRF   SSR_00_FLAGS+7,   BANKED
                          M         ENDW
00088E D???               M         BRA     LLIM_END_11
                          M         
000890                    M LLIM_OFF_11:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 7
                          M          SET_SSR_VALUE 7,   0
000890 0104               M         BANKSEL SSR_DATA_BANK
000892 0E00               M          MOVLW  0
000894 6F00               M          MOVWF  SSR_00_VALUE+7,   BANKED
000896 6B00               M          CLRF   SSR_00_STEP+7,   BANKED
000898 6B00               M          CLRF   SSR_00_SPEED+7,   BANKED
00089A 6B00               M          CLRF   SSR_00_COUNTER+7,   BANKED
00089C 6B00               M          CLRF   SSR_00_FLAGS+7,   BANKED
                          M         ENDW
                          M 
00089E                    M LLIM_END_11:
00089E 010C               M         BANKSEL QUIZSHOW_DATA
  0000000C                M LLIM_N  ++
                          M 
0008A0                    M SCN_DB_END_3:
  00000004                M SCN_DBN ++
                      01005           SCAN_DEBOUNCE BTN_IDX_X2, PORT_X2, BIT_X2, CHAN_X2R, 3, CHAN_X2R
0008A0 010C               M         BANKSEL QUIZSHOW_DATA
0008A2 0004               M         CLRWDT
                          M         ;
                          M         ; Sense button state: 
                          M         ;  0=pressed
                          M         ;  1=released
                          M         ;
0008A4 A880               M         BTFSS   3968,         BIT_X2,  ACCESS
0008A6 D???               M         BRA     SCN_DB_DOWN_4           ; pressed? branch
                          M         ;
                          M         ; button senses as "up". drain debounce counter if possible
                          M         ;
0008A8 6700               M         TSTFSZ  BTN_X0_DEB_TMR+4,           BANKED
0008AA D???               M         BRA     SCN_DB_DRAIN_4
                          M         ;
                          M         ; The button is officially "up".  If this is news, respond
                          M         ; to this change now.  All we need to do is note the status
                          M         ; change. Everything else happens later when the code notices
                          M         ; this flag state.
                          M         ;
0008AC 9700               M         BCF     BTN_X0_FLAGS+4,           BTN_FLG_ACTIVE, BANKED
0008AE D???               M         BRA     SCN_DB_DONE_4
                          M 
0008B0                    M SCN_DB_DRAIN_4:
                          M         ;
                          M         ; Drain the button debounce counter
                          M         ;
0008B0 0700               M         DECF    BTN_X0_DEB_TMR+4,           F, BANKED
0008B2 D???               M         BRA     SCN_DB_DONE_4
                          M 
0008B4                    M SCN_DB_RST_LCK_4:
                          M         ;
                          M         ; The button needs to be locked out!
                          M         ; We found them pushing the button when they weren't supposed to.
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;
0008B4 8500               M         BSF     BTN_X0_FLAGS+4,           BTN_FLG_LOCKED, BANKED
0008B6 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+4
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X2, CHAN_X2R, 3, CHAN_X2R
0008BA 010C               M         BANKSEL QUIZSHOW_DATA
0008BC A500               M         BTFSS   BTN_X0_FLAGS+4,           BTN_FLG_LOCKED, BANKED
0008BE D???               M         BRA     LLIM_NOT_LOCKED_12
0008C0 B900               M         BTFSC   BTN_X0_FLAGS+4,           BTN_FLG_LCK_ACK, BANKED
0008C2 D???               M         BRA     LLIM_NOT_LOCKED_12
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
0008C4 8900               M         BSF     BTN_X0_FLAGS+4,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 10
                          M          SET_SSR_VALUE 10,  0
0008C6 0104               M         BANKSEL SSR_DATA_BANK
0008C8 0E00               M          MOVLW  0
0008CA 6F00               M          MOVWF  SSR_00_VALUE+10,  BANKED
0008CC 6B00               M          CLRF   SSR_00_STEP+10,  BANKED
0008CE 6B00               M          CLRF   SSR_00_SPEED+10,  BANKED
0008D0 6B00               M          CLRF   SSR_00_COUNTER+10,  BANKED
0008D2 6B00               M          CLRF   SSR_00_FLAGS+10,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 9
                          M          SET_SSR_VALUE 9,   0
0008D4 0104               M         BANKSEL SSR_DATA_BANK
0008D6 0E00               M          MOVLW  0
0008D8 6F00               M          MOVWF  SSR_00_VALUE+9,   BANKED
0008DA 6B00               M          CLRF   SSR_00_STEP+9,   BANKED
0008DC 6B00               M          CLRF   SSR_00_SPEED+9,   BANKED
0008DE 6B00               M          CLRF   SSR_00_COUNTER+9,   BANKED
0008E0 6B00               M          CLRF   SSR_00_FLAGS+9,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 8
                          M          SET_SSR_VALUE 8,   0
0008E2 0104               M         BANKSEL SSR_DATA_BANK
0008E4 0E00               M          MOVLW  0
0008E6 6F00               M          MOVWF  SSR_00_VALUE+8,   BANKED
0008E8 6B00               M          CLRF   SSR_00_STEP+8,   BANKED
0008EA 6B00               M          CLRF   SSR_00_SPEED+8,   BANKED
0008EC 6B00               M          CLRF   SSR_00_COUNTER+8,   BANKED
0008EE 6B00               M          CLRF   SSR_00_FLAGS+8,   BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_X2R
                          M          SET_SSR_PATTERN CHAN_X2R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0008F0 0104               M         BANKSEL SSR_DATA_BANK
0008F2 0E00               M          MOVLW  0
0008F4 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
0008F6 0E04               M          MOVLW  4
0008F8 6F00               M          MOVWF  SSR_00_STEP+CHAN_X2R, BANKED
0008FA 0E01               M          MOVLW  1
0008FC 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X2R, BANKED
0008FE 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X2R, BANKED
000900 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000902 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X2R, BANKED
000904 D???               M         BRA     LLIM_END_12
                          M 
000906                    M LLIM_NOT_LOCKED_12:
000906 B300               M         BTFSC   BTN_X0_FLAGS+4,           BTN_FLG_MASKED, BANKED
000908 D???               M         BRA     LLIM_OFF_12
00090A B100               M         BTFSC   BTN_X0_FLAGS+4,           BTN_FLG_PRESSED, BANKED
00090C D???               M         BRA     LLIM_OFF_12
00090E A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000910 D???               M         BRA     LLIM_OFF_12
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_STEADY 10
                          M          SET_SSR_VALUE 10,  255
000912 0104               M         BANKSEL SSR_DATA_BANK
000914 0EFF               M          MOVLW  255
000916 6F00               M          MOVWF  SSR_00_VALUE+10,  BANKED
000918 6B00               M          CLRF   SSR_00_STEP+10,  BANKED
00091A 6B00               M          CLRF   SSR_00_SPEED+10,  BANKED
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00091C 6B00               M          CLRF   SSR_00_COUNTER+10,  BANKED
00091E 6B00               M          CLRF   SSR_00_FLAGS+10,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_STEADY 9
                          M          SET_SSR_VALUE 9,   255
000920 0104               M         BANKSEL SSR_DATA_BANK
000922 0EFF               M          MOVLW  255
000924 6F00               M          MOVWF  SSR_00_VALUE+9,   BANKED
000926 6B00               M          CLRF   SSR_00_STEP+9,   BANKED
000928 6B00               M          CLRF   SSR_00_SPEED+9,   BANKED
00092A 6B00               M          CLRF   SSR_00_COUNTER+9,   BANKED
00092C 6B00               M          CLRF   SSR_00_FLAGS+9,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 8
                          M          SET_SSR_VALUE 8,   255
00092E 0104               M         BANKSEL SSR_DATA_BANK
000930 0EFF               M          MOVLW  255
000932 6F00               M          MOVWF  SSR_00_VALUE+8,   BANKED
000934 6B00               M          CLRF   SSR_00_STEP+8,   BANKED
000936 6B00               M          CLRF   SSR_00_SPEED+8,   BANKED
000938 6B00               M          CLRF   SSR_00_COUNTER+8,   BANKED
00093A 6B00               M          CLRF   SSR_00_FLAGS+8,   BANKED
                          M         ENDW
00093C D???               M         BRA     LLIM_END_12
                          M         
00093E                    M LLIM_OFF_12:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 10
                          M          SET_SSR_VALUE 10,  0
00093E 0104               M         BANKSEL SSR_DATA_BANK
000940 0E00               M          MOVLW  0
000942 6F00               M          MOVWF  SSR_00_VALUE+10,  BANKED
000944 6B00               M          CLRF   SSR_00_STEP+10,  BANKED
000946 6B00               M          CLRF   SSR_00_SPEED+10,  BANKED
000948 6B00               M          CLRF   SSR_00_COUNTER+10,  BANKED
00094A 6B00               M          CLRF   SSR_00_FLAGS+10,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 9
                          M          SET_SSR_VALUE 9,   0
00094C 0104               M         BANKSEL SSR_DATA_BANK
00094E 0E00               M          MOVLW  0
000950 6F00               M          MOVWF  SSR_00_VALUE+9,   BANKED
000952 6B00               M          CLRF   SSR_00_STEP+9,   BANKED
000954 6B00               M          CLRF   SSR_00_SPEED+9,   BANKED
000956 6B00               M          CLRF   SSR_00_COUNTER+9,   BANKED
000958 6B00               M          CLRF   SSR_00_FLAGS+9,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 8
                          M          SET_SSR_VALUE 8,   0
00095A 0104               M         BANKSEL SSR_DATA_BANK
00095C 0E00               M          MOVLW  0
00095E 6F00               M          MOVWF  SSR_00_VALUE+8,   BANKED
000960 6B00               M          CLRF   SSR_00_STEP+8,   BANKED
000962 6B00               M          CLRF   SSR_00_SPEED+8,   BANKED
000964 6B00               M          CLRF   SSR_00_COUNTER+8,   BANKED
000966 6B00               M          CLRF   SSR_00_FLAGS+8,   BANKED
                          M         ENDW
                          M 
000968                    M LLIM_END_12:
000968 010C               M         BANKSEL QUIZSHOW_DATA
  0000000D                M LLIM_N  ++
00096A D???               M         BRA     SCN_DB_DONE_4
                          M 
00096C                    M SCN_DB_DOWN_4:
                          M         ;
                          M         ; button senses as "down". fill debounce counter if possible
                          M         ;
00096C 3F00               M         INCFSZ  BTN_X0_DEB_TMR+4,           F, BANKED
00096E D???               M         BRA     SCN_DB_DONE_4
                          M         ;
                          M         ; counter was full (since we overflowed it to 0 again). so
                          M         ; the button is officially "down".  Put the counter back
                          M         ; to 255 and proceed with what it means for the button to be
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ; officially down.
                          M         ;
000970 6900               M         SETF    BTN_X0_DEB_TMR+4,           BANKED
000972 B500               M         BTFSC   BTN_X0_FLAGS+4,           BTN_FLG_LOCKED, BANKED        ; is it locked?
000974 D???               M         BRA     SCN_DB_RST_LCK_4                                ; stay locked longer
000976 B700               M         BTFSC   BTN_X0_FLAGS+4,           BTN_FLG_ACTIVE, BANKED        ; if we already saw the button p
                            ress
000978 D???               M         BRA     SCN_DB_DONE_4                                   ;   then we don't need to do anything mo
                            re
                          M         ;
                          M         ; We didn't know the button was down yet. Let's see what
                          M         ; that changes...
                          M         ;
00097A 8700               M         BSF     BTN_X0_FLAGS+4,           BTN_FLG_ACTIVE, BANKED        ; mark as "down"
00097C B300               M         BTFSC   BTN_X0_FLAGS+4,           BTN_FLG_MASKED, BANKED        ; is it masked?
00097E D???               M         BRA     SCN_DB_DONE_4                                   ; then ignore it
000980 B100               M         BTFSC   BTN_X0_FLAGS+4,           BTN_FLG_PRESSED, BANKED       ; already noted?
000982 D???               M         BRA     SCN_DB_DONE_4                                   ; then we're already done
000984 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS        ; legal to press?
000986 D???               M         BRA     SCN_DB_RST_LCK_4                                ; if not, lock out!
                          M         ;
                          M         ; The button was pressed legally and this is the first time we
                          M         ; noticed it. Record it as the official press for this button.
                          M         ;
000988 8100               M         BSF     BTN_X0_FLAGS+4,           BTN_FLG_PRESSED, BANKED
00098A 9EF2               M         BCF     INTCON, 7, ACCESS                               ; disable interrupts
00098C 9CF2               M         BCF     INTCON, 6, ACCESS                               ; disable interrupts
00098E C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+4
000992 C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+4
000996 CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+4
00099A CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+4
00099E 8EF2               M         BSF     INTCON, 7, ACCESS                               ; enable interrupts
0009A0 8CF2               M         BSF     INTCON, 6, ACCESS                               ; enable interrupts
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X2, CHAN_X2R, 3, CHAN_X2R
0009A2 010C               M         BANKSEL QUIZSHOW_DATA
0009A4 A500               M         BTFSS   BTN_X0_FLAGS+4,           BTN_FLG_LOCKED, BANKED
0009A6 D???               M         BRA     LLIM_NOT_LOCKED_13
0009A8 B900               M         BTFSC   BTN_X0_FLAGS+4,           BTN_FLG_LCK_ACK, BANKED
0009AA D???               M         BRA     LLIM_NOT_LOCKED_13
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
0009AC 8900               M         BSF     BTN_X0_FLAGS+4,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 10
                          M          SET_SSR_VALUE 10,  0
0009AE 0104               M         BANKSEL SSR_DATA_BANK
0009B0 0E00               M          MOVLW  0
0009B2 6F00               M          MOVWF  SSR_00_VALUE+10,  BANKED
0009B4 6B00               M          CLRF   SSR_00_STEP+10,  BANKED
0009B6 6B00               M          CLRF   SSR_00_SPEED+10,  BANKED
0009B8 6B00               M          CLRF   SSR_00_COUNTER+10,  BANKED
0009BA 6B00               M          CLRF   SSR_00_FLAGS+10,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 9
                          M          SET_SSR_VALUE 9,   0
0009BC 0104               M         BANKSEL SSR_DATA_BANK
0009BE 0E00               M          MOVLW  0
0009C0 6F00               M          MOVWF  SSR_00_VALUE+9,   BANKED
0009C2 6B00               M          CLRF   SSR_00_STEP+9,   BANKED
0009C4 6B00               M          CLRF   SSR_00_SPEED+9,   BANKED
0009C6 6B00               M          CLRF   SSR_00_COUNTER+9,   BANKED
0009C8 6B00               M          CLRF   SSR_00_FLAGS+9,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 8
                          M          SET_SSR_VALUE 8,   0
0009CA 0104               M         BANKSEL SSR_DATA_BANK
0009CC 0E00               M          MOVLW  0
0009CE 6F00               M          MOVWF  SSR_00_VALUE+8,   BANKED
0009D0 6B00               M          CLRF   SSR_00_STEP+8,   BANKED
0009D2 6B00               M          CLRF   SSR_00_SPEED+8,   BANKED
0009D4 6B00               M          CLRF   SSR_00_COUNTER+8,   BANKED
0009D6 6B00               M          CLRF   SSR_00_FLAGS+8,   BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_X2R
                          M          SET_SSR_PATTERN CHAN_X2R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0009D8 0104               M         BANKSEL SSR_DATA_BANK
0009DA 0E00               M          MOVLW  0
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009DC 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
0009DE 0E04               M          MOVLW  4
0009E0 6F00               M          MOVWF  SSR_00_STEP+CHAN_X2R, BANKED
0009E2 0E01               M          MOVLW  1
0009E4 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X2R, BANKED
0009E6 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X2R, BANKED
0009E8 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0009EA 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X2R, BANKED
0009EC D???               M         BRA     LLIM_END_13
                          M 
0009EE                    M LLIM_NOT_LOCKED_13:
0009EE B300               M         BTFSC   BTN_X0_FLAGS+4,           BTN_FLG_MASKED, BANKED
0009F0 D???               M         BRA     LLIM_OFF_13
0009F2 B100               M         BTFSC   BTN_X0_FLAGS+4,           BTN_FLG_PRESSED, BANKED
0009F4 D???               M         BRA     LLIM_OFF_13
0009F6 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0009F8 D???               M         BRA     LLIM_OFF_13
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_STEADY 10
                          M          SET_SSR_VALUE 10,  255
0009FA 0104               M         BANKSEL SSR_DATA_BANK
0009FC 0EFF               M          MOVLW  255
0009FE 6F00               M          MOVWF  SSR_00_VALUE+10,  BANKED
000A00 6B00               M          CLRF   SSR_00_STEP+10,  BANKED
000A02 6B00               M          CLRF   SSR_00_SPEED+10,  BANKED
000A04 6B00               M          CLRF   SSR_00_COUNTER+10,  BANKED
000A06 6B00               M          CLRF   SSR_00_FLAGS+10,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_STEADY 9
                          M          SET_SSR_VALUE 9,   255
000A08 0104               M         BANKSEL SSR_DATA_BANK
000A0A 0EFF               M          MOVLW  255
000A0C 6F00               M          MOVWF  SSR_00_VALUE+9,   BANKED
000A0E 6B00               M          CLRF   SSR_00_STEP+9,   BANKED
000A10 6B00               M          CLRF   SSR_00_SPEED+9,   BANKED
000A12 6B00               M          CLRF   SSR_00_COUNTER+9,   BANKED
000A14 6B00               M          CLRF   SSR_00_FLAGS+9,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 8
                          M          SET_SSR_VALUE 8,   255
000A16 0104               M         BANKSEL SSR_DATA_BANK
000A18 0EFF               M          MOVLW  255
000A1A 6F00               M          MOVWF  SSR_00_VALUE+8,   BANKED
000A1C 6B00               M          CLRF   SSR_00_STEP+8,   BANKED
000A1E 6B00               M          CLRF   SSR_00_SPEED+8,   BANKED
000A20 6B00               M          CLRF   SSR_00_COUNTER+8,   BANKED
000A22 6B00               M          CLRF   SSR_00_FLAGS+8,   BANKED
                          M         ENDW
000A24 D???               M         BRA     LLIM_END_13
                          M         
000A26                    M LLIM_OFF_13:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 10
                          M          SET_SSR_VALUE 10,  0
000A26 0104               M         BANKSEL SSR_DATA_BANK
000A28 0E00               M          MOVLW  0
000A2A 6F00               M          MOVWF  SSR_00_VALUE+10,  BANKED
000A2C 6B00               M          CLRF   SSR_00_STEP+10,  BANKED
000A2E 6B00               M          CLRF   SSR_00_SPEED+10,  BANKED
000A30 6B00               M          CLRF   SSR_00_COUNTER+10,  BANKED
000A32 6B00               M          CLRF   SSR_00_FLAGS+10,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 9
                          M          SET_SSR_VALUE 9,   0
000A34 0104               M         BANKSEL SSR_DATA_BANK
000A36 0E00               M          MOVLW  0
000A38 6F00               M          MOVWF  SSR_00_VALUE+9,   BANKED
000A3A 6B00               M          CLRF   SSR_00_STEP+9,   BANKED
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A3C 6B00               M          CLRF   SSR_00_SPEED+9,   BANKED
000A3E 6B00               M          CLRF   SSR_00_COUNTER+9,   BANKED
000A40 6B00               M          CLRF   SSR_00_FLAGS+9,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 8
                          M          SET_SSR_VALUE 8,   0
000A42 0104               M         BANKSEL SSR_DATA_BANK
000A44 0E00               M          MOVLW  0
000A46 6F00               M          MOVWF  SSR_00_VALUE+8,   BANKED
000A48 6B00               M          CLRF   SSR_00_STEP+8,   BANKED
000A4A 6B00               M          CLRF   SSR_00_SPEED+8,   BANKED
000A4C 6B00               M          CLRF   SSR_00_COUNTER+8,   BANKED
000A4E 6B00               M          CLRF   SSR_00_FLAGS+8,   BANKED
                          M         ENDW
                          M 
000A50                    M LLIM_END_13:
000A50 010C               M         BANKSEL QUIZSHOW_DATA
  0000000E                M LLIM_N  ++
                          M 
000A52                    M SCN_DB_DONE_4:
                          M         ;
                          M         ; We're done with the button debouncing operations.
                          M         ;
                          M         ; If we're processing the 120Hz cleanup operations, do them now
                          M         ; for this button.
                          M         ;
000A52 A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
000A54 D???               M         BRA     SCN_DB_END_4
                          M         ;
                          M         ; If the button is locked out, decrement its timer. If it reaches
                          M         ; zero, we can release the lock now.
                          M         ;
000A56 B500               M         BTFSC   BTN_X0_FLAGS+4,           BTN_FLG_LOCKED, BANKED
000A58 2F00               M         DECFSZ  BTN_X0_LOCKTMR+4,           F, BANKED
000A5A D???               M         BRA     SCN_DB_END_4
000A5C 9500               M         BCF     BTN_X0_FLAGS+4,           BTN_FLG_LOCKED, BANKED        ; release the lock
000A5E 9900               M         BCF     BTN_X0_FLAGS+4,           BTN_FLG_LCK_ACK, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X2, CHAN_X2R, 3, CHAN_X2R
000A60 010C               M         BANKSEL QUIZSHOW_DATA
000A62 A500               M         BTFSS   BTN_X0_FLAGS+4,           BTN_FLG_LOCKED, BANKED
000A64 D???               M         BRA     LLIM_NOT_LOCKED_14
000A66 B900               M         BTFSC   BTN_X0_FLAGS+4,           BTN_FLG_LCK_ACK, BANKED
000A68 D???               M         BRA     LLIM_NOT_LOCKED_14
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
000A6A 8900               M         BSF     BTN_X0_FLAGS+4,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 10
                          M          SET_SSR_VALUE 10,  0
000A6C 0104               M         BANKSEL SSR_DATA_BANK
000A6E 0E00               M          MOVLW  0
000A70 6F00               M          MOVWF  SSR_00_VALUE+10,  BANKED
000A72 6B00               M          CLRF   SSR_00_STEP+10,  BANKED
000A74 6B00               M          CLRF   SSR_00_SPEED+10,  BANKED
000A76 6B00               M          CLRF   SSR_00_COUNTER+10,  BANKED
000A78 6B00               M          CLRF   SSR_00_FLAGS+10,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 9
                          M          SET_SSR_VALUE 9,   0
000A7A 0104               M         BANKSEL SSR_DATA_BANK
000A7C 0E00               M          MOVLW  0
000A7E 6F00               M          MOVWF  SSR_00_VALUE+9,   BANKED
000A80 6B00               M          CLRF   SSR_00_STEP+9,   BANKED
000A82 6B00               M          CLRF   SSR_00_SPEED+9,   BANKED
000A84 6B00               M          CLRF   SSR_00_COUNTER+9,   BANKED
000A86 6B00               M          CLRF   SSR_00_FLAGS+9,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 8
                          M          SET_SSR_VALUE 8,   0
000A88 0104               M         BANKSEL SSR_DATA_BANK
000A8A 0E00               M          MOVLW  0
000A8C 6F00               M          MOVWF  SSR_00_VALUE+8,   BANKED
000A8E 6B00               M          CLRF   SSR_00_STEP+8,   BANKED
000A90 6B00               M          CLRF   SSR_00_SPEED+8,   BANKED
000A92 6B00               M          CLRF   SSR_00_COUNTER+8,   BANKED
000A94 6B00               M          CLRF   SSR_00_FLAGS+8,   BANKED
                          M         ENDW
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         SET_SSR_RAPID_FADE CHAN_X2R
                          M          SET_SSR_PATTERN CHAN_X2R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000A96 0104               M         BANKSEL SSR_DATA_BANK
000A98 0E00               M          MOVLW  0
000A9A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
000A9C 0E04               M          MOVLW  4
000A9E 6F00               M          MOVWF  SSR_00_STEP+CHAN_X2R, BANKED
000AA0 0E01               M          MOVLW  1
000AA2 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X2R, BANKED
000AA4 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X2R, BANKED
000AA6 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000AA8 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X2R, BANKED
000AAA D???               M         BRA     LLIM_END_14
                          M 
000AAC                    M LLIM_NOT_LOCKED_14:
000AAC B300               M         BTFSC   BTN_X0_FLAGS+4,           BTN_FLG_MASKED, BANKED
000AAE D???               M         BRA     LLIM_OFF_14
000AB0 B100               M         BTFSC   BTN_X0_FLAGS+4,           BTN_FLG_PRESSED, BANKED
000AB2 D???               M         BRA     LLIM_OFF_14
000AB4 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000AB6 D???               M         BRA     LLIM_OFF_14
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_STEADY 10
                          M          SET_SSR_VALUE 10,  255
000AB8 0104               M         BANKSEL SSR_DATA_BANK
000ABA 0EFF               M          MOVLW  255
000ABC 6F00               M          MOVWF  SSR_00_VALUE+10,  BANKED
000ABE 6B00               M          CLRF   SSR_00_STEP+10,  BANKED
000AC0 6B00               M          CLRF   SSR_00_SPEED+10,  BANKED
000AC2 6B00               M          CLRF   SSR_00_COUNTER+10,  BANKED
000AC4 6B00               M          CLRF   SSR_00_FLAGS+10,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_STEADY 9
                          M          SET_SSR_VALUE 9,   255
000AC6 0104               M         BANKSEL SSR_DATA_BANK
000AC8 0EFF               M          MOVLW  255
000ACA 6F00               M          MOVWF  SSR_00_VALUE+9,   BANKED
000ACC 6B00               M          CLRF   SSR_00_STEP+9,   BANKED
000ACE 6B00               M          CLRF   SSR_00_SPEED+9,   BANKED
000AD0 6B00               M          CLRF   SSR_00_COUNTER+9,   BANKED
000AD2 6B00               M          CLRF   SSR_00_FLAGS+9,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 8
                          M          SET_SSR_VALUE 8,   255
000AD4 0104               M         BANKSEL SSR_DATA_BANK
000AD6 0EFF               M          MOVLW  255
000AD8 6F00               M          MOVWF  SSR_00_VALUE+8,   BANKED
000ADA 6B00               M          CLRF   SSR_00_STEP+8,   BANKED
000ADC 6B00               M          CLRF   SSR_00_SPEED+8,   BANKED
000ADE 6B00               M          CLRF   SSR_00_COUNTER+8,   BANKED
000AE0 6B00               M          CLRF   SSR_00_FLAGS+8,   BANKED
                          M         ENDW
000AE2 D???               M         BRA     LLIM_END_14
                          M         
000AE4                    M LLIM_OFF_14:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 10
                          M          SET_SSR_VALUE 10,  0
000AE4 0104               M         BANKSEL SSR_DATA_BANK
000AE6 0E00               M          MOVLW  0
000AE8 6F00               M          MOVWF  SSR_00_VALUE+10,  BANKED
000AEA 6B00               M          CLRF   SSR_00_STEP+10,  BANKED
000AEC 6B00               M          CLRF   SSR_00_SPEED+10,  BANKED
000AEE 6B00               M          CLRF   SSR_00_COUNTER+10,  BANKED
000AF0 6B00               M          CLRF   SSR_00_FLAGS+10,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 9
                          M          SET_SSR_VALUE 9,   0
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000AF2 0104               M         BANKSEL SSR_DATA_BANK
000AF4 0E00               M          MOVLW  0
000AF6 6F00               M          MOVWF  SSR_00_VALUE+9,   BANKED
000AF8 6B00               M          CLRF   SSR_00_STEP+9,   BANKED
000AFA 6B00               M          CLRF   SSR_00_SPEED+9,   BANKED
000AFC 6B00               M          CLRF   SSR_00_COUNTER+9,   BANKED
000AFE 6B00               M          CLRF   SSR_00_FLAGS+9,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 8
                          M          SET_SSR_VALUE 8,   0
000B00 0104               M         BANKSEL SSR_DATA_BANK
000B02 0E00               M          MOVLW  0
000B04 6F00               M          MOVWF  SSR_00_VALUE+8,   BANKED
000B06 6B00               M          CLRF   SSR_00_STEP+8,   BANKED
000B08 6B00               M          CLRF   SSR_00_SPEED+8,   BANKED
000B0A 6B00               M          CLRF   SSR_00_COUNTER+8,   BANKED
000B0C 6B00               M          CLRF   SSR_00_FLAGS+8,   BANKED
                          M         ENDW
                          M 
000B0E                    M LLIM_END_14:
000B0E 010C               M         BANKSEL QUIZSHOW_DATA
  0000000F                M LLIM_N  ++
                          M 
000B10                    M SCN_DB_END_4:
  00000005                M SCN_DBN ++
                      01006           SCAN_DEBOUNCE BTN_IDX_L2, PORT_L2, BIT_L2, CHAN_L2R, 1, CHAN_L2R
000B10 010C               M         BANKSEL QUIZSHOW_DATA
000B12 0004               M         CLRWDT
                          M         ;
                          M         ; Sense button state: 
                          M         ;  0=pressed
                          M         ;  1=released
                          M         ;
000B14 AA80               M         BTFSS   3968,         BIT_L2,  ACCESS
000B16 D???               M         BRA     SCN_DB_DOWN_5           ; pressed? branch
                          M         ;
                          M         ; button senses as "up". drain debounce counter if possible
                          M         ;
000B18 6700               M         TSTFSZ  BTN_X0_DEB_TMR+5,           BANKED
000B1A D???               M         BRA     SCN_DB_DRAIN_5
                          M         ;
                          M         ; The button is officially "up".  If this is news, respond
                          M         ; to this change now.  All we need to do is note the status
                          M         ; change. Everything else happens later when the code notices
                          M         ; this flag state.
                          M         ;
000B1C 9700               M         BCF     BTN_X0_FLAGS+5,           BTN_FLG_ACTIVE, BANKED
000B1E D???               M         BRA     SCN_DB_DONE_5
                          M 
000B20                    M SCN_DB_DRAIN_5:
                          M         ;
                          M         ; Drain the button debounce counter
                          M         ;
000B20 0700               M         DECF    BTN_X0_DEB_TMR+5,           F, BANKED
000B22 D???               M         BRA     SCN_DB_DONE_5
                          M 
000B24                    M SCN_DB_RST_LCK_5:
                          M         ;
                          M         ; The button needs to be locked out!
                          M         ; We found them pushing the button when they weren't supposed to.
                          M         ;
000B24 8500               M         BSF     BTN_X0_FLAGS+5,           BTN_FLG_LOCKED, BANKED
000B26 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+5
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L2, CHAN_L2R, 1, CHAN_L2R
000B2A 010C               M         BANKSEL QUIZSHOW_DATA
000B2C A500               M         BTFSS   BTN_X0_FLAGS+5,           BTN_FLG_LOCKED, BANKED
000B2E D???               M         BRA     LLIM_NOT_LOCKED_15
000B30 B900               M         BTFSC   BTN_X0_FLAGS+5,           BTN_FLG_LCK_ACK, BANKED
000B32 D???               M         BRA     LLIM_NOT_LOCKED_15
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
000B34 8900               M         BSF     BTN_X0_FLAGS+5,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 11
                          M          SET_SSR_VALUE 11,  0
000B36 0104               M         BANKSEL SSR_DATA_BANK
000B38 0E00               M          MOVLW  0
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B3A 6F00               M          MOVWF  SSR_00_VALUE+11,  BANKED
000B3C 6B00               M          CLRF   SSR_00_STEP+11,  BANKED
000B3E 6B00               M          CLRF   SSR_00_SPEED+11,  BANKED
000B40 6B00               M          CLRF   SSR_00_COUNTER+11,  BANKED
000B42 6B00               M          CLRF   SSR_00_FLAGS+11,  BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_L2R
                          M          SET_SSR_PATTERN CHAN_L2R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000B44 0104               M         BANKSEL SSR_DATA_BANK
000B46 0E00               M          MOVLW  0
000B48 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000B4A 0E04               M          MOVLW  4
000B4C 6F00               M          MOVWF  SSR_00_STEP+CHAN_L2R, BANKED
000B4E 0E01               M          MOVLW  1
000B50 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L2R, BANKED
000B52 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L2R, BANKED
000B54 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000B56 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L2R, BANKED
000B58 D???               M         BRA     LLIM_END_15
                          M 
000B5A                    M LLIM_NOT_LOCKED_15:
000B5A B300               M         BTFSC   BTN_X0_FLAGS+5,           BTN_FLG_MASKED, BANKED
000B5C D???               M         BRA     LLIM_OFF_15
000B5E B100               M         BTFSC   BTN_X0_FLAGS+5,           BTN_FLG_PRESSED, BANKED
000B60 D???               M         BRA     LLIM_OFF_15
000B62 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000B64 D???               M         BRA     LLIM_OFF_15
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 11
                          M          SET_SSR_VALUE 11,  255
000B66 0104               M         BANKSEL SSR_DATA_BANK
000B68 0EFF               M          MOVLW  255
000B6A 6F00               M          MOVWF  SSR_00_VALUE+11,  BANKED
000B6C 6B00               M          CLRF   SSR_00_STEP+11,  BANKED
000B6E 6B00               M          CLRF   SSR_00_SPEED+11,  BANKED
000B70 6B00               M          CLRF   SSR_00_COUNTER+11,  BANKED
000B72 6B00               M          CLRF   SSR_00_FLAGS+11,  BANKED
                          M         ENDW
000B74 D???               M         BRA     LLIM_END_15
                          M         
000B76                    M LLIM_OFF_15:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 11
                          M          SET_SSR_VALUE 11,  0
000B76 0104               M         BANKSEL SSR_DATA_BANK
000B78 0E00               M          MOVLW  0
000B7A 6F00               M          MOVWF  SSR_00_VALUE+11,  BANKED
000B7C 6B00               M          CLRF   SSR_00_STEP+11,  BANKED
000B7E 6B00               M          CLRF   SSR_00_SPEED+11,  BANKED
000B80 6B00               M          CLRF   SSR_00_COUNTER+11,  BANKED
000B82 6B00               M          CLRF   SSR_00_FLAGS+11,  BANKED
                          M         ENDW
                          M 
000B84                    M LLIM_END_15:
000B84 010C               M         BANKSEL QUIZSHOW_DATA
  00000010                M LLIM_N  ++
000B86 D???               M         BRA     SCN_DB_DONE_5
                          M 
000B88                    M SCN_DB_DOWN_5:
                          M         ;
                          M         ; button senses as "down". fill debounce counter if possible
                          M         ;
000B88 3F00               M         INCFSZ  BTN_X0_DEB_TMR+5,           F, BANKED
000B8A D???               M         BRA     SCN_DB_DONE_5
                          M         ;
                          M         ; counter was full (since we overflowed it to 0 again). so
                          M         ; the button is officially "down".  Put the counter back
                          M         ; to 255 and proceed with what it means for the button to be
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ; officially down.
                          M         ;
000B8C 6900               M         SETF    BTN_X0_DEB_TMR+5,           BANKED
000B8E B500               M         BTFSC   BTN_X0_FLAGS+5,           BTN_FLG_LOCKED, BANKED        ; is it locked?
000B90 D???               M         BRA     SCN_DB_RST_LCK_5                                ; stay locked longer
000B92 B700               M         BTFSC   BTN_X0_FLAGS+5,           BTN_FLG_ACTIVE, BANKED        ; if we already saw the button p
                            ress
000B94 D???               M         BRA     SCN_DB_DONE_5                                   ;   then we don't need to do anything mo
                            re
                          M         ;
                          M         ; We didn't know the button was down yet. Let's see what
                          M         ; that changes...
                          M         ;
000B96 8700               M         BSF     BTN_X0_FLAGS+5,           BTN_FLG_ACTIVE, BANKED        ; mark as "down"
000B98 B300               M         BTFSC   BTN_X0_FLAGS+5,           BTN_FLG_MASKED, BANKED        ; is it masked?
000B9A D???               M         BRA     SCN_DB_DONE_5                                   ; then ignore it
000B9C B100               M         BTFSC   BTN_X0_FLAGS+5,           BTN_FLG_PRESSED, BANKED       ; already noted?
000B9E D???               M         BRA     SCN_DB_DONE_5                                   ; then we're already done
000BA0 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS        ; legal to press?
000BA2 D???               M         BRA     SCN_DB_RST_LCK_5                                ; if not, lock out!
                          M         ;
                          M         ; The button was pressed legally and this is the first time we
                          M         ; noticed it. Record it as the official press for this button.
                          M         ;
000BA4 8100               M         BSF     BTN_X0_FLAGS+5,           BTN_FLG_PRESSED, BANKED
000BA6 9EF2               M         BCF     INTCON, 7, ACCESS                               ; disable interrupts
000BA8 9CF2               M         BCF     INTCON, 6, ACCESS                               ; disable interrupts
000BAA C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+5
000BAE C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+5
000BB2 CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+5
000BB6 CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+5
000BBA 8EF2               M         BSF     INTCON, 7, ACCESS                               ; enable interrupts
000BBC 8CF2               M         BSF     INTCON, 6, ACCESS                               ; enable interrupts
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L2, CHAN_L2R, 1, CHAN_L2R
000BBE 010C               M         BANKSEL QUIZSHOW_DATA
000BC0 A500               M         BTFSS   BTN_X0_FLAGS+5,           BTN_FLG_LOCKED, BANKED
000BC2 D???               M         BRA     LLIM_NOT_LOCKED_16
000BC4 B900               M         BTFSC   BTN_X0_FLAGS+5,           BTN_FLG_LCK_ACK, BANKED
000BC6 D???               M         BRA     LLIM_NOT_LOCKED_16
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
000BC8 8900               M         BSF     BTN_X0_FLAGS+5,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 11
                          M          SET_SSR_VALUE 11,  0
000BCA 0104               M         BANKSEL SSR_DATA_BANK
000BCC 0E00               M          MOVLW  0
000BCE 6F00               M          MOVWF  SSR_00_VALUE+11,  BANKED
000BD0 6B00               M          CLRF   SSR_00_STEP+11,  BANKED
000BD2 6B00               M          CLRF   SSR_00_SPEED+11,  BANKED
000BD4 6B00               M          CLRF   SSR_00_COUNTER+11,  BANKED
000BD6 6B00               M          CLRF   SSR_00_FLAGS+11,  BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_L2R
                          M          SET_SSR_PATTERN CHAN_L2R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000BD8 0104               M         BANKSEL SSR_DATA_BANK
000BDA 0E00               M          MOVLW  0
000BDC 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000BDE 0E04               M          MOVLW  4
000BE0 6F00               M          MOVWF  SSR_00_STEP+CHAN_L2R, BANKED
000BE2 0E01               M          MOVLW  1
000BE4 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L2R, BANKED
000BE6 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L2R, BANKED
000BE8 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000BEA 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L2R, BANKED
000BEC D???               M         BRA     LLIM_END_16
                          M 
000BEE                    M LLIM_NOT_LOCKED_16:
000BEE B300               M         BTFSC   BTN_X0_FLAGS+5,           BTN_FLG_MASKED, BANKED
000BF0 D???               M         BRA     LLIM_OFF_16
000BF2 B100               M         BTFSC   BTN_X0_FLAGS+5,           BTN_FLG_PRESSED, BANKED
000BF4 D???               M         BRA     LLIM_OFF_16
000BF6 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000BF8 D???               M         BRA     LLIM_OFF_16
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 11
                          M          SET_SSR_VALUE 11,  255
000BFA 0104               M         BANKSEL SSR_DATA_BANK
000BFC 0EFF               M          MOVLW  255
000BFE 6F00               M          MOVWF  SSR_00_VALUE+11,  BANKED
000C00 6B00               M          CLRF   SSR_00_STEP+11,  BANKED
000C02 6B00               M          CLRF   SSR_00_SPEED+11,  BANKED
000C04 6B00               M          CLRF   SSR_00_COUNTER+11,  BANKED
000C06 6B00               M          CLRF   SSR_00_FLAGS+11,  BANKED
                          M         ENDW
000C08 D???               M         BRA     LLIM_END_16
                          M         
000C0A                    M LLIM_OFF_16:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 11
                          M          SET_SSR_VALUE 11,  0
000C0A 0104               M         BANKSEL SSR_DATA_BANK
000C0C 0E00               M          MOVLW  0
000C0E 6F00               M          MOVWF  SSR_00_VALUE+11,  BANKED
000C10 6B00               M          CLRF   SSR_00_STEP+11,  BANKED
000C12 6B00               M          CLRF   SSR_00_SPEED+11,  BANKED
000C14 6B00               M          CLRF   SSR_00_COUNTER+11,  BANKED
000C16 6B00               M          CLRF   SSR_00_FLAGS+11,  BANKED
                          M         ENDW
                          M 
000C18                    M LLIM_END_16:
000C18 010C               M         BANKSEL QUIZSHOW_DATA
  00000011                M LLIM_N  ++
                          M 
000C1A                    M SCN_DB_DONE_5:
                          M         ;
                          M         ; We're done with the button debouncing operations.
                          M         ;
                          M         ; If we're processing the 120Hz cleanup operations, do them now
                          M         ; for this button.
                          M         ;
000C1A A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
000C1C D???               M         BRA     SCN_DB_END_5
                          M         ;
                          M         ; If the button is locked out, decrement its timer. If it reaches
                          M         ; zero, we can release the lock now.
                          M         ;
000C1E B500               M         BTFSC   BTN_X0_FLAGS+5,           BTN_FLG_LOCKED, BANKED
000C20 2F00               M         DECFSZ  BTN_X0_LOCKTMR+5,           F, BANKED
000C22 D???               M         BRA     SCN_DB_END_5
000C24 9500               M         BCF     BTN_X0_FLAGS+5,           BTN_FLG_LOCKED, BANKED        ; release the lock
000C26 9900               M         BCF     BTN_X0_FLAGS+5,           BTN_FLG_LCK_ACK, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L2, CHAN_L2R, 1, CHAN_L2R
000C28 010C               M         BANKSEL QUIZSHOW_DATA
000C2A A500               M         BTFSS   BTN_X0_FLAGS+5,           BTN_FLG_LOCKED, BANKED
000C2C D???               M         BRA     LLIM_NOT_LOCKED_17
000C2E B900               M         BTFSC   BTN_X0_FLAGS+5,           BTN_FLG_LCK_ACK, BANKED
000C30 D???               M         BRA     LLIM_NOT_LOCKED_17
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
000C32 8900               M         BSF     BTN_X0_FLAGS+5,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 11
                          M          SET_SSR_VALUE 11,  0
000C34 0104               M         BANKSEL SSR_DATA_BANK
000C36 0E00               M          MOVLW  0
000C38 6F00               M          MOVWF  SSR_00_VALUE+11,  BANKED
000C3A 6B00               M          CLRF   SSR_00_STEP+11,  BANKED
000C3C 6B00               M          CLRF   SSR_00_SPEED+11,  BANKED
000C3E 6B00               M          CLRF   SSR_00_COUNTER+11,  BANKED
000C40 6B00               M          CLRF   SSR_00_FLAGS+11,  BANKED
                          M         ENDW
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         SET_SSR_RAPID_FADE CHAN_L2R
                          M          SET_SSR_PATTERN CHAN_L2R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000C42 0104               M         BANKSEL SSR_DATA_BANK
000C44 0E00               M          MOVLW  0
000C46 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000C48 0E04               M          MOVLW  4
000C4A 6F00               M          MOVWF  SSR_00_STEP+CHAN_L2R, BANKED
000C4C 0E01               M          MOVLW  1
000C4E 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L2R, BANKED
000C50 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L2R, BANKED
000C52 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000C54 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L2R, BANKED
000C56 D???               M         BRA     LLIM_END_17
                          M 
000C58                    M LLIM_NOT_LOCKED_17:
000C58 B300               M         BTFSC   BTN_X0_FLAGS+5,           BTN_FLG_MASKED, BANKED
000C5A D???               M         BRA     LLIM_OFF_17
000C5C B100               M         BTFSC   BTN_X0_FLAGS+5,           BTN_FLG_PRESSED, BANKED
000C5E D???               M         BRA     LLIM_OFF_17
000C60 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000C62 D???               M         BRA     LLIM_OFF_17
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 11
                          M          SET_SSR_VALUE 11,  255
000C64 0104               M         BANKSEL SSR_DATA_BANK
000C66 0EFF               M          MOVLW  255
000C68 6F00               M          MOVWF  SSR_00_VALUE+11,  BANKED
000C6A 6B00               M          CLRF   SSR_00_STEP+11,  BANKED
000C6C 6B00               M          CLRF   SSR_00_SPEED+11,  BANKED
000C6E 6B00               M          CLRF   SSR_00_COUNTER+11,  BANKED
000C70 6B00               M          CLRF   SSR_00_FLAGS+11,  BANKED
                          M         ENDW
000C72 D???               M         BRA     LLIM_END_17
                          M         
000C74                    M LLIM_OFF_17:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 11
                          M          SET_SSR_VALUE 11,  0
000C74 0104               M         BANKSEL SSR_DATA_BANK
000C76 0E00               M          MOVLW  0
000C78 6F00               M          MOVWF  SSR_00_VALUE+11,  BANKED
000C7A 6B00               M          CLRF   SSR_00_STEP+11,  BANKED
000C7C 6B00               M          CLRF   SSR_00_SPEED+11,  BANKED
000C7E 6B00               M          CLRF   SSR_00_COUNTER+11,  BANKED
000C80 6B00               M          CLRF   SSR_00_FLAGS+11,  BANKED
                          M         ENDW
                          M 
000C82                    M LLIM_END_17:
000C82 010C               M         BANKSEL QUIZSHOW_DATA
  00000012                M LLIM_N  ++
                          M 
000C84                    M SCN_DB_END_5:
  00000006                M SCN_DBN ++
                      01007           SCAN_DEBOUNCE BTN_IDX_X3, PORT_X3, BIT_X3, CHAN_X3R, 3, CHAN_X3R
000C84 010C               M         BANKSEL QUIZSHOW_DATA
000C86 0004               M         CLRWDT
                          M         ;
                          M         ; Sense button state: 
                          M         ;  0=pressed
                          M         ;  1=released
                          M         ;
000C88 A882               M         BTFSS   3970,         BIT_X3,  ACCESS
000C8A D???               M         BRA     SCN_DB_DOWN_6           ; pressed? branch
                          M         ;
                          M         ; button senses as "up". drain debounce counter if possible
                          M         ;
000C8C 6700               M         TSTFSZ  BTN_X0_DEB_TMR+6,           BANKED
000C8E D???               M         BRA     SCN_DB_DRAIN_6
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;
                          M         ; The button is officially "up".  If this is news, respond
                          M         ; to this change now.  All we need to do is note the status
                          M         ; change. Everything else happens later when the code notices
                          M         ; this flag state.
                          M         ;
000C90 9700               M         BCF     BTN_X0_FLAGS+6,           BTN_FLG_ACTIVE, BANKED
000C92 D???               M         BRA     SCN_DB_DONE_6
                          M 
000C94                    M SCN_DB_DRAIN_6:
                          M         ;
                          M         ; Drain the button debounce counter
                          M         ;
000C94 0700               M         DECF    BTN_X0_DEB_TMR+6,           F, BANKED
000C96 D???               M         BRA     SCN_DB_DONE_6
                          M 
000C98                    M SCN_DB_RST_LCK_6:
                          M         ;
                          M         ; The button needs to be locked out!
                          M         ; We found them pushing the button when they weren't supposed to.
                          M         ;
000C98 8500               M         BSF     BTN_X0_FLAGS+6,           BTN_FLG_LOCKED, BANKED
000C9A C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+6
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X3, CHAN_X3R, 3, CHAN_X3R
000C9E 010C               M         BANKSEL QUIZSHOW_DATA
000CA0 A500               M         BTFSS   BTN_X0_FLAGS+6,           BTN_FLG_LOCKED, BANKED
000CA2 D???               M         BRA     LLIM_NOT_LOCKED_18
000CA4 B900               M         BTFSC   BTN_X0_FLAGS+6,           BTN_FLG_LCK_ACK, BANKED
000CA6 D???               M         BRA     LLIM_NOT_LOCKED_18
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
000CA8 8900               M         BSF     BTN_X0_FLAGS+6,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 14
                          M          SET_SSR_VALUE 14,  0
000CAA 0104               M         BANKSEL SSR_DATA_BANK
000CAC 0E00               M          MOVLW  0
000CAE 6F00               M          MOVWF  SSR_00_VALUE+14,  BANKED
000CB0 6B00               M          CLRF   SSR_00_STEP+14,  BANKED
000CB2 6B00               M          CLRF   SSR_00_SPEED+14,  BANKED
000CB4 6B00               M          CLRF   SSR_00_COUNTER+14,  BANKED
000CB6 6B00               M          CLRF   SSR_00_FLAGS+14,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 13
                          M          SET_SSR_VALUE 13,  0
000CB8 0104               M         BANKSEL SSR_DATA_BANK
000CBA 0E00               M          MOVLW  0
000CBC 6F00               M          MOVWF  SSR_00_VALUE+13,  BANKED
000CBE 6B00               M          CLRF   SSR_00_STEP+13,  BANKED
000CC0 6B00               M          CLRF   SSR_00_SPEED+13,  BANKED
000CC2 6B00               M          CLRF   SSR_00_COUNTER+13,  BANKED
000CC4 6B00               M          CLRF   SSR_00_FLAGS+13,  BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 12
                          M          SET_SSR_VALUE 12,  0
000CC6 0104               M         BANKSEL SSR_DATA_BANK
000CC8 0E00               M          MOVLW  0
000CCA 6F00               M          MOVWF  SSR_00_VALUE+12,  BANKED
000CCC 6B00               M          CLRF   SSR_00_STEP+12,  BANKED
000CCE 6B00               M          CLRF   SSR_00_SPEED+12,  BANKED
000CD0 6B00               M          CLRF   SSR_00_COUNTER+12,  BANKED
000CD2 6B00               M          CLRF   SSR_00_FLAGS+12,  BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_X3R
                          M          SET_SSR_PATTERN CHAN_X3R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000CD4 0104               M         BANKSEL SSR_DATA_BANK
000CD6 0E00               M          MOVLW  0
000CD8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
000CDA 0E04               M          MOVLW  4
000CDC 6F00               M          MOVWF  SSR_00_STEP+CHAN_X3R, BANKED
000CDE 0E01               M          MOVLW  1
000CE0 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X3R, BANKED
000CE2 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X3R, BANKED
000CE4 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000CE6 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X3R, BANKED
000CE8 D???               M         BRA     LLIM_END_18
                          M 
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000CEA                    M LLIM_NOT_LOCKED_18:
000CEA B300               M         BTFSC   BTN_X0_FLAGS+6,           BTN_FLG_MASKED, BANKED
000CEC D???               M         BRA     LLIM_OFF_18
000CEE B100               M         BTFSC   BTN_X0_FLAGS+6,           BTN_FLG_PRESSED, BANKED
000CF0 D???               M         BRA     LLIM_OFF_18
000CF2 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000CF4 D???               M         BRA     LLIM_OFF_18
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_STEADY 14
                          M          SET_SSR_VALUE 14,  255
000CF6 0104               M         BANKSEL SSR_DATA_BANK
000CF8 0EFF               M          MOVLW  255
000CFA 6F00               M          MOVWF  SSR_00_VALUE+14,  BANKED
000CFC 6B00               M          CLRF   SSR_00_STEP+14,  BANKED
000CFE 6B00               M          CLRF   SSR_00_SPEED+14,  BANKED
000D00 6B00               M          CLRF   SSR_00_COUNTER+14,  BANKED
000D02 6B00               M          CLRF   SSR_00_FLAGS+14,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_STEADY 13
                          M          SET_SSR_VALUE 13,  255
000D04 0104               M         BANKSEL SSR_DATA_BANK
000D06 0EFF               M          MOVLW  255
000D08 6F00               M          MOVWF  SSR_00_VALUE+13,  BANKED
000D0A 6B00               M          CLRF   SSR_00_STEP+13,  BANKED
000D0C 6B00               M          CLRF   SSR_00_SPEED+13,  BANKED
000D0E 6B00               M          CLRF   SSR_00_COUNTER+13,  BANKED
000D10 6B00               M          CLRF   SSR_00_FLAGS+13,  BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 12
                          M          SET_SSR_VALUE 12,  255
000D12 0104               M         BANKSEL SSR_DATA_BANK
000D14 0EFF               M          MOVLW  255
000D16 6F00               M          MOVWF  SSR_00_VALUE+12,  BANKED
000D18 6B00               M          CLRF   SSR_00_STEP+12,  BANKED
000D1A 6B00               M          CLRF   SSR_00_SPEED+12,  BANKED
000D1C 6B00               M          CLRF   SSR_00_COUNTER+12,  BANKED
000D1E 6B00               M          CLRF   SSR_00_FLAGS+12,  BANKED
                          M         ENDW
000D20 D???               M         BRA     LLIM_END_18
                          M         
000D22                    M LLIM_OFF_18:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 14
                          M          SET_SSR_VALUE 14,  0
000D22 0104               M         BANKSEL SSR_DATA_BANK
000D24 0E00               M          MOVLW  0
000D26 6F00               M          MOVWF  SSR_00_VALUE+14,  BANKED
000D28 6B00               M          CLRF   SSR_00_STEP+14,  BANKED
000D2A 6B00               M          CLRF   SSR_00_SPEED+14,  BANKED
000D2C 6B00               M          CLRF   SSR_00_COUNTER+14,  BANKED
000D2E 6B00               M          CLRF   SSR_00_FLAGS+14,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 13
                          M          SET_SSR_VALUE 13,  0
000D30 0104               M         BANKSEL SSR_DATA_BANK
000D32 0E00               M          MOVLW  0
000D34 6F00               M          MOVWF  SSR_00_VALUE+13,  BANKED
000D36 6B00               M          CLRF   SSR_00_STEP+13,  BANKED
000D38 6B00               M          CLRF   SSR_00_SPEED+13,  BANKED
000D3A 6B00               M          CLRF   SSR_00_COUNTER+13,  BANKED
000D3C 6B00               M          CLRF   SSR_00_FLAGS+13,  BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 12
                          M          SET_SSR_VALUE 12,  0
000D3E 0104               M         BANKSEL SSR_DATA_BANK
000D40 0E00               M          MOVLW  0
000D42 6F00               M          MOVWF  SSR_00_VALUE+12,  BANKED
000D44 6B00               M          CLRF   SSR_00_STEP+12,  BANKED
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D46 6B00               M          CLRF   SSR_00_SPEED+12,  BANKED
000D48 6B00               M          CLRF   SSR_00_COUNTER+12,  BANKED
000D4A 6B00               M          CLRF   SSR_00_FLAGS+12,  BANKED
                          M         ENDW
                          M 
000D4C                    M LLIM_END_18:
000D4C 010C               M         BANKSEL QUIZSHOW_DATA
  00000013                M LLIM_N  ++
000D4E D???               M         BRA     SCN_DB_DONE_6
                          M 
000D50                    M SCN_DB_DOWN_6:
                          M         ;
                          M         ; button senses as "down". fill debounce counter if possible
                          M         ;
000D50 3F00               M         INCFSZ  BTN_X0_DEB_TMR+6,           F, BANKED
000D52 D???               M         BRA     SCN_DB_DONE_6
                          M         ;
                          M         ; counter was full (since we overflowed it to 0 again). so
                          M         ; the button is officially "down".  Put the counter back
                          M         ; to 255 and proceed with what it means for the button to be
                          M         ; officially down.
                          M         ;
000D54 6900               M         SETF    BTN_X0_DEB_TMR+6,           BANKED
000D56 B500               M         BTFSC   BTN_X0_FLAGS+6,           BTN_FLG_LOCKED, BANKED        ; is it locked?
000D58 D???               M         BRA     SCN_DB_RST_LCK_6                                ; stay locked longer
000D5A B700               M         BTFSC   BTN_X0_FLAGS+6,           BTN_FLG_ACTIVE, BANKED        ; if we already saw the button p
                            ress
000D5C D???               M         BRA     SCN_DB_DONE_6                                   ;   then we don't need to do anything mo
                            re
                          M         ;
                          M         ; We didn't know the button was down yet. Let's see what
                          M         ; that changes...
                          M         ;
000D5E 8700               M         BSF     BTN_X0_FLAGS+6,           BTN_FLG_ACTIVE, BANKED        ; mark as "down"
000D60 B300               M         BTFSC   BTN_X0_FLAGS+6,           BTN_FLG_MASKED, BANKED        ; is it masked?
000D62 D???               M         BRA     SCN_DB_DONE_6                                   ; then ignore it
000D64 B100               M         BTFSC   BTN_X0_FLAGS+6,           BTN_FLG_PRESSED, BANKED       ; already noted?
000D66 D???               M         BRA     SCN_DB_DONE_6                                   ; then we're already done
000D68 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS        ; legal to press?
000D6A D???               M         BRA     SCN_DB_RST_LCK_6                                ; if not, lock out!
                          M         ;
                          M         ; The button was pressed legally and this is the first time we
                          M         ; noticed it. Record it as the official press for this button.
                          M         ;
000D6C 8100               M         BSF     BTN_X0_FLAGS+6,           BTN_FLG_PRESSED, BANKED
000D6E 9EF2               M         BCF     INTCON, 7, ACCESS                               ; disable interrupts
000D70 9CF2               M         BCF     INTCON, 6, ACCESS                               ; disable interrupts
000D72 C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+6
000D76 C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+6
000D7A CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+6
000D7E CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+6
000D82 8EF2               M         BSF     INTCON, 7, ACCESS                               ; enable interrupts
000D84 8CF2               M         BSF     INTCON, 6, ACCESS                               ; enable interrupts
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X3, CHAN_X3R, 3, CHAN_X3R
000D86 010C               M         BANKSEL QUIZSHOW_DATA
000D88 A500               M         BTFSS   BTN_X0_FLAGS+6,           BTN_FLG_LOCKED, BANKED
000D8A D???               M         BRA     LLIM_NOT_LOCKED_19
000D8C B900               M         BTFSC   BTN_X0_FLAGS+6,           BTN_FLG_LCK_ACK, BANKED
000D8E D???               M         BRA     LLIM_NOT_LOCKED_19
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
000D90 8900               M         BSF     BTN_X0_FLAGS+6,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 14
                          M          SET_SSR_VALUE 14,  0
000D92 0104               M         BANKSEL SSR_DATA_BANK
000D94 0E00               M          MOVLW  0
000D96 6F00               M          MOVWF  SSR_00_VALUE+14,  BANKED
000D98 6B00               M          CLRF   SSR_00_STEP+14,  BANKED
000D9A 6B00               M          CLRF   SSR_00_SPEED+14,  BANKED
000D9C 6B00               M          CLRF   SSR_00_COUNTER+14,  BANKED
000D9E 6B00               M          CLRF   SSR_00_FLAGS+14,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 13
                          M          SET_SSR_VALUE 13,  0
000DA0 0104               M         BANKSEL SSR_DATA_BANK
000DA2 0E00               M          MOVLW  0
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000DA4 6F00               M          MOVWF  SSR_00_VALUE+13,  BANKED
000DA6 6B00               M          CLRF   SSR_00_STEP+13,  BANKED
000DA8 6B00               M          CLRF   SSR_00_SPEED+13,  BANKED
000DAA 6B00               M          CLRF   SSR_00_COUNTER+13,  BANKED
000DAC 6B00               M          CLRF   SSR_00_FLAGS+13,  BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 12
                          M          SET_SSR_VALUE 12,  0
000DAE 0104               M         BANKSEL SSR_DATA_BANK
000DB0 0E00               M          MOVLW  0
000DB2 6F00               M          MOVWF  SSR_00_VALUE+12,  BANKED
000DB4 6B00               M          CLRF   SSR_00_STEP+12,  BANKED
000DB6 6B00               M          CLRF   SSR_00_SPEED+12,  BANKED
000DB8 6B00               M          CLRF   SSR_00_COUNTER+12,  BANKED
000DBA 6B00               M          CLRF   SSR_00_FLAGS+12,  BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_X3R
                          M          SET_SSR_PATTERN CHAN_X3R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000DBC 0104               M         BANKSEL SSR_DATA_BANK
000DBE 0E00               M          MOVLW  0
000DC0 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
000DC2 0E04               M          MOVLW  4
000DC4 6F00               M          MOVWF  SSR_00_STEP+CHAN_X3R, BANKED
000DC6 0E01               M          MOVLW  1
000DC8 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X3R, BANKED
000DCA 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X3R, BANKED
000DCC 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000DCE 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X3R, BANKED
000DD0 D???               M         BRA     LLIM_END_19
                          M 
000DD2                    M LLIM_NOT_LOCKED_19:
000DD2 B300               M         BTFSC   BTN_X0_FLAGS+6,           BTN_FLG_MASKED, BANKED
000DD4 D???               M         BRA     LLIM_OFF_19
000DD6 B100               M         BTFSC   BTN_X0_FLAGS+6,           BTN_FLG_PRESSED, BANKED
000DD8 D???               M         BRA     LLIM_OFF_19
000DDA A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000DDC D???               M         BRA     LLIM_OFF_19
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_STEADY 14
                          M          SET_SSR_VALUE 14,  255
000DDE 0104               M         BANKSEL SSR_DATA_BANK
000DE0 0EFF               M          MOVLW  255
000DE2 6F00               M          MOVWF  SSR_00_VALUE+14,  BANKED
000DE4 6B00               M          CLRF   SSR_00_STEP+14,  BANKED
000DE6 6B00               M          CLRF   SSR_00_SPEED+14,  BANKED
000DE8 6B00               M          CLRF   SSR_00_COUNTER+14,  BANKED
000DEA 6B00               M          CLRF   SSR_00_FLAGS+14,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_STEADY 13
                          M          SET_SSR_VALUE 13,  255
000DEC 0104               M         BANKSEL SSR_DATA_BANK
000DEE 0EFF               M          MOVLW  255
000DF0 6F00               M          MOVWF  SSR_00_VALUE+13,  BANKED
000DF2 6B00               M          CLRF   SSR_00_STEP+13,  BANKED
000DF4 6B00               M          CLRF   SSR_00_SPEED+13,  BANKED
000DF6 6B00               M          CLRF   SSR_00_COUNTER+13,  BANKED
000DF8 6B00               M          CLRF   SSR_00_FLAGS+13,  BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 12
                          M          SET_SSR_VALUE 12,  255
000DFA 0104               M         BANKSEL SSR_DATA_BANK
000DFC 0EFF               M          MOVLW  255
000DFE 6F00               M          MOVWF  SSR_00_VALUE+12,  BANKED
000E00 6B00               M          CLRF   SSR_00_STEP+12,  BANKED
000E02 6B00               M          CLRF   SSR_00_SPEED+12,  BANKED
000E04 6B00               M          CLRF   SSR_00_COUNTER+12,  BANKED
000E06 6B00               M          CLRF   SSR_00_FLAGS+12,  BANKED
                          M         ENDW
000E08 D???               M         BRA     LLIM_END_19
                          M         
000E0A                    M LLIM_OFF_19:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 14
                          M          SET_SSR_VALUE 14,  0
000E0A 0104               M         BANKSEL SSR_DATA_BANK
000E0C 0E00               M          MOVLW  0
000E0E 6F00               M          MOVWF  SSR_00_VALUE+14,  BANKED
000E10 6B00               M          CLRF   SSR_00_STEP+14,  BANKED
000E12 6B00               M          CLRF   SSR_00_SPEED+14,  BANKED
000E14 6B00               M          CLRF   SSR_00_COUNTER+14,  BANKED
000E16 6B00               M          CLRF   SSR_00_FLAGS+14,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 13
                          M          SET_SSR_VALUE 13,  0
000E18 0104               M         BANKSEL SSR_DATA_BANK
000E1A 0E00               M          MOVLW  0
000E1C 6F00               M          MOVWF  SSR_00_VALUE+13,  BANKED
000E1E 6B00               M          CLRF   SSR_00_STEP+13,  BANKED
000E20 6B00               M          CLRF   SSR_00_SPEED+13,  BANKED
000E22 6B00               M          CLRF   SSR_00_COUNTER+13,  BANKED
000E24 6B00               M          CLRF   SSR_00_FLAGS+13,  BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 12
                          M          SET_SSR_VALUE 12,  0
000E26 0104               M         BANKSEL SSR_DATA_BANK
000E28 0E00               M          MOVLW  0
000E2A 6F00               M          MOVWF  SSR_00_VALUE+12,  BANKED
000E2C 6B00               M          CLRF   SSR_00_STEP+12,  BANKED
000E2E 6B00               M          CLRF   SSR_00_SPEED+12,  BANKED
000E30 6B00               M          CLRF   SSR_00_COUNTER+12,  BANKED
000E32 6B00               M          CLRF   SSR_00_FLAGS+12,  BANKED
                          M         ENDW
                          M 
000E34                    M LLIM_END_19:
000E34 010C               M         BANKSEL QUIZSHOW_DATA
  00000014                M LLIM_N  ++
                          M 
000E36                    M SCN_DB_DONE_6:
                          M         ;
                          M         ; We're done with the button debouncing operations.
                          M         ;
                          M         ; If we're processing the 120Hz cleanup operations, do them now
                          M         ; for this button.
                          M         ;
000E36 A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
000E38 D???               M         BRA     SCN_DB_END_6
                          M         ;
                          M         ; If the button is locked out, decrement its timer. If it reaches
                          M         ; zero, we can release the lock now.
                          M         ;
000E3A B500               M         BTFSC   BTN_X0_FLAGS+6,           BTN_FLG_LOCKED, BANKED
000E3C 2F00               M         DECFSZ  BTN_X0_LOCKTMR+6,           F, BANKED
000E3E D???               M         BRA     SCN_DB_END_6
000E40 9500               M         BCF     BTN_X0_FLAGS+6,           BTN_FLG_LOCKED, BANKED        ; release the lock
000E42 9900               M         BCF     BTN_X0_FLAGS+6,           BTN_FLG_LCK_ACK, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X3, CHAN_X3R, 3, CHAN_X3R
000E44 010C               M         BANKSEL QUIZSHOW_DATA
000E46 A500               M         BTFSS   BTN_X0_FLAGS+6,           BTN_FLG_LOCKED, BANKED
000E48 D???               M         BRA     LLIM_NOT_LOCKED_20
000E4A B900               M         BTFSC   BTN_X0_FLAGS+6,           BTN_FLG_LCK_ACK, BANKED
000E4C D???               M         BRA     LLIM_NOT_LOCKED_20
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
000E4E 8900               M         BSF     BTN_X0_FLAGS+6,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 14
                          M          SET_SSR_VALUE 14,  0
000E50 0104               M         BANKSEL SSR_DATA_BANK
000E52 0E00               M          MOVLW  0
000E54 6F00               M          MOVWF  SSR_00_VALUE+14,  BANKED
000E56 6B00               M          CLRF   SSR_00_STEP+14,  BANKED
000E58 6B00               M          CLRF   SSR_00_SPEED+14,  BANKED
000E5A 6B00               M          CLRF   SSR_00_COUNTER+14,  BANKED
000E5C 6B00               M          CLRF   SSR_00_FLAGS+14,  BANKED
  00000001                M LLIM_LTN --
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M          SET_SSR_OFF 13
                          M          SET_SSR_VALUE 13,  0
000E5E 0104               M         BANKSEL SSR_DATA_BANK
000E60 0E00               M          MOVLW  0
000E62 6F00               M          MOVWF  SSR_00_VALUE+13,  BANKED
000E64 6B00               M          CLRF   SSR_00_STEP+13,  BANKED
000E66 6B00               M          CLRF   SSR_00_SPEED+13,  BANKED
000E68 6B00               M          CLRF   SSR_00_COUNTER+13,  BANKED
000E6A 6B00               M          CLRF   SSR_00_FLAGS+13,  BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 12
                          M          SET_SSR_VALUE 12,  0
000E6C 0104               M         BANKSEL SSR_DATA_BANK
000E6E 0E00               M          MOVLW  0
000E70 6F00               M          MOVWF  SSR_00_VALUE+12,  BANKED
000E72 6B00               M          CLRF   SSR_00_STEP+12,  BANKED
000E74 6B00               M          CLRF   SSR_00_SPEED+12,  BANKED
000E76 6B00               M          CLRF   SSR_00_COUNTER+12,  BANKED
000E78 6B00               M          CLRF   SSR_00_FLAGS+12,  BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_X3R
                          M          SET_SSR_PATTERN CHAN_X3R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000E7A 0104               M         BANKSEL SSR_DATA_BANK
000E7C 0E00               M          MOVLW  0
000E7E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
000E80 0E04               M          MOVLW  4
000E82 6F00               M          MOVWF  SSR_00_STEP+CHAN_X3R, BANKED
000E84 0E01               M          MOVLW  1
000E86 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X3R, BANKED
000E88 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X3R, BANKED
000E8A 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000E8C 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X3R, BANKED
000E8E D???               M         BRA     LLIM_END_20
                          M 
000E90                    M LLIM_NOT_LOCKED_20:
000E90 B300               M         BTFSC   BTN_X0_FLAGS+6,           BTN_FLG_MASKED, BANKED
000E92 D???               M         BRA     LLIM_OFF_20
000E94 B100               M         BTFSC   BTN_X0_FLAGS+6,           BTN_FLG_PRESSED, BANKED
000E96 D???               M         BRA     LLIM_OFF_20
000E98 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000E9A D???               M         BRA     LLIM_OFF_20
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_STEADY 14
                          M          SET_SSR_VALUE 14,  255
000E9C 0104               M         BANKSEL SSR_DATA_BANK
000E9E 0EFF               M          MOVLW  255
000EA0 6F00               M          MOVWF  SSR_00_VALUE+14,  BANKED
000EA2 6B00               M          CLRF   SSR_00_STEP+14,  BANKED
000EA4 6B00               M          CLRF   SSR_00_SPEED+14,  BANKED
000EA6 6B00               M          CLRF   SSR_00_COUNTER+14,  BANKED
000EA8 6B00               M          CLRF   SSR_00_FLAGS+14,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_STEADY 13
                          M          SET_SSR_VALUE 13,  255
000EAA 0104               M         BANKSEL SSR_DATA_BANK
000EAC 0EFF               M          MOVLW  255
000EAE 6F00               M          MOVWF  SSR_00_VALUE+13,  BANKED
000EB0 6B00               M          CLRF   SSR_00_STEP+13,  BANKED
000EB2 6B00               M          CLRF   SSR_00_SPEED+13,  BANKED
000EB4 6B00               M          CLRF   SSR_00_COUNTER+13,  BANKED
000EB6 6B00               M          CLRF   SSR_00_FLAGS+13,  BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 12
                          M          SET_SSR_VALUE 12,  255
000EB8 0104               M         BANKSEL SSR_DATA_BANK
000EBA 0EFF               M          MOVLW  255
000EBC 6F00               M          MOVWF  SSR_00_VALUE+12,  BANKED
000EBE 6B00               M          CLRF   SSR_00_STEP+12,  BANKED
000EC0 6B00               M          CLRF   SSR_00_SPEED+12,  BANKED
000EC2 6B00               M          CLRF   SSR_00_COUNTER+12,  BANKED
000EC4 6B00               M          CLRF   SSR_00_FLAGS+12,  BANKED
                          M         ENDW
000EC6 D???               M         BRA     LLIM_END_20
                          M         
000EC8                    M LLIM_OFF_20:
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 14
                          M          SET_SSR_VALUE 14,  0
000EC8 0104               M         BANKSEL SSR_DATA_BANK
000ECA 0E00               M          MOVLW  0
000ECC 6F00               M          MOVWF  SSR_00_VALUE+14,  BANKED
000ECE 6B00               M          CLRF   SSR_00_STEP+14,  BANKED
000ED0 6B00               M          CLRF   SSR_00_SPEED+14,  BANKED
000ED2 6B00               M          CLRF   SSR_00_COUNTER+14,  BANKED
000ED4 6B00               M          CLRF   SSR_00_FLAGS+14,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 13
                          M          SET_SSR_VALUE 13,  0
000ED6 0104               M         BANKSEL SSR_DATA_BANK
000ED8 0E00               M          MOVLW  0
000EDA 6F00               M          MOVWF  SSR_00_VALUE+13,  BANKED
000EDC 6B00               M          CLRF   SSR_00_STEP+13,  BANKED
000EDE 6B00               M          CLRF   SSR_00_SPEED+13,  BANKED
000EE0 6B00               M          CLRF   SSR_00_COUNTER+13,  BANKED
000EE2 6B00               M          CLRF   SSR_00_FLAGS+13,  BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 12
                          M          SET_SSR_VALUE 12,  0
000EE4 0104               M         BANKSEL SSR_DATA_BANK
000EE6 0E00               M          MOVLW  0
000EE8 6F00               M          MOVWF  SSR_00_VALUE+12,  BANKED
000EEA 6B00               M          CLRF   SSR_00_STEP+12,  BANKED
000EEC 6B00               M          CLRF   SSR_00_SPEED+12,  BANKED
000EEE 6B00               M          CLRF   SSR_00_COUNTER+12,  BANKED
000EF0 6B00               M          CLRF   SSR_00_FLAGS+12,  BANKED
                          M         ENDW
                          M 
000EF2                    M LLIM_END_20:
000EF2 010C               M         BANKSEL QUIZSHOW_DATA
  00000015                M LLIM_N  ++
                          M 
000EF4                    M SCN_DB_END_6:
  00000007                M SCN_DBN ++
                      01008           SCAN_DEBOUNCE BTN_IDX_L3, PORT_L3, BIT_L3, CHAN_L3R, 1, CHAN_L3R
000EF4 010C               M         BANKSEL QUIZSHOW_DATA
000EF6 0004               M         CLRWDT
                          M         ;
                          M         ; Sense button state: 
                          M         ;  0=pressed
                          M         ;  1=released
                          M         ;
000EF8 A083               M         BTFSS   3971,         BIT_L3,  ACCESS
000EFA D???               M         BRA     SCN_DB_DOWN_7           ; pressed? branch
                          M         ;
                          M         ; button senses as "up". drain debounce counter if possible
                          M         ;
000EFC 6700               M         TSTFSZ  BTN_X0_DEB_TMR+7,           BANKED
000EFE D???               M         BRA     SCN_DB_DRAIN_7
                          M         ;
                          M         ; The button is officially "up".  If this is news, respond
                          M         ; to this change now.  All we need to do is note the status
                          M         ; change. Everything else happens later when the code notices
                          M         ; this flag state.
                          M         ;
000F00 9700               M         BCF     BTN_X0_FLAGS+7,           BTN_FLG_ACTIVE, BANKED
000F02 D???               M         BRA     SCN_DB_DONE_7
                          M 
000F04                    M SCN_DB_DRAIN_7:
                          M         ;
                          M         ; Drain the button debounce counter
                          M         ;
000F04 0700               M         DECF    BTN_X0_DEB_TMR+7,           F, BANKED
000F06 D???               M         BRA     SCN_DB_DONE_7
                          M 
000F08                    M SCN_DB_RST_LCK_7:
                          M         ;
                          M         ; The button needs to be locked out!
                          M         ; We found them pushing the button when they weren't supposed to.
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;
000F08 8500               M         BSF     BTN_X0_FLAGS+7,           BTN_FLG_LOCKED, BANKED
000F0A C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+7
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L3, CHAN_L3R, 1, CHAN_L3R
000F0E 010C               M         BANKSEL QUIZSHOW_DATA
000F10 A500               M         BTFSS   BTN_X0_FLAGS+7,           BTN_FLG_LOCKED, BANKED
000F12 D???               M         BRA     LLIM_NOT_LOCKED_21
000F14 B900               M         BTFSC   BTN_X0_FLAGS+7,           BTN_FLG_LCK_ACK, BANKED
000F16 D???               M         BRA     LLIM_NOT_LOCKED_21
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
000F18 8900               M         BSF     BTN_X0_FLAGS+7,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 15
                          M          SET_SSR_VALUE 15,  0
000F1A 0104               M         BANKSEL SSR_DATA_BANK
000F1C 0E00               M          MOVLW  0
000F1E 6F00               M          MOVWF  SSR_00_VALUE+15,  BANKED
000F20 6B00               M          CLRF   SSR_00_STEP+15,  BANKED
000F22 6B00               M          CLRF   SSR_00_SPEED+15,  BANKED
000F24 6B00               M          CLRF   SSR_00_COUNTER+15,  BANKED
000F26 6B00               M          CLRF   SSR_00_FLAGS+15,  BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_L3R
                          M          SET_SSR_PATTERN CHAN_L3R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000F28 0104               M         BANKSEL SSR_DATA_BANK
000F2A 0E00               M          MOVLW  0
000F2C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000F2E 0E04               M          MOVLW  4
000F30 6F00               M          MOVWF  SSR_00_STEP+CHAN_L3R, BANKED
000F32 0E01               M          MOVLW  1
000F34 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L3R, BANKED
000F36 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L3R, BANKED
000F38 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000F3A 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L3R, BANKED
000F3C D???               M         BRA     LLIM_END_21
                          M 
000F3E                    M LLIM_NOT_LOCKED_21:
000F3E B300               M         BTFSC   BTN_X0_FLAGS+7,           BTN_FLG_MASKED, BANKED
000F40 D???               M         BRA     LLIM_OFF_21
000F42 B100               M         BTFSC   BTN_X0_FLAGS+7,           BTN_FLG_PRESSED, BANKED
000F44 D???               M         BRA     LLIM_OFF_21
000F46 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000F48 D???               M         BRA     LLIM_OFF_21
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 15
                          M          SET_SSR_VALUE 15,  255
000F4A 0104               M         BANKSEL SSR_DATA_BANK
000F4C 0EFF               M          MOVLW  255
000F4E 6F00               M          MOVWF  SSR_00_VALUE+15,  BANKED
000F50 6B00               M          CLRF   SSR_00_STEP+15,  BANKED
000F52 6B00               M          CLRF   SSR_00_SPEED+15,  BANKED
000F54 6B00               M          CLRF   SSR_00_COUNTER+15,  BANKED
000F56 6B00               M          CLRF   SSR_00_FLAGS+15,  BANKED
                          M         ENDW
000F58 D???               M         BRA     LLIM_END_21
                          M         
000F5A                    M LLIM_OFF_21:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 15
                          M          SET_SSR_VALUE 15,  0
000F5A 0104               M         BANKSEL SSR_DATA_BANK
000F5C 0E00               M          MOVLW  0
000F5E 6F00               M          MOVWF  SSR_00_VALUE+15,  BANKED
000F60 6B00               M          CLRF   SSR_00_STEP+15,  BANKED
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000F62 6B00               M          CLRF   SSR_00_SPEED+15,  BANKED
000F64 6B00               M          CLRF   SSR_00_COUNTER+15,  BANKED
000F66 6B00               M          CLRF   SSR_00_FLAGS+15,  BANKED
                          M         ENDW
                          M 
000F68                    M LLIM_END_21:
000F68 010C               M         BANKSEL QUIZSHOW_DATA
  00000016                M LLIM_N  ++
000F6A D???               M         BRA     SCN_DB_DONE_7
                          M 
000F6C                    M SCN_DB_DOWN_7:
                          M         ;
                          M         ; button senses as "down". fill debounce counter if possible
                          M         ;
000F6C 3F00               M         INCFSZ  BTN_X0_DEB_TMR+7,           F, BANKED
000F6E D???               M         BRA     SCN_DB_DONE_7
                          M         ;
                          M         ; counter was full (since we overflowed it to 0 again). so
                          M         ; the button is officially "down".  Put the counter back
                          M         ; to 255 and proceed with what it means for the button to be
                          M         ; officially down.
                          M         ;
000F70 6900               M         SETF    BTN_X0_DEB_TMR+7,           BANKED
000F72 B500               M         BTFSC   BTN_X0_FLAGS+7,           BTN_FLG_LOCKED, BANKED        ; is it locked?
000F74 D???               M         BRA     SCN_DB_RST_LCK_7                                ; stay locked longer
000F76 B700               M         BTFSC   BTN_X0_FLAGS+7,           BTN_FLG_ACTIVE, BANKED        ; if we already saw the button p
                            ress
000F78 D???               M         BRA     SCN_DB_DONE_7                                   ;   then we don't need to do anything mo
                            re
                          M         ;
                          M         ; We didn't know the button was down yet. Let's see what
                          M         ; that changes...
                          M         ;
000F7A 8700               M         BSF     BTN_X0_FLAGS+7,           BTN_FLG_ACTIVE, BANKED        ; mark as "down"
000F7C B300               M         BTFSC   BTN_X0_FLAGS+7,           BTN_FLG_MASKED, BANKED        ; is it masked?
000F7E D???               M         BRA     SCN_DB_DONE_7                                   ; then ignore it
000F80 B100               M         BTFSC   BTN_X0_FLAGS+7,           BTN_FLG_PRESSED, BANKED       ; already noted?
000F82 D???               M         BRA     SCN_DB_DONE_7                                   ; then we're already done
000F84 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS        ; legal to press?
000F86 D???               M         BRA     SCN_DB_RST_LCK_7                                ; if not, lock out!
                          M         ;
                          M         ; The button was pressed legally and this is the first time we
                          M         ; noticed it. Record it as the official press for this button.
                          M         ;
000F88 8100               M         BSF     BTN_X0_FLAGS+7,           BTN_FLG_PRESSED, BANKED
000F8A 9EF2               M         BCF     INTCON, 7, ACCESS                               ; disable interrupts
000F8C 9CF2               M         BCF     INTCON, 6, ACCESS                               ; disable interrupts
000F8E C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+7
000F92 C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+7
000F96 CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+7
000F9A CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+7
000F9E 8EF2               M         BSF     INTCON, 7, ACCESS                               ; enable interrupts
000FA0 8CF2               M         BSF     INTCON, 6, ACCESS                               ; enable interrupts
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L3, CHAN_L3R, 1, CHAN_L3R
000FA2 010C               M         BANKSEL QUIZSHOW_DATA
000FA4 A500               M         BTFSS   BTN_X0_FLAGS+7,           BTN_FLG_LOCKED, BANKED
000FA6 D???               M         BRA     LLIM_NOT_LOCKED_22
000FA8 B900               M         BTFSC   BTN_X0_FLAGS+7,           BTN_FLG_LCK_ACK, BANKED
000FAA D???               M         BRA     LLIM_NOT_LOCKED_22
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
000FAC 8900               M         BSF     BTN_X0_FLAGS+7,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 15
                          M          SET_SSR_VALUE 15,  0
000FAE 0104               M         BANKSEL SSR_DATA_BANK
000FB0 0E00               M          MOVLW  0
000FB2 6F00               M          MOVWF  SSR_00_VALUE+15,  BANKED
000FB4 6B00               M          CLRF   SSR_00_STEP+15,  BANKED
000FB6 6B00               M          CLRF   SSR_00_SPEED+15,  BANKED
000FB8 6B00               M          CLRF   SSR_00_COUNTER+15,  BANKED
000FBA 6B00               M          CLRF   SSR_00_FLAGS+15,  BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_L3R
                          M          SET_SSR_PATTERN CHAN_L3R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000FBC 0104               M         BANKSEL SSR_DATA_BANK
000FBE 0E00               M          MOVLW  0
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000FC0 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000FC2 0E04               M          MOVLW  4
000FC4 6F00               M          MOVWF  SSR_00_STEP+CHAN_L3R, BANKED
000FC6 0E01               M          MOVLW  1
000FC8 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L3R, BANKED
000FCA 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L3R, BANKED
000FCC 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000FCE 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L3R, BANKED
000FD0 D???               M         BRA     LLIM_END_22
                          M 
000FD2                    M LLIM_NOT_LOCKED_22:
000FD2 B300               M         BTFSC   BTN_X0_FLAGS+7,           BTN_FLG_MASKED, BANKED
000FD4 D???               M         BRA     LLIM_OFF_22
000FD6 B100               M         BTFSC   BTN_X0_FLAGS+7,           BTN_FLG_PRESSED, BANKED
000FD8 D???               M         BRA     LLIM_OFF_22
000FDA A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000FDC D???               M         BRA     LLIM_OFF_22
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 15
                          M          SET_SSR_VALUE 15,  255
000FDE 0104               M         BANKSEL SSR_DATA_BANK
000FE0 0EFF               M          MOVLW  255
000FE2 6F00               M          MOVWF  SSR_00_VALUE+15,  BANKED
000FE4 6B00               M          CLRF   SSR_00_STEP+15,  BANKED
000FE6 6B00               M          CLRF   SSR_00_SPEED+15,  BANKED
000FE8 6B00               M          CLRF   SSR_00_COUNTER+15,  BANKED
000FEA 6B00               M          CLRF   SSR_00_FLAGS+15,  BANKED
                          M         ENDW
000FEC D???               M         BRA     LLIM_END_22
                          M         
000FEE                    M LLIM_OFF_22:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 15
                          M          SET_SSR_VALUE 15,  0
000FEE 0104               M         BANKSEL SSR_DATA_BANK
000FF0 0E00               M          MOVLW  0
000FF2 6F00               M          MOVWF  SSR_00_VALUE+15,  BANKED
000FF4 6B00               M          CLRF   SSR_00_STEP+15,  BANKED
000FF6 6B00               M          CLRF   SSR_00_SPEED+15,  BANKED
000FF8 6B00               M          CLRF   SSR_00_COUNTER+15,  BANKED
000FFA 6B00               M          CLRF   SSR_00_FLAGS+15,  BANKED
                          M         ENDW
                          M 
000FFC                    M LLIM_END_22:
000FFC 010C               M         BANKSEL QUIZSHOW_DATA
  00000017                M LLIM_N  ++
                          M 
000FFE                    M SCN_DB_DONE_7:
                          M         ;
                          M         ; We're done with the button debouncing operations.
                          M         ;
                          M         ; If we're processing the 120Hz cleanup operations, do them now
                          M         ; for this button.
                          M         ;
000FFE A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
001000 D???               M         BRA     SCN_DB_END_7
                          M         ;
                          M         ; If the button is locked out, decrement its timer. If it reaches
                          M         ; zero, we can release the lock now.
                          M         ;
001002 B500               M         BTFSC   BTN_X0_FLAGS+7,           BTN_FLG_LOCKED, BANKED
001004 2F00               M         DECFSZ  BTN_X0_LOCKTMR+7,           F, BANKED
001006 D???               M         BRA     SCN_DB_END_7
001008 9500               M         BCF     BTN_X0_FLAGS+7,           BTN_FLG_LOCKED, BANKED        ; release the lock
00100A 9900               M         BCF     BTN_X0_FLAGS+7,           BTN_FLG_LCK_ACK, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L3, CHAN_L3R, 1, CHAN_L3R
00100C 010C               M         BANKSEL QUIZSHOW_DATA
00100E A500               M         BTFSS   BTN_X0_FLAGS+7,           BTN_FLG_LOCKED, BANKED
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001010 D???               M         BRA     LLIM_NOT_LOCKED_23
001012 B900               M         BTFSC   BTN_X0_FLAGS+7,           BTN_FLG_LCK_ACK, BANKED
001014 D???               M         BRA     LLIM_NOT_LOCKED_23
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
001016 8900               M         BSF     BTN_X0_FLAGS+7,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 15
                          M          SET_SSR_VALUE 15,  0
001018 0104               M         BANKSEL SSR_DATA_BANK
00101A 0E00               M          MOVLW  0
00101C 6F00               M          MOVWF  SSR_00_VALUE+15,  BANKED
00101E 6B00               M          CLRF   SSR_00_STEP+15,  BANKED
001020 6B00               M          CLRF   SSR_00_SPEED+15,  BANKED
001022 6B00               M          CLRF   SSR_00_COUNTER+15,  BANKED
001024 6B00               M          CLRF   SSR_00_FLAGS+15,  BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_L3R
                          M          SET_SSR_PATTERN CHAN_L3R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
001026 0104               M         BANKSEL SSR_DATA_BANK
001028 0E00               M          MOVLW  0
00102A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
00102C 0E04               M          MOVLW  4
00102E 6F00               M          MOVWF  SSR_00_STEP+CHAN_L3R, BANKED
001030 0E01               M          MOVLW  1
001032 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L3R, BANKED
001034 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L3R, BANKED
001036 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
001038 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L3R, BANKED
00103A D???               M         BRA     LLIM_END_23
                          M 
00103C                    M LLIM_NOT_LOCKED_23:
00103C B300               M         BTFSC   BTN_X0_FLAGS+7,           BTN_FLG_MASKED, BANKED
00103E D???               M         BRA     LLIM_OFF_23
001040 B100               M         BTFSC   BTN_X0_FLAGS+7,           BTN_FLG_PRESSED, BANKED
001042 D???               M         BRA     LLIM_OFF_23
001044 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
001046 D???               M         BRA     LLIM_OFF_23
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 15
                          M          SET_SSR_VALUE 15,  255
001048 0104               M         BANKSEL SSR_DATA_BANK
00104A 0EFF               M          MOVLW  255
00104C 6F00               M          MOVWF  SSR_00_VALUE+15,  BANKED
00104E 6B00               M          CLRF   SSR_00_STEP+15,  BANKED
001050 6B00               M          CLRF   SSR_00_SPEED+15,  BANKED
001052 6B00               M          CLRF   SSR_00_COUNTER+15,  BANKED
001054 6B00               M          CLRF   SSR_00_FLAGS+15,  BANKED
                          M         ENDW
001056 D???               M         BRA     LLIM_END_23
                          M         
001058                    M LLIM_OFF_23:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 15
                          M          SET_SSR_VALUE 15,  0
001058 0104               M         BANKSEL SSR_DATA_BANK
00105A 0E00               M          MOVLW  0
00105C 6F00               M          MOVWF  SSR_00_VALUE+15,  BANKED
00105E 6B00               M          CLRF   SSR_00_STEP+15,  BANKED
001060 6B00               M          CLRF   SSR_00_SPEED+15,  BANKED
001062 6B00               M          CLRF   SSR_00_COUNTER+15,  BANKED
001064 6B00               M          CLRF   SSR_00_FLAGS+15,  BANKED
                          M         ENDW
                          M 
001066                    M LLIM_END_23:
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001066 010C               M         BANKSEL QUIZSHOW_DATA
  00000018                M LLIM_N  ++
                          M 
001068                    M SCN_DB_END_7:
  00000008                M SCN_DBN ++
                      01009           SCAN_DEBOUNCE BTN_IDX_X4, PORT_X4, BIT_X4, CHAN_X4R, 3, CHAN_X4R
001068 010C               M         BANKSEL QUIZSHOW_DATA
00106A 0004               M         CLRWDT
                          M         ;
                          M         ; Sense button state: 
                          M         ;  0=pressed
                          M         ;  1=released
                          M         ;
00106C A883               M         BTFSS   3971,         BIT_X4,  ACCESS
00106E D???               M         BRA     SCN_DB_DOWN_8           ; pressed? branch
                          M         ;
                          M         ; button senses as "up". drain debounce counter if possible
                          M         ;
001070 6700               M         TSTFSZ  BTN_X0_DEB_TMR+8,           BANKED
001072 D???               M         BRA     SCN_DB_DRAIN_8
                          M         ;
                          M         ; The button is officially "up".  If this is news, respond
                          M         ; to this change now.  All we need to do is note the status
                          M         ; change. Everything else happens later when the code notices
                          M         ; this flag state.
                          M         ;
001074 9700               M         BCF     BTN_X0_FLAGS+8,           BTN_FLG_ACTIVE, BANKED
001076 D???               M         BRA     SCN_DB_DONE_8
                          M 
001078                    M SCN_DB_DRAIN_8:
                          M         ;
                          M         ; Drain the button debounce counter
                          M         ;
001078 0700               M         DECF    BTN_X0_DEB_TMR+8,           F, BANKED
00107A D???               M         BRA     SCN_DB_DONE_8
                          M 
00107C                    M SCN_DB_RST_LCK_8:
                          M         ;
                          M         ; The button needs to be locked out!
                          M         ; We found them pushing the button when they weren't supposed to.
                          M         ;
00107C 8500               M         BSF     BTN_X0_FLAGS+8,           BTN_FLG_LOCKED, BANKED
00107E C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+8
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X4, CHAN_X4R, 3, CHAN_X4R
001082 010C               M         BANKSEL QUIZSHOW_DATA
001084 A500               M         BTFSS   BTN_X0_FLAGS+8,           BTN_FLG_LOCKED, BANKED
001086 D???               M         BRA     LLIM_NOT_LOCKED_24
001088 B900               M         BTFSC   BTN_X0_FLAGS+8,           BTN_FLG_LCK_ACK, BANKED
00108A D???               M         BRA     LLIM_NOT_LOCKED_24
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
00108C 8900               M         BSF     BTN_X0_FLAGS+8,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 18
                          M          SET_SSR_VALUE 18,  0
00108E 0104               M         BANKSEL SSR_DATA_BANK
001090 0E00               M          MOVLW  0
001092 6F00               M          MOVWF  SSR_00_VALUE+18,  BANKED
001094 6B00               M          CLRF   SSR_00_STEP+18,  BANKED
001096 6B00               M          CLRF   SSR_00_SPEED+18,  BANKED
001098 6B00               M          CLRF   SSR_00_COUNTER+18,  BANKED
00109A 6B00               M          CLRF   SSR_00_FLAGS+18,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 17
                          M          SET_SSR_VALUE 17,  0
00109C 0104               M         BANKSEL SSR_DATA_BANK
00109E 0E00               M          MOVLW  0
0010A0 6F00               M          MOVWF  SSR_00_VALUE+17,  BANKED
0010A2 6B00               M          CLRF   SSR_00_STEP+17,  BANKED
0010A4 6B00               M          CLRF   SSR_00_SPEED+17,  BANKED
0010A6 6B00               M          CLRF   SSR_00_COUNTER+17,  BANKED
0010A8 6B00               M          CLRF   SSR_00_FLAGS+17,  BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 16
                          M          SET_SSR_VALUE 16,  0
0010AA 0104               M         BANKSEL SSR_DATA_BANK
0010AC 0E00               M          MOVLW  0
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0010AE 6F00               M          MOVWF  SSR_00_VALUE+16,  BANKED
0010B0 6B00               M          CLRF   SSR_00_STEP+16,  BANKED
0010B2 6B00               M          CLRF   SSR_00_SPEED+16,  BANKED
0010B4 6B00               M          CLRF   SSR_00_COUNTER+16,  BANKED
0010B6 6B00               M          CLRF   SSR_00_FLAGS+16,  BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_X4R
                          M          SET_SSR_PATTERN CHAN_X4R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0010B8 0104               M         BANKSEL SSR_DATA_BANK
0010BA 0E00               M          MOVLW  0
0010BC 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
0010BE 0E04               M          MOVLW  4
0010C0 6F00               M          MOVWF  SSR_00_STEP+CHAN_X4R, BANKED
0010C2 0E01               M          MOVLW  1
0010C4 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X4R, BANKED
0010C6 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X4R, BANKED
0010C8 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0010CA 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X4R, BANKED
0010CC D???               M         BRA     LLIM_END_24
                          M 
0010CE                    M LLIM_NOT_LOCKED_24:
0010CE B300               M         BTFSC   BTN_X0_FLAGS+8,           BTN_FLG_MASKED, BANKED
0010D0 D???               M         BRA     LLIM_OFF_24
0010D2 B100               M         BTFSC   BTN_X0_FLAGS+8,           BTN_FLG_PRESSED, BANKED
0010D4 D???               M         BRA     LLIM_OFF_24
0010D6 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0010D8 D???               M         BRA     LLIM_OFF_24
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_STEADY 18
                          M          SET_SSR_VALUE 18,  255
0010DA 0104               M         BANKSEL SSR_DATA_BANK
0010DC 0EFF               M          MOVLW  255
0010DE 6F00               M          MOVWF  SSR_00_VALUE+18,  BANKED
0010E0 6B00               M          CLRF   SSR_00_STEP+18,  BANKED
0010E2 6B00               M          CLRF   SSR_00_SPEED+18,  BANKED
0010E4 6B00               M          CLRF   SSR_00_COUNTER+18,  BANKED
0010E6 6B00               M          CLRF   SSR_00_FLAGS+18,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_STEADY 17
                          M          SET_SSR_VALUE 17,  255
0010E8 0104               M         BANKSEL SSR_DATA_BANK
0010EA 0EFF               M          MOVLW  255
0010EC 6F00               M          MOVWF  SSR_00_VALUE+17,  BANKED
0010EE 6B00               M          CLRF   SSR_00_STEP+17,  BANKED
0010F0 6B00               M          CLRF   SSR_00_SPEED+17,  BANKED
0010F2 6B00               M          CLRF   SSR_00_COUNTER+17,  BANKED
0010F4 6B00               M          CLRF   SSR_00_FLAGS+17,  BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 16
                          M          SET_SSR_VALUE 16,  255
0010F6 0104               M         BANKSEL SSR_DATA_BANK
0010F8 0EFF               M          MOVLW  255
0010FA 6F00               M          MOVWF  SSR_00_VALUE+16,  BANKED
0010FC 6B00               M          CLRF   SSR_00_STEP+16,  BANKED
0010FE 6B00               M          CLRF   SSR_00_SPEED+16,  BANKED
001100 6B00               M          CLRF   SSR_00_COUNTER+16,  BANKED
001102 6B00               M          CLRF   SSR_00_FLAGS+16,  BANKED
                          M         ENDW
001104 D???               M         BRA     LLIM_END_24
                          M         
001106                    M LLIM_OFF_24:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 18
                          M          SET_SSR_VALUE 18,  0
001106 0104               M         BANKSEL SSR_DATA_BANK
001108 0E00               M          MOVLW  0
00110A 6F00               M          MOVWF  SSR_00_VALUE+18,  BANKED
00110C 6B00               M          CLRF   SSR_00_STEP+18,  BANKED
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00110E 6B00               M          CLRF   SSR_00_SPEED+18,  BANKED
001110 6B00               M          CLRF   SSR_00_COUNTER+18,  BANKED
001112 6B00               M          CLRF   SSR_00_FLAGS+18,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 17
                          M          SET_SSR_VALUE 17,  0
001114 0104               M         BANKSEL SSR_DATA_BANK
001116 0E00               M          MOVLW  0
001118 6F00               M          MOVWF  SSR_00_VALUE+17,  BANKED
00111A 6B00               M          CLRF   SSR_00_STEP+17,  BANKED
00111C 6B00               M          CLRF   SSR_00_SPEED+17,  BANKED
00111E 6B00               M          CLRF   SSR_00_COUNTER+17,  BANKED
001120 6B00               M          CLRF   SSR_00_FLAGS+17,  BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 16
                          M          SET_SSR_VALUE 16,  0
001122 0104               M         BANKSEL SSR_DATA_BANK
001124 0E00               M          MOVLW  0
001126 6F00               M          MOVWF  SSR_00_VALUE+16,  BANKED
001128 6B00               M          CLRF   SSR_00_STEP+16,  BANKED
00112A 6B00               M          CLRF   SSR_00_SPEED+16,  BANKED
00112C 6B00               M          CLRF   SSR_00_COUNTER+16,  BANKED
00112E 6B00               M          CLRF   SSR_00_FLAGS+16,  BANKED
                          M         ENDW
                          M 
001130                    M LLIM_END_24:
001130 010C               M         BANKSEL QUIZSHOW_DATA
  00000019                M LLIM_N  ++
001132 D???               M         BRA     SCN_DB_DONE_8
                          M 
001134                    M SCN_DB_DOWN_8:
                          M         ;
                          M         ; button senses as "down". fill debounce counter if possible
                          M         ;
001134 3F00               M         INCFSZ  BTN_X0_DEB_TMR+8,           F, BANKED
001136 D???               M         BRA     SCN_DB_DONE_8
                          M         ;
                          M         ; counter was full (since we overflowed it to 0 again). so
                          M         ; the button is officially "down".  Put the counter back
                          M         ; to 255 and proceed with what it means for the button to be
                          M         ; officially down.
                          M         ;
001138 6900               M         SETF    BTN_X0_DEB_TMR+8,           BANKED
00113A B500               M         BTFSC   BTN_X0_FLAGS+8,           BTN_FLG_LOCKED, BANKED        ; is it locked?
00113C D???               M         BRA     SCN_DB_RST_LCK_8                                ; stay locked longer
00113E B700               M         BTFSC   BTN_X0_FLAGS+8,           BTN_FLG_ACTIVE, BANKED        ; if we already saw the button p
                            ress
001140 D???               M         BRA     SCN_DB_DONE_8                                   ;   then we don't need to do anything mo
                            re
                          M         ;
                          M         ; We didn't know the button was down yet. Let's see what
                          M         ; that changes...
                          M         ;
001142 8700               M         BSF     BTN_X0_FLAGS+8,           BTN_FLG_ACTIVE, BANKED        ; mark as "down"
001144 B300               M         BTFSC   BTN_X0_FLAGS+8,           BTN_FLG_MASKED, BANKED        ; is it masked?
001146 D???               M         BRA     SCN_DB_DONE_8                                   ; then ignore it
001148 B100               M         BTFSC   BTN_X0_FLAGS+8,           BTN_FLG_PRESSED, BANKED       ; already noted?
00114A D???               M         BRA     SCN_DB_DONE_8                                   ; then we're already done
00114C A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS        ; legal to press?
00114E D???               M         BRA     SCN_DB_RST_LCK_8                                ; if not, lock out!
                          M         ;
                          M         ; The button was pressed legally and this is the first time we
                          M         ; noticed it. Record it as the official press for this button.
                          M         ;
001150 8100               M         BSF     BTN_X0_FLAGS+8,           BTN_FLG_PRESSED, BANKED
001152 9EF2               M         BCF     INTCON, 7, ACCESS                               ; disable interrupts
001154 9CF2               M         BCF     INTCON, 6, ACCESS                               ; disable interrupts
001156 C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+8
00115A C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+8
00115E CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+8
001162 CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+8
001166 8EF2               M         BSF     INTCON, 7, ACCESS                               ; enable interrupts
001168 8CF2               M         BSF     INTCON, 6, ACCESS                               ; enable interrupts
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X4, CHAN_X4R, 3, CHAN_X4R
00116A 010C               M         BANKSEL QUIZSHOW_DATA
00116C A500               M         BTFSS   BTN_X0_FLAGS+8,           BTN_FLG_LOCKED, BANKED
00116E D???               M         BRA     LLIM_NOT_LOCKED_25
001170 B900               M         BTFSC   BTN_X0_FLAGS+8,           BTN_FLG_LCK_ACK, BANKED
001172 D???               M         BRA     LLIM_NOT_LOCKED_25
                          M         ;
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ; light up for locked mode for the first time
                          M         ;
001174 8900               M         BSF     BTN_X0_FLAGS+8,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 18
                          M          SET_SSR_VALUE 18,  0
001176 0104               M         BANKSEL SSR_DATA_BANK
001178 0E00               M          MOVLW  0
00117A 6F00               M          MOVWF  SSR_00_VALUE+18,  BANKED
00117C 6B00               M          CLRF   SSR_00_STEP+18,  BANKED
00117E 6B00               M          CLRF   SSR_00_SPEED+18,  BANKED
001180 6B00               M          CLRF   SSR_00_COUNTER+18,  BANKED
001182 6B00               M          CLRF   SSR_00_FLAGS+18,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 17
                          M          SET_SSR_VALUE 17,  0
001184 0104               M         BANKSEL SSR_DATA_BANK
001186 0E00               M          MOVLW  0
001188 6F00               M          MOVWF  SSR_00_VALUE+17,  BANKED
00118A 6B00               M          CLRF   SSR_00_STEP+17,  BANKED
00118C 6B00               M          CLRF   SSR_00_SPEED+17,  BANKED
00118E 6B00               M          CLRF   SSR_00_COUNTER+17,  BANKED
001190 6B00               M          CLRF   SSR_00_FLAGS+17,  BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 16
                          M          SET_SSR_VALUE 16,  0
001192 0104               M         BANKSEL SSR_DATA_BANK
001194 0E00               M          MOVLW  0
001196 6F00               M          MOVWF  SSR_00_VALUE+16,  BANKED
001198 6B00               M          CLRF   SSR_00_STEP+16,  BANKED
00119A 6B00               M          CLRF   SSR_00_SPEED+16,  BANKED
00119C 6B00               M          CLRF   SSR_00_COUNTER+16,  BANKED
00119E 6B00               M          CLRF   SSR_00_FLAGS+16,  BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_X4R
                          M          SET_SSR_PATTERN CHAN_X4R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0011A0 0104               M         BANKSEL SSR_DATA_BANK
0011A2 0E00               M          MOVLW  0
0011A4 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
0011A6 0E04               M          MOVLW  4
0011A8 6F00               M          MOVWF  SSR_00_STEP+CHAN_X4R, BANKED
0011AA 0E01               M          MOVLW  1
0011AC 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X4R, BANKED
0011AE 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X4R, BANKED
0011B0 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0011B2 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X4R, BANKED
0011B4 D???               M         BRA     LLIM_END_25
                          M 
0011B6                    M LLIM_NOT_LOCKED_25:
0011B6 B300               M         BTFSC   BTN_X0_FLAGS+8,           BTN_FLG_MASKED, BANKED
0011B8 D???               M         BRA     LLIM_OFF_25
0011BA B100               M         BTFSC   BTN_X0_FLAGS+8,           BTN_FLG_PRESSED, BANKED
0011BC D???               M         BRA     LLIM_OFF_25
0011BE A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0011C0 D???               M         BRA     LLIM_OFF_25
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_STEADY 18
                          M          SET_SSR_VALUE 18,  255
0011C2 0104               M         BANKSEL SSR_DATA_BANK
0011C4 0EFF               M          MOVLW  255
0011C6 6F00               M          MOVWF  SSR_00_VALUE+18,  BANKED
0011C8 6B00               M          CLRF   SSR_00_STEP+18,  BANKED
0011CA 6B00               M          CLRF   SSR_00_SPEED+18,  BANKED
0011CC 6B00               M          CLRF   SSR_00_COUNTER+18,  BANKED
0011CE 6B00               M          CLRF   SSR_00_FLAGS+18,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_STEADY 17
                          M          SET_SSR_VALUE 17,  255
0011D0 0104               M         BANKSEL SSR_DATA_BANK
0011D2 0EFF               M          MOVLW  255
0011D4 6F00               M          MOVWF  SSR_00_VALUE+17,  BANKED
0011D6 6B00               M          CLRF   SSR_00_STEP+17,  BANKED
0011D8 6B00               M          CLRF   SSR_00_SPEED+17,  BANKED
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0011DA 6B00               M          CLRF   SSR_00_COUNTER+17,  BANKED
0011DC 6B00               M          CLRF   SSR_00_FLAGS+17,  BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 16
                          M          SET_SSR_VALUE 16,  255
0011DE 0104               M         BANKSEL SSR_DATA_BANK
0011E0 0EFF               M          MOVLW  255
0011E2 6F00               M          MOVWF  SSR_00_VALUE+16,  BANKED
0011E4 6B00               M          CLRF   SSR_00_STEP+16,  BANKED
0011E6 6B00               M          CLRF   SSR_00_SPEED+16,  BANKED
0011E8 6B00               M          CLRF   SSR_00_COUNTER+16,  BANKED
0011EA 6B00               M          CLRF   SSR_00_FLAGS+16,  BANKED
                          M         ENDW
0011EC D???               M         BRA     LLIM_END_25
                          M         
0011EE                    M LLIM_OFF_25:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 18
                          M          SET_SSR_VALUE 18,  0
0011EE 0104               M         BANKSEL SSR_DATA_BANK
0011F0 0E00               M          MOVLW  0
0011F2 6F00               M          MOVWF  SSR_00_VALUE+18,  BANKED
0011F4 6B00               M          CLRF   SSR_00_STEP+18,  BANKED
0011F6 6B00               M          CLRF   SSR_00_SPEED+18,  BANKED
0011F8 6B00               M          CLRF   SSR_00_COUNTER+18,  BANKED
0011FA 6B00               M          CLRF   SSR_00_FLAGS+18,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 17
                          M          SET_SSR_VALUE 17,  0
0011FC 0104               M         BANKSEL SSR_DATA_BANK
0011FE 0E00               M          MOVLW  0
001200 6F00               M          MOVWF  SSR_00_VALUE+17,  BANKED
001202 6B00               M          CLRF   SSR_00_STEP+17,  BANKED
001204 6B00               M          CLRF   SSR_00_SPEED+17,  BANKED
001206 6B00               M          CLRF   SSR_00_COUNTER+17,  BANKED
001208 6B00               M          CLRF   SSR_00_FLAGS+17,  BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 16
                          M          SET_SSR_VALUE 16,  0
00120A 0104               M         BANKSEL SSR_DATA_BANK
00120C 0E00               M          MOVLW  0
00120E 6F00               M          MOVWF  SSR_00_VALUE+16,  BANKED
001210 6B00               M          CLRF   SSR_00_STEP+16,  BANKED
001212 6B00               M          CLRF   SSR_00_SPEED+16,  BANKED
001214 6B00               M          CLRF   SSR_00_COUNTER+16,  BANKED
001216 6B00               M          CLRF   SSR_00_FLAGS+16,  BANKED
                          M         ENDW
                          M 
001218                    M LLIM_END_25:
001218 010C               M         BANKSEL QUIZSHOW_DATA
  0000001A                M LLIM_N  ++
                          M 
00121A                    M SCN_DB_DONE_8:
                          M         ;
                          M         ; We're done with the button debouncing operations.
                          M         ;
                          M         ; If we're processing the 120Hz cleanup operations, do them now
                          M         ; for this button.
                          M         ;
00121A A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
00121C D???               M         BRA     SCN_DB_END_8
                          M         ;
                          M         ; If the button is locked out, decrement its timer. If it reaches
                          M         ; zero, we can release the lock now.
                          M         ;
00121E B500               M         BTFSC   BTN_X0_FLAGS+8,           BTN_FLG_LOCKED, BANKED
001220 2F00               M         DECFSZ  BTN_X0_LOCKTMR+8,           F, BANKED
001222 D???               M         BRA     SCN_DB_END_8
001224 9500               M         BCF     BTN_X0_FLAGS+8,           BTN_FLG_LOCKED, BANKED        ; release the lock
001226 9900               M         BCF     BTN_X0_FLAGS+8,           BTN_FLG_LCK_ACK, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X4, CHAN_X4R, 3, CHAN_X4R
001228 010C               M         BANKSEL QUIZSHOW_DATA
00122A A500               M         BTFSS   BTN_X0_FLAGS+8,           BTN_FLG_LOCKED, BANKED
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00122C D???               M         BRA     LLIM_NOT_LOCKED_26
00122E B900               M         BTFSC   BTN_X0_FLAGS+8,           BTN_FLG_LCK_ACK, BANKED
001230 D???               M         BRA     LLIM_NOT_LOCKED_26
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
001232 8900               M         BSF     BTN_X0_FLAGS+8,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 18
                          M          SET_SSR_VALUE 18,  0
001234 0104               M         BANKSEL SSR_DATA_BANK
001236 0E00               M          MOVLW  0
001238 6F00               M          MOVWF  SSR_00_VALUE+18,  BANKED
00123A 6B00               M          CLRF   SSR_00_STEP+18,  BANKED
00123C 6B00               M          CLRF   SSR_00_SPEED+18,  BANKED
00123E 6B00               M          CLRF   SSR_00_COUNTER+18,  BANKED
001240 6B00               M          CLRF   SSR_00_FLAGS+18,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 17
                          M          SET_SSR_VALUE 17,  0
001242 0104               M         BANKSEL SSR_DATA_BANK
001244 0E00               M          MOVLW  0
001246 6F00               M          MOVWF  SSR_00_VALUE+17,  BANKED
001248 6B00               M          CLRF   SSR_00_STEP+17,  BANKED
00124A 6B00               M          CLRF   SSR_00_SPEED+17,  BANKED
00124C 6B00               M          CLRF   SSR_00_COUNTER+17,  BANKED
00124E 6B00               M          CLRF   SSR_00_FLAGS+17,  BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 16
                          M          SET_SSR_VALUE 16,  0
001250 0104               M         BANKSEL SSR_DATA_BANK
001252 0E00               M          MOVLW  0
001254 6F00               M          MOVWF  SSR_00_VALUE+16,  BANKED
001256 6B00               M          CLRF   SSR_00_STEP+16,  BANKED
001258 6B00               M          CLRF   SSR_00_SPEED+16,  BANKED
00125A 6B00               M          CLRF   SSR_00_COUNTER+16,  BANKED
00125C 6B00               M          CLRF   SSR_00_FLAGS+16,  BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_X4R
                          M          SET_SSR_PATTERN CHAN_X4R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
00125E 0104               M         BANKSEL SSR_DATA_BANK
001260 0E00               M          MOVLW  0
001262 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
001264 0E04               M          MOVLW  4
001266 6F00               M          MOVWF  SSR_00_STEP+CHAN_X4R, BANKED
001268 0E01               M          MOVLW  1
00126A 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X4R, BANKED
00126C 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X4R, BANKED
00126E 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
001270 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X4R, BANKED
001272 D???               M         BRA     LLIM_END_26
                          M 
001274                    M LLIM_NOT_LOCKED_26:
001274 B300               M         BTFSC   BTN_X0_FLAGS+8,           BTN_FLG_MASKED, BANKED
001276 D???               M         BRA     LLIM_OFF_26
001278 B100               M         BTFSC   BTN_X0_FLAGS+8,           BTN_FLG_PRESSED, BANKED
00127A D???               M         BRA     LLIM_OFF_26
00127C A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
00127E D???               M         BRA     LLIM_OFF_26
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_STEADY 18
                          M          SET_SSR_VALUE 18,  255
001280 0104               M         BANKSEL SSR_DATA_BANK
001282 0EFF               M          MOVLW  255
001284 6F00               M          MOVWF  SSR_00_VALUE+18,  BANKED
001286 6B00               M          CLRF   SSR_00_STEP+18,  BANKED
001288 6B00               M          CLRF   SSR_00_SPEED+18,  BANKED
00128A 6B00               M          CLRF   SSR_00_COUNTER+18,  BANKED
00128C 6B00               M          CLRF   SSR_00_FLAGS+18,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_STEADY 17
                          M          SET_SSR_VALUE 17,  255
00128E 0104               M         BANKSEL SSR_DATA_BANK
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001290 0EFF               M          MOVLW  255
001292 6F00               M          MOVWF  SSR_00_VALUE+17,  BANKED
001294 6B00               M          CLRF   SSR_00_STEP+17,  BANKED
001296 6B00               M          CLRF   SSR_00_SPEED+17,  BANKED
001298 6B00               M          CLRF   SSR_00_COUNTER+17,  BANKED
00129A 6B00               M          CLRF   SSR_00_FLAGS+17,  BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 16
                          M          SET_SSR_VALUE 16,  255
00129C 0104               M         BANKSEL SSR_DATA_BANK
00129E 0EFF               M          MOVLW  255
0012A0 6F00               M          MOVWF  SSR_00_VALUE+16,  BANKED
0012A2 6B00               M          CLRF   SSR_00_STEP+16,  BANKED
0012A4 6B00               M          CLRF   SSR_00_SPEED+16,  BANKED
0012A6 6B00               M          CLRF   SSR_00_COUNTER+16,  BANKED
0012A8 6B00               M          CLRF   SSR_00_FLAGS+16,  BANKED
                          M         ENDW
0012AA D???               M         BRA     LLIM_END_26
                          M         
0012AC                    M LLIM_OFF_26:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 18
                          M          SET_SSR_VALUE 18,  0
0012AC 0104               M         BANKSEL SSR_DATA_BANK
0012AE 0E00               M          MOVLW  0
0012B0 6F00               M          MOVWF  SSR_00_VALUE+18,  BANKED
0012B2 6B00               M          CLRF   SSR_00_STEP+18,  BANKED
0012B4 6B00               M          CLRF   SSR_00_SPEED+18,  BANKED
0012B6 6B00               M          CLRF   SSR_00_COUNTER+18,  BANKED
0012B8 6B00               M          CLRF   SSR_00_FLAGS+18,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 17
                          M          SET_SSR_VALUE 17,  0
0012BA 0104               M         BANKSEL SSR_DATA_BANK
0012BC 0E00               M          MOVLW  0
0012BE 6F00               M          MOVWF  SSR_00_VALUE+17,  BANKED
0012C0 6B00               M          CLRF   SSR_00_STEP+17,  BANKED
0012C2 6B00               M          CLRF   SSR_00_SPEED+17,  BANKED
0012C4 6B00               M          CLRF   SSR_00_COUNTER+17,  BANKED
0012C6 6B00               M          CLRF   SSR_00_FLAGS+17,  BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 16
                          M          SET_SSR_VALUE 16,  0
0012C8 0104               M         BANKSEL SSR_DATA_BANK
0012CA 0E00               M          MOVLW  0
0012CC 6F00               M          MOVWF  SSR_00_VALUE+16,  BANKED
0012CE 6B00               M          CLRF   SSR_00_STEP+16,  BANKED
0012D0 6B00               M          CLRF   SSR_00_SPEED+16,  BANKED
0012D2 6B00               M          CLRF   SSR_00_COUNTER+16,  BANKED
0012D4 6B00               M          CLRF   SSR_00_FLAGS+16,  BANKED
                          M         ENDW
                          M 
0012D6                    M LLIM_END_26:
0012D6 010C               M         BANKSEL QUIZSHOW_DATA
  0000001B                M LLIM_N  ++
                          M 
0012D8                    M SCN_DB_END_8:
  00000009                M SCN_DBN ++
                      01010           SCAN_DEBOUNCE BTN_IDX_L4, PORT_L4, BIT_L4, CHAN_L4R, 1, CHAN_L4R
0012D8 010C               M         BANKSEL QUIZSHOW_DATA
0012DA 0004               M         CLRWDT
                          M         ;
                          M         ; Sense button state: 
                          M         ;  0=pressed
                          M         ;  1=released
                          M         ;
0012DC AA82               M         BTFSS   3970,         BIT_L4,  ACCESS
0012DE D???               M         BRA     SCN_DB_DOWN_9           ; pressed? branch
                          M         ;
                          M         ; button senses as "up". drain debounce counter if possible
                          M         ;
0012E0 6700               M         TSTFSZ  BTN_X0_DEB_TMR+9,           BANKED
0012E2 D???               M         BRA     SCN_DB_DRAIN_9
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;
                          M         ; The button is officially "up".  If this is news, respond
                          M         ; to this change now.  All we need to do is note the status
                          M         ; change. Everything else happens later when the code notices
                          M         ; this flag state.
                          M         ;
0012E4 9700               M         BCF     BTN_X0_FLAGS+9,           BTN_FLG_ACTIVE, BANKED
0012E6 D???               M         BRA     SCN_DB_DONE_9
                          M 
0012E8                    M SCN_DB_DRAIN_9:
                          M         ;
                          M         ; Drain the button debounce counter
                          M         ;
0012E8 0700               M         DECF    BTN_X0_DEB_TMR+9,           F, BANKED
0012EA D???               M         BRA     SCN_DB_DONE_9
                          M 
0012EC                    M SCN_DB_RST_LCK_9:
                          M         ;
                          M         ; The button needs to be locked out!
                          M         ; We found them pushing the button when they weren't supposed to.
                          M         ;
0012EC 8500               M         BSF     BTN_X0_FLAGS+9,           BTN_FLG_LOCKED, BANKED
0012EE C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+9
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L4, CHAN_L4R, 1, CHAN_L4R
0012F2 010C               M         BANKSEL QUIZSHOW_DATA
0012F4 A500               M         BTFSS   BTN_X0_FLAGS+9,           BTN_FLG_LOCKED, BANKED
0012F6 D???               M         BRA     LLIM_NOT_LOCKED_27
0012F8 B900               M         BTFSC   BTN_X0_FLAGS+9,           BTN_FLG_LCK_ACK, BANKED
0012FA D???               M         BRA     LLIM_NOT_LOCKED_27
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
0012FC 8900               M         BSF     BTN_X0_FLAGS+9,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 19
                          M          SET_SSR_VALUE 19,  0
0012FE 0104               M         BANKSEL SSR_DATA_BANK
001300 0E00               M          MOVLW  0
001302 6F00               M          MOVWF  SSR_00_VALUE+19,  BANKED
001304 6B00               M          CLRF   SSR_00_STEP+19,  BANKED
001306 6B00               M          CLRF   SSR_00_SPEED+19,  BANKED
001308 6B00               M          CLRF   SSR_00_COUNTER+19,  BANKED
00130A 6B00               M          CLRF   SSR_00_FLAGS+19,  BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_L4R
                          M          SET_SSR_PATTERN CHAN_L4R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
00130C 0104               M         BANKSEL SSR_DATA_BANK
00130E 0E00               M          MOVLW  0
001310 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
001312 0E04               M          MOVLW  4
001314 6F00               M          MOVWF  SSR_00_STEP+CHAN_L4R, BANKED
001316 0E01               M          MOVLW  1
001318 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L4R, BANKED
00131A 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L4R, BANKED
00131C 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
00131E 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L4R, BANKED
001320 D???               M         BRA     LLIM_END_27
                          M 
001322                    M LLIM_NOT_LOCKED_27:
001322 B300               M         BTFSC   BTN_X0_FLAGS+9,           BTN_FLG_MASKED, BANKED
001324 D???               M         BRA     LLIM_OFF_27
001326 B100               M         BTFSC   BTN_X0_FLAGS+9,           BTN_FLG_PRESSED, BANKED
001328 D???               M         BRA     LLIM_OFF_27
00132A A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
00132C D???               M         BRA     LLIM_OFF_27
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 19
                          M          SET_SSR_VALUE 19,  255
00132E 0104               M         BANKSEL SSR_DATA_BANK
001330 0EFF               M          MOVLW  255
001332 6F00               M          MOVWF  SSR_00_VALUE+19,  BANKED
001334 6B00               M          CLRF   SSR_00_STEP+19,  BANKED
001336 6B00               M          CLRF   SSR_00_SPEED+19,  BANKED
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001338 6B00               M          CLRF   SSR_00_COUNTER+19,  BANKED
00133A 6B00               M          CLRF   SSR_00_FLAGS+19,  BANKED
                          M         ENDW
00133C D???               M         BRA     LLIM_END_27
                          M         
00133E                    M LLIM_OFF_27:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 19
                          M          SET_SSR_VALUE 19,  0
00133E 0104               M         BANKSEL SSR_DATA_BANK
001340 0E00               M          MOVLW  0
001342 6F00               M          MOVWF  SSR_00_VALUE+19,  BANKED
001344 6B00               M          CLRF   SSR_00_STEP+19,  BANKED
001346 6B00               M          CLRF   SSR_00_SPEED+19,  BANKED
001348 6B00               M          CLRF   SSR_00_COUNTER+19,  BANKED
00134A 6B00               M          CLRF   SSR_00_FLAGS+19,  BANKED
                          M         ENDW
                          M 
00134C                    M LLIM_END_27:
00134C 010C               M         BANKSEL QUIZSHOW_DATA
  0000001C                M LLIM_N  ++
00134E D???               M         BRA     SCN_DB_DONE_9
                          M 
001350                    M SCN_DB_DOWN_9:
                          M         ;
                          M         ; button senses as "down". fill debounce counter if possible
                          M         ;
001350 3F00               M         INCFSZ  BTN_X0_DEB_TMR+9,           F, BANKED
001352 D???               M         BRA     SCN_DB_DONE_9
                          M         ;
                          M         ; counter was full (since we overflowed it to 0 again). so
                          M         ; the button is officially "down".  Put the counter back
                          M         ; to 255 and proceed with what it means for the button to be
                          M         ; officially down.
                          M         ;
001354 6900               M         SETF    BTN_X0_DEB_TMR+9,           BANKED
001356 B500               M         BTFSC   BTN_X0_FLAGS+9,           BTN_FLG_LOCKED, BANKED        ; is it locked?
001358 D???               M         BRA     SCN_DB_RST_LCK_9                                ; stay locked longer
00135A B700               M         BTFSC   BTN_X0_FLAGS+9,           BTN_FLG_ACTIVE, BANKED        ; if we already saw the button p
                            ress
00135C D???               M         BRA     SCN_DB_DONE_9                                   ;   then we don't need to do anything mo
                            re
                          M         ;
                          M         ; We didn't know the button was down yet. Let's see what
                          M         ; that changes...
                          M         ;
00135E 8700               M         BSF     BTN_X0_FLAGS+9,           BTN_FLG_ACTIVE, BANKED        ; mark as "down"
001360 B300               M         BTFSC   BTN_X0_FLAGS+9,           BTN_FLG_MASKED, BANKED        ; is it masked?
001362 D???               M         BRA     SCN_DB_DONE_9                                   ; then ignore it
001364 B100               M         BTFSC   BTN_X0_FLAGS+9,           BTN_FLG_PRESSED, BANKED       ; already noted?
001366 D???               M         BRA     SCN_DB_DONE_9                                   ; then we're already done
001368 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS        ; legal to press?
00136A D???               M         BRA     SCN_DB_RST_LCK_9                                ; if not, lock out!
                          M         ;
                          M         ; The button was pressed legally and this is the first time we
                          M         ; noticed it. Record it as the official press for this button.
                          M         ;
00136C 8100               M         BSF     BTN_X0_FLAGS+9,           BTN_FLG_PRESSED, BANKED
00136E 9EF2               M         BCF     INTCON, 7, ACCESS                               ; disable interrupts
001370 9CF2               M         BCF     INTCON, 6, ACCESS                               ; disable interrupts
001372 C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+9
001376 C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+9
00137A CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+9
00137E CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+9
001382 8EF2               M         BSF     INTCON, 7, ACCESS                               ; enable interrupts
001384 8CF2               M         BSF     INTCON, 6, ACCESS                               ; enable interrupts
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L4, CHAN_L4R, 1, CHAN_L4R
001386 010C               M         BANKSEL QUIZSHOW_DATA
001388 A500               M         BTFSS   BTN_X0_FLAGS+9,           BTN_FLG_LOCKED, BANKED
00138A D???               M         BRA     LLIM_NOT_LOCKED_28
00138C B900               M         BTFSC   BTN_X0_FLAGS+9,           BTN_FLG_LCK_ACK, BANKED
00138E D???               M         BRA     LLIM_NOT_LOCKED_28
                          M         ;
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ; light up for locked mode for the first time
                          M         ;
001390 8900               M         BSF     BTN_X0_FLAGS+9,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 19
                          M          SET_SSR_VALUE 19,  0
001392 0104               M         BANKSEL SSR_DATA_BANK
001394 0E00               M          MOVLW  0
001396 6F00               M          MOVWF  SSR_00_VALUE+19,  BANKED
001398 6B00               M          CLRF   SSR_00_STEP+19,  BANKED
00139A 6B00               M          CLRF   SSR_00_SPEED+19,  BANKED
00139C 6B00               M          CLRF   SSR_00_COUNTER+19,  BANKED
00139E 6B00               M          CLRF   SSR_00_FLAGS+19,  BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_L4R
                          M          SET_SSR_PATTERN CHAN_L4R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0013A0 0104               M         BANKSEL SSR_DATA_BANK
0013A2 0E00               M          MOVLW  0
0013A4 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
0013A6 0E04               M          MOVLW  4
0013A8 6F00               M          MOVWF  SSR_00_STEP+CHAN_L4R, BANKED
0013AA 0E01               M          MOVLW  1
0013AC 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L4R, BANKED
0013AE 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L4R, BANKED
0013B0 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0013B2 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L4R, BANKED
0013B4 D???               M         BRA     LLIM_END_28
                          M 
0013B6                    M LLIM_NOT_LOCKED_28:
0013B6 B300               M         BTFSC   BTN_X0_FLAGS+9,           BTN_FLG_MASKED, BANKED
0013B8 D???               M         BRA     LLIM_OFF_28
0013BA B100               M         BTFSC   BTN_X0_FLAGS+9,           BTN_FLG_PRESSED, BANKED
0013BC D???               M         BRA     LLIM_OFF_28
0013BE A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0013C0 D???               M         BRA     LLIM_OFF_28
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 19
                          M          SET_SSR_VALUE 19,  255
0013C2 0104               M         BANKSEL SSR_DATA_BANK
0013C4 0EFF               M          MOVLW  255
0013C6 6F00               M          MOVWF  SSR_00_VALUE+19,  BANKED
0013C8 6B00               M          CLRF   SSR_00_STEP+19,  BANKED
0013CA 6B00               M          CLRF   SSR_00_SPEED+19,  BANKED
0013CC 6B00               M          CLRF   SSR_00_COUNTER+19,  BANKED
0013CE 6B00               M          CLRF   SSR_00_FLAGS+19,  BANKED
                          M         ENDW
0013D0 D???               M         BRA     LLIM_END_28
                          M         
0013D2                    M LLIM_OFF_28:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 19
                          M          SET_SSR_VALUE 19,  0
0013D2 0104               M         BANKSEL SSR_DATA_BANK
0013D4 0E00               M          MOVLW  0
0013D6 6F00               M          MOVWF  SSR_00_VALUE+19,  BANKED
0013D8 6B00               M          CLRF   SSR_00_STEP+19,  BANKED
0013DA 6B00               M          CLRF   SSR_00_SPEED+19,  BANKED
0013DC 6B00               M          CLRF   SSR_00_COUNTER+19,  BANKED
0013DE 6B00               M          CLRF   SSR_00_FLAGS+19,  BANKED
                          M         ENDW
                          M 
0013E0                    M LLIM_END_28:
0013E0 010C               M         BANKSEL QUIZSHOW_DATA
  0000001D                M LLIM_N  ++
                          M 
0013E2                    M SCN_DB_DONE_9:
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;
                          M         ; We're done with the button debouncing operations.
                          M         ;
                          M         ; If we're processing the 120Hz cleanup operations, do them now
                          M         ; for this button.
                          M         ;
0013E2 A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
0013E4 D???               M         BRA     SCN_DB_END_9
                          M         ;
                          M         ; If the button is locked out, decrement its timer. If it reaches
                          M         ; zero, we can release the lock now.
                          M         ;
0013E6 B500               M         BTFSC   BTN_X0_FLAGS+9,           BTN_FLG_LOCKED, BANKED
0013E8 2F00               M         DECFSZ  BTN_X0_LOCKTMR+9,           F, BANKED
0013EA D???               M         BRA     SCN_DB_END_9
0013EC 9500               M         BCF     BTN_X0_FLAGS+9,           BTN_FLG_LOCKED, BANKED        ; release the lock
0013EE 9900               M         BCF     BTN_X0_FLAGS+9,           BTN_FLG_LCK_ACK, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L4, CHAN_L4R, 1, CHAN_L4R
0013F0 010C               M         BANKSEL QUIZSHOW_DATA
0013F2 A500               M         BTFSS   BTN_X0_FLAGS+9,           BTN_FLG_LOCKED, BANKED
0013F4 D???               M         BRA     LLIM_NOT_LOCKED_29
0013F6 B900               M         BTFSC   BTN_X0_FLAGS+9,           BTN_FLG_LCK_ACK, BANKED
0013F8 D???               M         BRA     LLIM_NOT_LOCKED_29
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
0013FA 8900               M         BSF     BTN_X0_FLAGS+9,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 19
                          M          SET_SSR_VALUE 19,  0
0013FC 0104               M         BANKSEL SSR_DATA_BANK
0013FE 0E00               M          MOVLW  0
001400 6F00               M          MOVWF  SSR_00_VALUE+19,  BANKED
001402 6B00               M          CLRF   SSR_00_STEP+19,  BANKED
001404 6B00               M          CLRF   SSR_00_SPEED+19,  BANKED
001406 6B00               M          CLRF   SSR_00_COUNTER+19,  BANKED
001408 6B00               M          CLRF   SSR_00_FLAGS+19,  BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_L4R
                          M          SET_SSR_PATTERN CHAN_L4R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
00140A 0104               M         BANKSEL SSR_DATA_BANK
00140C 0E00               M          MOVLW  0
00140E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
001410 0E04               M          MOVLW  4
001412 6F00               M          MOVWF  SSR_00_STEP+CHAN_L4R, BANKED
001414 0E01               M          MOVLW  1
001416 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L4R, BANKED
001418 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L4R, BANKED
00141A 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
00141C 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L4R, BANKED
00141E D???               M         BRA     LLIM_END_29
                          M 
001420                    M LLIM_NOT_LOCKED_29:
001420 B300               M         BTFSC   BTN_X0_FLAGS+9,           BTN_FLG_MASKED, BANKED
001422 D???               M         BRA     LLIM_OFF_29
001424 B100               M         BTFSC   BTN_X0_FLAGS+9,           BTN_FLG_PRESSED, BANKED
001426 D???               M         BRA     LLIM_OFF_29
001428 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
00142A D???               M         BRA     LLIM_OFF_29
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 19
                          M          SET_SSR_VALUE 19,  255
00142C 0104               M         BANKSEL SSR_DATA_BANK
00142E 0EFF               M          MOVLW  255
001430 6F00               M          MOVWF  SSR_00_VALUE+19,  BANKED
001432 6B00               M          CLRF   SSR_00_STEP+19,  BANKED
001434 6B00               M          CLRF   SSR_00_SPEED+19,  BANKED
001436 6B00               M          CLRF   SSR_00_COUNTER+19,  BANKED
001438 6B00               M          CLRF   SSR_00_FLAGS+19,  BANKED
                          M         ENDW
00143A D???               M         BRA     LLIM_END_29
                          M         
00143C                    M LLIM_OFF_29:
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 80


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 19
                          M          SET_SSR_VALUE 19,  0
00143C 0104               M         BANKSEL SSR_DATA_BANK
00143E 0E00               M          MOVLW  0
001440 6F00               M          MOVWF  SSR_00_VALUE+19,  BANKED
001442 6B00               M          CLRF   SSR_00_STEP+19,  BANKED
001444 6B00               M          CLRF   SSR_00_SPEED+19,  BANKED
001446 6B00               M          CLRF   SSR_00_COUNTER+19,  BANKED
001448 6B00               M          CLRF   SSR_00_FLAGS+19,  BANKED
                          M         ENDW
                          M 
00144A                    M LLIM_END_29:
00144A 010C               M         BANKSEL QUIZSHOW_DATA
  0000001E                M LLIM_N  ++
                          M 
00144C                    M SCN_DB_END_9:
  0000000A                M SCN_DBN ++
                      01011          ELSE
                      01012           ERROR "Improper LUMOS_CHIP_TYPE setting!"
                      01013          ENDIF
                      01014         ENDIF
00144C 9400           01015         BCF     QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
00144E 0012           01016         RETURN
                      01017 
                      01018 
                      01019 ; if standalone mode:
                      01020 ;       if L4 pressed:
                      01021 ;               reset all buttons and lights, stop scanner
                      01022 ;       if X4 pressed:
                      01023 ;               start scanning
                      01024 ;       if anything else pressed:
                      01025 ;               light up X4 to indicate player who was in first
                      01026 ;               set flag to ignore further results (or, I suppose, keep re-comparing them :)
                      01027 ;       
                      01028 
                      01029 
                      01030 
                      01031 
                      01032 ;
                      01033 ; Start scanning for button presses
                      01034 ;
                      01035 ; Resets all button timers and pressed state, starts scanning
                      01036 ; This is stopped via the QS_QUERY command.
                      01037 ; This is a global command, only recognized when sent to address 15.
                      01038 ;
001450                01039 QSCC_CMD5_START:
001450 0004           01040         CLRWDT
                      01041         CLEAR_BUTTONS 0
  00000000                M CB_IDX  SET     0
                          M         WHILE   CB_IDX < N_BUTTONS
001452 6B00               M          CLRF   BTN_X0_TIME_T+0,          BANKED
001454 6B00               M          CLRF   BTN_X0_TIME_U+0,          BANKED
001456 6B00               M          CLRF   BTN_X0_TIME_H+0,          BANKED
001458 6B00               M          CLRF   BTN_X0_TIME_L+0,          BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+0,          BANKED
                          M           CLRF  BTN_X0_LOCKTMR+0,          BANKED
                          M           CLRF  BTN_X0_DEB_TMR+0,          BANKED
                          M          ELSE
00145A 9100               M           BCF   BTN_X0_FLAGS+0,          BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000001                M CB_IDX   ++
00145C 6B00               M          CLRF   BTN_X0_TIME_T+1,          BANKED
00145E 6B00               M          CLRF   BTN_X0_TIME_U+1,          BANKED
001460 6B00               M          CLRF   BTN_X0_TIME_H+1,          BANKED
001462 6B00               M          CLRF   BTN_X0_TIME_L+1,          BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+1,          BANKED
                          M           CLRF  BTN_X0_LOCKTMR+1,          BANKED
                          M           CLRF  BTN_X0_DEB_TMR+1,          BANKED
                          M          ELSE
001464 9100               M           BCF   BTN_X0_FLAGS+1,          BTN_FLG_PRESSED, BANKED
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 81


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M          ENDIF
  00000002                M CB_IDX   ++
001466 6B00               M          CLRF   BTN_X0_TIME_T+2,          BANKED
001468 6B00               M          CLRF   BTN_X0_TIME_U+2,          BANKED
00146A 6B00               M          CLRF   BTN_X0_TIME_H+2,          BANKED
00146C 6B00               M          CLRF   BTN_X0_TIME_L+2,          BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+2,          BANKED
                          M           CLRF  BTN_X0_LOCKTMR+2,          BANKED
                          M           CLRF  BTN_X0_DEB_TMR+2,          BANKED
                          M          ELSE
00146E 9100               M           BCF   BTN_X0_FLAGS+2,          BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000003                M CB_IDX   ++
001470 6B00               M          CLRF   BTN_X0_TIME_T+3,          BANKED
001472 6B00               M          CLRF   BTN_X0_TIME_U+3,          BANKED
001474 6B00               M          CLRF   BTN_X0_TIME_H+3,          BANKED
001476 6B00               M          CLRF   BTN_X0_TIME_L+3,          BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+3,          BANKED
                          M           CLRF  BTN_X0_LOCKTMR+3,          BANKED
                          M           CLRF  BTN_X0_DEB_TMR+3,          BANKED
                          M          ELSE
001478 9100               M           BCF   BTN_X0_FLAGS+3,          BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000004                M CB_IDX   ++
00147A 6B00               M          CLRF   BTN_X0_TIME_T+4,          BANKED
00147C 6B00               M          CLRF   BTN_X0_TIME_U+4,          BANKED
00147E 6B00               M          CLRF   BTN_X0_TIME_H+4,          BANKED
001480 6B00               M          CLRF   BTN_X0_TIME_L+4,          BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+4,          BANKED
                          M           CLRF  BTN_X0_LOCKTMR+4,          BANKED
                          M           CLRF  BTN_X0_DEB_TMR+4,          BANKED
                          M          ELSE
001482 9100               M           BCF   BTN_X0_FLAGS+4,          BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000005                M CB_IDX   ++
001484 6B00               M          CLRF   BTN_X0_TIME_T+5,          BANKED
001486 6B00               M          CLRF   BTN_X0_TIME_U+5,          BANKED
001488 6B00               M          CLRF   BTN_X0_TIME_H+5,          BANKED
00148A 6B00               M          CLRF   BTN_X0_TIME_L+5,          BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+5,          BANKED
                          M           CLRF  BTN_X0_LOCKTMR+5,          BANKED
                          M           CLRF  BTN_X0_DEB_TMR+5,          BANKED
                          M          ELSE
00148C 9100               M           BCF   BTN_X0_FLAGS+5,          BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000006                M CB_IDX   ++
00148E 6B00               M          CLRF   BTN_X0_TIME_T+6,          BANKED
001490 6B00               M          CLRF   BTN_X0_TIME_U+6,          BANKED
001492 6B00               M          CLRF   BTN_X0_TIME_H+6,          BANKED
001494 6B00               M          CLRF   BTN_X0_TIME_L+6,          BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+6,          BANKED
                          M           CLRF  BTN_X0_LOCKTMR+6,          BANKED
                          M           CLRF  BTN_X0_DEB_TMR+6,          BANKED
                          M          ELSE
001496 9100               M           BCF   BTN_X0_FLAGS+6,          BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000007                M CB_IDX   ++
001498 6B00               M          CLRF   BTN_X0_TIME_T+7,          BANKED
00149A 6B00               M          CLRF   BTN_X0_TIME_U+7,          BANKED
00149C 6B00               M          CLRF   BTN_X0_TIME_H+7,          BANKED
00149E 6B00               M          CLRF   BTN_X0_TIME_L+7,          BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+7,          BANKED
                          M           CLRF  BTN_X0_LOCKTMR+7,          BANKED
                          M           CLRF  BTN_X0_DEB_TMR+7,          BANKED
                          M          ELSE
0014A0 9100               M           BCF   BTN_X0_FLAGS+7,          BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000008                M CB_IDX   ++
0014A2 6B00               M          CLRF   BTN_X0_TIME_T+8,          BANKED
0014A4 6B00               M          CLRF   BTN_X0_TIME_U+8,          BANKED
0014A6 6B00               M          CLRF   BTN_X0_TIME_H+8,          BANKED
0014A8 6B00               M          CLRF   BTN_X0_TIME_L+8,          BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+8,          BANKED
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 82


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M           CLRF  BTN_X0_LOCKTMR+8,          BANKED
                          M           CLRF  BTN_X0_DEB_TMR+8,          BANKED
                          M          ELSE
0014AA 9100               M           BCF   BTN_X0_FLAGS+8,          BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000009                M CB_IDX   ++
0014AC 6B00               M          CLRF   BTN_X0_TIME_T+9,          BANKED
0014AE 6B00               M          CLRF   BTN_X0_TIME_U+9,          BANKED
0014B0 6B00               M          CLRF   BTN_X0_TIME_H+9,          BANKED
0014B2 6B00               M          CLRF   BTN_X0_TIME_L+9,          BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+9,          BANKED
                          M           CLRF  BTN_X0_LOCKTMR+9,          BANKED
                          M           CLRF  BTN_X0_DEB_TMR+9,          BANKED
                          M          ELSE
0014B4 9100               M           BCF   BTN_X0_FLAGS+9,          BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  0000000A                M CB_IDX   ++
                          M         ENDW
0014B6 8000           01042         BSF     QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
                      01043         ; start timer
0014B8 6A00           01044         CLRF    QS_BTN_TMR_T, ACCESS
0014BA 6A00           01045         CLRF    QS_BTN_TMR_U, ACCESS
0014BC 6ACF           01046         CLRF    TMR1H, ACCESS
0014BE 6ACE           01047         CLRF    TMR1L, ACCESS
0014C0 909E           01048         BCF     PIR1, TMR1IF, ACCESS
0014C2 809F           01049         BSF     IPR1, TMR1IP, ACCESS
0014C4 809D           01050         BSF     PIE1, TMR1IE, ACCESS
0014C6 80CD           01051         BSF     T1CON, TMR1ON, ACCESS
                      01052         ; light up non-masked buttons
0014C8 D???           01053         RCALL   SET_ALL_BUTTON_LIGHTS
0014CA 0012           01054         RETURN
                      01055 
0014CC                01056 SET_ALL_BUTTON_LIGHTS:
0014CC 0004           01057         CLRWDT
0014CE 010C           01058         BANKSEL QUIZSHOW_DATA
                      01059         IF LUMOS_CHIP_TYPE == LUMOS_CHIP_QSCC
                      01060          LOCAL_LIGHT_INDICATOR BTN_IDX_X0, CHAN_X0R, 3, CHAN_X0R
                      01061          LOCAL_LIGHT_INDICATOR BTN_IDX_L0, CHAN_L0R, 2, CHAN_L0R
                      01062          LOCAL_LIGHT_INDICATOR BTN_IDX_A0, CHAN_A0L, 1, CHAN_A0L
                      01063          LOCAL_LIGHT_INDICATOR BTN_IDX_B0, CHAN_B0L, 1, CHAN_B0L
                      01064          LOCAL_LIGHT_INDICATOR BTN_IDX_C0, CHAN_C0L, 1, CHAN_C0L
                      01065          LOCAL_LIGHT_INDICATOR BTN_IDX_D0, CHAN_D0L, 1, CHAN_D0L
                      01066         ELSE
                      01067          IF LUMOS_CHIP_TYPE == LUMOS_CHIP_QSRC
                      01068           LOCAL_LIGHT_INDICATOR BTN_IDX_X0, CHAN_X0R, 3, CHAN_X0R
0014D0 010C               M         BANKSEL QUIZSHOW_DATA
0014D2 A500               M         BTFSS   BTN_X0_FLAGS+0,           BTN_FLG_LOCKED, BANKED
0014D4 D???               M         BRA     LLIM_NOT_LOCKED_30
0014D6 B900               M         BTFSC   BTN_X0_FLAGS+0,           BTN_FLG_LCK_ACK, BANKED
0014D8 D???               M         BRA     LLIM_NOT_LOCKED_30
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
0014DA 8900               M         BSF     BTN_X0_FLAGS+0,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 2
                          M          SET_SSR_VALUE 2,   0
0014DC 0104               M         BANKSEL SSR_DATA_BANK
0014DE 0E00               M          MOVLW  0
0014E0 6F00               M          MOVWF  SSR_00_VALUE+2,   BANKED
0014E2 6B00               M          CLRF   SSR_00_STEP+2,   BANKED
0014E4 6B00               M          CLRF   SSR_00_SPEED+2,   BANKED
0014E6 6B00               M          CLRF   SSR_00_COUNTER+2,   BANKED
0014E8 6B00               M          CLRF   SSR_00_FLAGS+2,   BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 1
                          M          SET_SSR_VALUE 1,   0
0014EA 0104               M         BANKSEL SSR_DATA_BANK
0014EC 0E00               M          MOVLW  0
0014EE 6F00               M          MOVWF  SSR_00_VALUE+1,   BANKED
0014F0 6B00               M          CLRF   SSR_00_STEP+1,   BANKED
0014F2 6B00               M          CLRF   SSR_00_SPEED+1,   BANKED
0014F4 6B00               M          CLRF   SSR_00_COUNTER+1,   BANKED
0014F6 6B00               M          CLRF   SSR_00_FLAGS+1,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 0
                          M          SET_SSR_VALUE 0,   0
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 83


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0014F8 0104               M         BANKSEL SSR_DATA_BANK
0014FA 0E00               M          MOVLW  0
0014FC 6F00               M          MOVWF  SSR_00_VALUE+0,   BANKED
0014FE 6B00               M          CLRF   SSR_00_STEP+0,   BANKED
001500 6B00               M          CLRF   SSR_00_SPEED+0,   BANKED
001502 6B00               M          CLRF   SSR_00_COUNTER+0,   BANKED
001504 6B00               M          CLRF   SSR_00_FLAGS+0,   BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_X0R
                          M          SET_SSR_PATTERN CHAN_X0R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
001506 0104               M         BANKSEL SSR_DATA_BANK
001508 0E00               M          MOVLW  0
00150A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
00150C 0E04               M          MOVLW  4
00150E 6F00               M          MOVWF  SSR_00_STEP+CHAN_X0R, BANKED
001510 0E01               M          MOVLW  1
001512 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X0R, BANKED
001514 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X0R, BANKED
001516 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
001518 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X0R, BANKED
00151A D???               M         BRA     LLIM_END_30
                          M 
00151C                    M LLIM_NOT_LOCKED_30:
00151C B300               M         BTFSC   BTN_X0_FLAGS+0,           BTN_FLG_MASKED, BANKED
00151E D???               M         BRA     LLIM_OFF_30
001520 B100               M         BTFSC   BTN_X0_FLAGS+0,           BTN_FLG_PRESSED, BANKED
001522 D???               M         BRA     LLIM_OFF_30
001524 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
001526 D???               M         BRA     LLIM_OFF_30
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_STEADY 2
                          M          SET_SSR_VALUE 2,   255
001528 0104               M         BANKSEL SSR_DATA_BANK
00152A 0EFF               M          MOVLW  255
00152C 6F00               M          MOVWF  SSR_00_VALUE+2,   BANKED
00152E 6B00               M          CLRF   SSR_00_STEP+2,   BANKED
001530 6B00               M          CLRF   SSR_00_SPEED+2,   BANKED
001532 6B00               M          CLRF   SSR_00_COUNTER+2,   BANKED
001534 6B00               M          CLRF   SSR_00_FLAGS+2,   BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_STEADY 1
                          M          SET_SSR_VALUE 1,   255
001536 0104               M         BANKSEL SSR_DATA_BANK
001538 0EFF               M          MOVLW  255
00153A 6F00               M          MOVWF  SSR_00_VALUE+1,   BANKED
00153C 6B00               M          CLRF   SSR_00_STEP+1,   BANKED
00153E 6B00               M          CLRF   SSR_00_SPEED+1,   BANKED
001540 6B00               M          CLRF   SSR_00_COUNTER+1,   BANKED
001542 6B00               M          CLRF   SSR_00_FLAGS+1,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 0
                          M          SET_SSR_VALUE 0,   255
001544 0104               M         BANKSEL SSR_DATA_BANK
001546 0EFF               M          MOVLW  255
001548 6F00               M          MOVWF  SSR_00_VALUE+0,   BANKED
00154A 6B00               M          CLRF   SSR_00_STEP+0,   BANKED
00154C 6B00               M          CLRF   SSR_00_SPEED+0,   BANKED
00154E 6B00               M          CLRF   SSR_00_COUNTER+0,   BANKED
001550 6B00               M          CLRF   SSR_00_FLAGS+0,   BANKED
                          M         ENDW
001552 D???               M         BRA     LLIM_END_30
                          M         
001554                    M LLIM_OFF_30:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 2
                          M          SET_SSR_VALUE 2,   0
001554 0104               M         BANKSEL SSR_DATA_BANK
001556 0E00               M          MOVLW  0
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 84


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001558 6F00               M          MOVWF  SSR_00_VALUE+2,   BANKED
00155A 6B00               M          CLRF   SSR_00_STEP+2,   BANKED
00155C 6B00               M          CLRF   SSR_00_SPEED+2,   BANKED
00155E 6B00               M          CLRF   SSR_00_COUNTER+2,   BANKED
001560 6B00               M          CLRF   SSR_00_FLAGS+2,   BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 1
                          M          SET_SSR_VALUE 1,   0
001562 0104               M         BANKSEL SSR_DATA_BANK
001564 0E00               M          MOVLW  0
001566 6F00               M          MOVWF  SSR_00_VALUE+1,   BANKED
001568 6B00               M          CLRF   SSR_00_STEP+1,   BANKED
00156A 6B00               M          CLRF   SSR_00_SPEED+1,   BANKED
00156C 6B00               M          CLRF   SSR_00_COUNTER+1,   BANKED
00156E 6B00               M          CLRF   SSR_00_FLAGS+1,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 0
                          M          SET_SSR_VALUE 0,   0
001570 0104               M         BANKSEL SSR_DATA_BANK
001572 0E00               M          MOVLW  0
001574 6F00               M          MOVWF  SSR_00_VALUE+0,   BANKED
001576 6B00               M          CLRF   SSR_00_STEP+0,   BANKED
001578 6B00               M          CLRF   SSR_00_SPEED+0,   BANKED
00157A 6B00               M          CLRF   SSR_00_COUNTER+0,   BANKED
00157C 6B00               M          CLRF   SSR_00_FLAGS+0,   BANKED
                          M         ENDW
                          M 
00157E                    M LLIM_END_30:
00157E 010C               M         BANKSEL QUIZSHOW_DATA
  0000001F                M LLIM_N  ++
                      01069           LOCAL_LIGHT_INDICATOR BTN_IDX_L0, CHAN_L0R, 1, CHAN_L0R
001580 010C               M         BANKSEL QUIZSHOW_DATA
001582 A500               M         BTFSS   BTN_X0_FLAGS+1,           BTN_FLG_LOCKED, BANKED
001584 D???               M         BRA     LLIM_NOT_LOCKED_31
001586 B900               M         BTFSC   BTN_X0_FLAGS+1,           BTN_FLG_LCK_ACK, BANKED
001588 D???               M         BRA     LLIM_NOT_LOCKED_31
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
00158A 8900               M         BSF     BTN_X0_FLAGS+1,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 3
                          M          SET_SSR_VALUE 3,   0
00158C 0104               M         BANKSEL SSR_DATA_BANK
00158E 0E00               M          MOVLW  0
001590 6F00               M          MOVWF  SSR_00_VALUE+3,   BANKED
001592 6B00               M          CLRF   SSR_00_STEP+3,   BANKED
001594 6B00               M          CLRF   SSR_00_SPEED+3,   BANKED
001596 6B00               M          CLRF   SSR_00_COUNTER+3,   BANKED
001598 6B00               M          CLRF   SSR_00_FLAGS+3,   BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_L0R
                          M          SET_SSR_PATTERN CHAN_L0R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
00159A 0104               M         BANKSEL SSR_DATA_BANK
00159C 0E00               M          MOVLW  0
00159E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
0015A0 0E04               M          MOVLW  4
0015A2 6F00               M          MOVWF  SSR_00_STEP+CHAN_L0R, BANKED
0015A4 0E01               M          MOVLW  1
0015A6 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L0R, BANKED
0015A8 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L0R, BANKED
0015AA 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0015AC 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L0R, BANKED
0015AE D???               M         BRA     LLIM_END_31
                          M 
0015B0                    M LLIM_NOT_LOCKED_31:
0015B0 B300               M         BTFSC   BTN_X0_FLAGS+1,           BTN_FLG_MASKED, BANKED
0015B2 D???               M         BRA     LLIM_OFF_31
0015B4 B100               M         BTFSC   BTN_X0_FLAGS+1,           BTN_FLG_PRESSED, BANKED
0015B6 D???               M         BRA     LLIM_OFF_31
0015B8 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0015BA D???               M         BRA     LLIM_OFF_31
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 85


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M          SET_SSR_STEADY 3
                          M          SET_SSR_VALUE 3,   255
0015BC 0104               M         BANKSEL SSR_DATA_BANK
0015BE 0EFF               M          MOVLW  255
0015C0 6F00               M          MOVWF  SSR_00_VALUE+3,   BANKED
0015C2 6B00               M          CLRF   SSR_00_STEP+3,   BANKED
0015C4 6B00               M          CLRF   SSR_00_SPEED+3,   BANKED
0015C6 6B00               M          CLRF   SSR_00_COUNTER+3,   BANKED
0015C8 6B00               M          CLRF   SSR_00_FLAGS+3,   BANKED
                          M         ENDW
0015CA D???               M         BRA     LLIM_END_31
                          M         
0015CC                    M LLIM_OFF_31:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 3
                          M          SET_SSR_VALUE 3,   0
0015CC 0104               M         BANKSEL SSR_DATA_BANK
0015CE 0E00               M          MOVLW  0
0015D0 6F00               M          MOVWF  SSR_00_VALUE+3,   BANKED
0015D2 6B00               M          CLRF   SSR_00_STEP+3,   BANKED
0015D4 6B00               M          CLRF   SSR_00_SPEED+3,   BANKED
0015D6 6B00               M          CLRF   SSR_00_COUNTER+3,   BANKED
0015D8 6B00               M          CLRF   SSR_00_FLAGS+3,   BANKED
                          M         ENDW
                          M 
0015DA                    M LLIM_END_31:
0015DA 010C               M         BANKSEL QUIZSHOW_DATA
  00000020                M LLIM_N  ++
                      01070           LOCAL_LIGHT_INDICATOR BTN_IDX_X1, CHAN_X1R, 3, CHAN_X1R
0015DC 010C               M         BANKSEL QUIZSHOW_DATA
0015DE A500               M         BTFSS   BTN_X0_FLAGS+2,           BTN_FLG_LOCKED, BANKED
0015E0 D???               M         BRA     LLIM_NOT_LOCKED_32
0015E2 B900               M         BTFSC   BTN_X0_FLAGS+2,           BTN_FLG_LCK_ACK, BANKED
0015E4 D???               M         BRA     LLIM_NOT_LOCKED_32
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
0015E6 8900               M         BSF     BTN_X0_FLAGS+2,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 6
                          M          SET_SSR_VALUE 6,   0
0015E8 0104               M         BANKSEL SSR_DATA_BANK
0015EA 0E00               M          MOVLW  0
0015EC 6F00               M          MOVWF  SSR_00_VALUE+6,   BANKED
0015EE 6B00               M          CLRF   SSR_00_STEP+6,   BANKED
0015F0 6B00               M          CLRF   SSR_00_SPEED+6,   BANKED
0015F2 6B00               M          CLRF   SSR_00_COUNTER+6,   BANKED
0015F4 6B00               M          CLRF   SSR_00_FLAGS+6,   BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 5
                          M          SET_SSR_VALUE 5,   0
0015F6 0104               M         BANKSEL SSR_DATA_BANK
0015F8 0E00               M          MOVLW  0
0015FA 6F00               M          MOVWF  SSR_00_VALUE+5,   BANKED
0015FC 6B00               M          CLRF   SSR_00_STEP+5,   BANKED
0015FE 6B00               M          CLRF   SSR_00_SPEED+5,   BANKED
001600 6B00               M          CLRF   SSR_00_COUNTER+5,   BANKED
001602 6B00               M          CLRF   SSR_00_FLAGS+5,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 4
                          M          SET_SSR_VALUE 4,   0
001604 0104               M         BANKSEL SSR_DATA_BANK
001606 0E00               M          MOVLW  0
001608 6F00               M          MOVWF  SSR_00_VALUE+4,   BANKED
00160A 6B00               M          CLRF   SSR_00_STEP+4,   BANKED
00160C 6B00               M          CLRF   SSR_00_SPEED+4,   BANKED
00160E 6B00               M          CLRF   SSR_00_COUNTER+4,   BANKED
001610 6B00               M          CLRF   SSR_00_FLAGS+4,   BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_X1R
                          M          SET_SSR_PATTERN CHAN_X1R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 86


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001612 0104               M         BANKSEL SSR_DATA_BANK
001614 0E00               M          MOVLW  0
001616 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
001618 0E04               M          MOVLW  4
00161A 6F00               M          MOVWF  SSR_00_STEP+CHAN_X1R, BANKED
00161C 0E01               M          MOVLW  1
00161E 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X1R, BANKED
001620 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X1R, BANKED
001622 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
001624 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X1R, BANKED
001626 D???               M         BRA     LLIM_END_32
                          M 
001628                    M LLIM_NOT_LOCKED_32:
001628 B300               M         BTFSC   BTN_X0_FLAGS+2,           BTN_FLG_MASKED, BANKED
00162A D???               M         BRA     LLIM_OFF_32
00162C B100               M         BTFSC   BTN_X0_FLAGS+2,           BTN_FLG_PRESSED, BANKED
00162E D???               M         BRA     LLIM_OFF_32
001630 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
001632 D???               M         BRA     LLIM_OFF_32
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_STEADY 6
                          M          SET_SSR_VALUE 6,   255
001634 0104               M         BANKSEL SSR_DATA_BANK
001636 0EFF               M          MOVLW  255
001638 6F00               M          MOVWF  SSR_00_VALUE+6,   BANKED
00163A 6B00               M          CLRF   SSR_00_STEP+6,   BANKED
00163C 6B00               M          CLRF   SSR_00_SPEED+6,   BANKED
00163E 6B00               M          CLRF   SSR_00_COUNTER+6,   BANKED
001640 6B00               M          CLRF   SSR_00_FLAGS+6,   BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_STEADY 5
                          M          SET_SSR_VALUE 5,   255
001642 0104               M         BANKSEL SSR_DATA_BANK
001644 0EFF               M          MOVLW  255
001646 6F00               M          MOVWF  SSR_00_VALUE+5,   BANKED
001648 6B00               M          CLRF   SSR_00_STEP+5,   BANKED
00164A 6B00               M          CLRF   SSR_00_SPEED+5,   BANKED
00164C 6B00               M          CLRF   SSR_00_COUNTER+5,   BANKED
00164E 6B00               M          CLRF   SSR_00_FLAGS+5,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 4
                          M          SET_SSR_VALUE 4,   255
001650 0104               M         BANKSEL SSR_DATA_BANK
001652 0EFF               M          MOVLW  255
001654 6F00               M          MOVWF  SSR_00_VALUE+4,   BANKED
001656 6B00               M          CLRF   SSR_00_STEP+4,   BANKED
001658 6B00               M          CLRF   SSR_00_SPEED+4,   BANKED
00165A 6B00               M          CLRF   SSR_00_COUNTER+4,   BANKED
00165C 6B00               M          CLRF   SSR_00_FLAGS+4,   BANKED
                          M         ENDW
00165E D???               M         BRA     LLIM_END_32
                          M         
001660                    M LLIM_OFF_32:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 6
                          M          SET_SSR_VALUE 6,   0
001660 0104               M         BANKSEL SSR_DATA_BANK
001662 0E00               M          MOVLW  0
001664 6F00               M          MOVWF  SSR_00_VALUE+6,   BANKED
001666 6B00               M          CLRF   SSR_00_STEP+6,   BANKED
001668 6B00               M          CLRF   SSR_00_SPEED+6,   BANKED
00166A 6B00               M          CLRF   SSR_00_COUNTER+6,   BANKED
00166C 6B00               M          CLRF   SSR_00_FLAGS+6,   BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 5
                          M          SET_SSR_VALUE 5,   0
00166E 0104               M         BANKSEL SSR_DATA_BANK
001670 0E00               M          MOVLW  0
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 87


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001672 6F00               M          MOVWF  SSR_00_VALUE+5,   BANKED
001674 6B00               M          CLRF   SSR_00_STEP+5,   BANKED
001676 6B00               M          CLRF   SSR_00_SPEED+5,   BANKED
001678 6B00               M          CLRF   SSR_00_COUNTER+5,   BANKED
00167A 6B00               M          CLRF   SSR_00_FLAGS+5,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 4
                          M          SET_SSR_VALUE 4,   0
00167C 0104               M         BANKSEL SSR_DATA_BANK
00167E 0E00               M          MOVLW  0
001680 6F00               M          MOVWF  SSR_00_VALUE+4,   BANKED
001682 6B00               M          CLRF   SSR_00_STEP+4,   BANKED
001684 6B00               M          CLRF   SSR_00_SPEED+4,   BANKED
001686 6B00               M          CLRF   SSR_00_COUNTER+4,   BANKED
001688 6B00               M          CLRF   SSR_00_FLAGS+4,   BANKED
                          M         ENDW
                          M 
00168A                    M LLIM_END_32:
00168A 010C               M         BANKSEL QUIZSHOW_DATA
  00000021                M LLIM_N  ++
                      01071           LOCAL_LIGHT_INDICATOR BTN_IDX_L1, CHAN_L1R, 1, CHAN_L1R
00168C 010C               M         BANKSEL QUIZSHOW_DATA
00168E A500               M         BTFSS   BTN_X0_FLAGS+3,           BTN_FLG_LOCKED, BANKED
001690 D???               M         BRA     LLIM_NOT_LOCKED_33
001692 B900               M         BTFSC   BTN_X0_FLAGS+3,           BTN_FLG_LCK_ACK, BANKED
001694 D???               M         BRA     LLIM_NOT_LOCKED_33
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
001696 8900               M         BSF     BTN_X0_FLAGS+3,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 7
                          M          SET_SSR_VALUE 7,   0
001698 0104               M         BANKSEL SSR_DATA_BANK
00169A 0E00               M          MOVLW  0
00169C 6F00               M          MOVWF  SSR_00_VALUE+7,   BANKED
00169E 6B00               M          CLRF   SSR_00_STEP+7,   BANKED
0016A0 6B00               M          CLRF   SSR_00_SPEED+7,   BANKED
0016A2 6B00               M          CLRF   SSR_00_COUNTER+7,   BANKED
0016A4 6B00               M          CLRF   SSR_00_FLAGS+7,   BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_L1R
                          M          SET_SSR_PATTERN CHAN_L1R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0016A6 0104               M         BANKSEL SSR_DATA_BANK
0016A8 0E00               M          MOVLW  0
0016AA 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
0016AC 0E04               M          MOVLW  4
0016AE 6F00               M          MOVWF  SSR_00_STEP+CHAN_L1R, BANKED
0016B0 0E01               M          MOVLW  1
0016B2 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L1R, BANKED
0016B4 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L1R, BANKED
0016B6 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0016B8 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L1R, BANKED
0016BA D???               M         BRA     LLIM_END_33
                          M 
0016BC                    M LLIM_NOT_LOCKED_33:
0016BC B300               M         BTFSC   BTN_X0_FLAGS+3,           BTN_FLG_MASKED, BANKED
0016BE D???               M         BRA     LLIM_OFF_33
0016C0 B100               M         BTFSC   BTN_X0_FLAGS+3,           BTN_FLG_PRESSED, BANKED
0016C2 D???               M         BRA     LLIM_OFF_33
0016C4 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0016C6 D???               M         BRA     LLIM_OFF_33
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 7
                          M          SET_SSR_VALUE 7,   255
0016C8 0104               M         BANKSEL SSR_DATA_BANK
0016CA 0EFF               M          MOVLW  255
0016CC 6F00               M          MOVWF  SSR_00_VALUE+7,   BANKED
0016CE 6B00               M          CLRF   SSR_00_STEP+7,   BANKED
0016D0 6B00               M          CLRF   SSR_00_SPEED+7,   BANKED
0016D2 6B00               M          CLRF   SSR_00_COUNTER+7,   BANKED
0016D4 6B00               M          CLRF   SSR_00_FLAGS+7,   BANKED
                          M         ENDW
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 88


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0016D6 D???               M         BRA     LLIM_END_33
                          M         
0016D8                    M LLIM_OFF_33:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 7
                          M          SET_SSR_VALUE 7,   0
0016D8 0104               M         BANKSEL SSR_DATA_BANK
0016DA 0E00               M          MOVLW  0
0016DC 6F00               M          MOVWF  SSR_00_VALUE+7,   BANKED
0016DE 6B00               M          CLRF   SSR_00_STEP+7,   BANKED
0016E0 6B00               M          CLRF   SSR_00_SPEED+7,   BANKED
0016E2 6B00               M          CLRF   SSR_00_COUNTER+7,   BANKED
0016E4 6B00               M          CLRF   SSR_00_FLAGS+7,   BANKED
                          M         ENDW
                          M 
0016E6                    M LLIM_END_33:
0016E6 010C               M         BANKSEL QUIZSHOW_DATA
  00000022                M LLIM_N  ++
                      01072           LOCAL_LIGHT_INDICATOR BTN_IDX_X2, CHAN_X2R, 3, CHAN_X2R
0016E8 010C               M         BANKSEL QUIZSHOW_DATA
0016EA A500               M         BTFSS   BTN_X0_FLAGS+4,           BTN_FLG_LOCKED, BANKED
0016EC D???               M         BRA     LLIM_NOT_LOCKED_34
0016EE B900               M         BTFSC   BTN_X0_FLAGS+4,           BTN_FLG_LCK_ACK, BANKED
0016F0 D???               M         BRA     LLIM_NOT_LOCKED_34
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
0016F2 8900               M         BSF     BTN_X0_FLAGS+4,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 10
                          M          SET_SSR_VALUE 10,  0
0016F4 0104               M         BANKSEL SSR_DATA_BANK
0016F6 0E00               M          MOVLW  0
0016F8 6F00               M          MOVWF  SSR_00_VALUE+10,  BANKED
0016FA 6B00               M          CLRF   SSR_00_STEP+10,  BANKED
0016FC 6B00               M          CLRF   SSR_00_SPEED+10,  BANKED
0016FE 6B00               M          CLRF   SSR_00_COUNTER+10,  BANKED
001700 6B00               M          CLRF   SSR_00_FLAGS+10,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 9
                          M          SET_SSR_VALUE 9,   0
001702 0104               M         BANKSEL SSR_DATA_BANK
001704 0E00               M          MOVLW  0
001706 6F00               M          MOVWF  SSR_00_VALUE+9,   BANKED
001708 6B00               M          CLRF   SSR_00_STEP+9,   BANKED
00170A 6B00               M          CLRF   SSR_00_SPEED+9,   BANKED
00170C 6B00               M          CLRF   SSR_00_COUNTER+9,   BANKED
00170E 6B00               M          CLRF   SSR_00_FLAGS+9,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 8
                          M          SET_SSR_VALUE 8,   0
001710 0104               M         BANKSEL SSR_DATA_BANK
001712 0E00               M          MOVLW  0
001714 6F00               M          MOVWF  SSR_00_VALUE+8,   BANKED
001716 6B00               M          CLRF   SSR_00_STEP+8,   BANKED
001718 6B00               M          CLRF   SSR_00_SPEED+8,   BANKED
00171A 6B00               M          CLRF   SSR_00_COUNTER+8,   BANKED
00171C 6B00               M          CLRF   SSR_00_FLAGS+8,   BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_X2R
                          M          SET_SSR_PATTERN CHAN_X2R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
00171E 0104               M         BANKSEL SSR_DATA_BANK
001720 0E00               M          MOVLW  0
001722 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
001724 0E04               M          MOVLW  4
001726 6F00               M          MOVWF  SSR_00_STEP+CHAN_X2R, BANKED
001728 0E01               M          MOVLW  1
00172A 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X2R, BANKED
00172C 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X2R, BANKED
00172E 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
001730 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X2R, BANKED
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 89


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001732 D???               M         BRA     LLIM_END_34
                          M 
001734                    M LLIM_NOT_LOCKED_34:
001734 B300               M         BTFSC   BTN_X0_FLAGS+4,           BTN_FLG_MASKED, BANKED
001736 D???               M         BRA     LLIM_OFF_34
001738 B100               M         BTFSC   BTN_X0_FLAGS+4,           BTN_FLG_PRESSED, BANKED
00173A D???               M         BRA     LLIM_OFF_34
00173C A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
00173E D???               M         BRA     LLIM_OFF_34
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_STEADY 10
                          M          SET_SSR_VALUE 10,  255
001740 0104               M         BANKSEL SSR_DATA_BANK
001742 0EFF               M          MOVLW  255
001744 6F00               M          MOVWF  SSR_00_VALUE+10,  BANKED
001746 6B00               M          CLRF   SSR_00_STEP+10,  BANKED
001748 6B00               M          CLRF   SSR_00_SPEED+10,  BANKED
00174A 6B00               M          CLRF   SSR_00_COUNTER+10,  BANKED
00174C 6B00               M          CLRF   SSR_00_FLAGS+10,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_STEADY 9
                          M          SET_SSR_VALUE 9,   255
00174E 0104               M         BANKSEL SSR_DATA_BANK
001750 0EFF               M          MOVLW  255
001752 6F00               M          MOVWF  SSR_00_VALUE+9,   BANKED
001754 6B00               M          CLRF   SSR_00_STEP+9,   BANKED
001756 6B00               M          CLRF   SSR_00_SPEED+9,   BANKED
001758 6B00               M          CLRF   SSR_00_COUNTER+9,   BANKED
00175A 6B00               M          CLRF   SSR_00_FLAGS+9,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 8
                          M          SET_SSR_VALUE 8,   255
00175C 0104               M         BANKSEL SSR_DATA_BANK
00175E 0EFF               M          MOVLW  255
001760 6F00               M          MOVWF  SSR_00_VALUE+8,   BANKED
001762 6B00               M          CLRF   SSR_00_STEP+8,   BANKED
001764 6B00               M          CLRF   SSR_00_SPEED+8,   BANKED
001766 6B00               M          CLRF   SSR_00_COUNTER+8,   BANKED
001768 6B00               M          CLRF   SSR_00_FLAGS+8,   BANKED
                          M         ENDW
00176A D???               M         BRA     LLIM_END_34
                          M         
00176C                    M LLIM_OFF_34:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 10
                          M          SET_SSR_VALUE 10,  0
00176C 0104               M         BANKSEL SSR_DATA_BANK
00176E 0E00               M          MOVLW  0
001770 6F00               M          MOVWF  SSR_00_VALUE+10,  BANKED
001772 6B00               M          CLRF   SSR_00_STEP+10,  BANKED
001774 6B00               M          CLRF   SSR_00_SPEED+10,  BANKED
001776 6B00               M          CLRF   SSR_00_COUNTER+10,  BANKED
001778 6B00               M          CLRF   SSR_00_FLAGS+10,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 9
                          M          SET_SSR_VALUE 9,   0
00177A 0104               M         BANKSEL SSR_DATA_BANK
00177C 0E00               M          MOVLW  0
00177E 6F00               M          MOVWF  SSR_00_VALUE+9,   BANKED
001780 6B00               M          CLRF   SSR_00_STEP+9,   BANKED
001782 6B00               M          CLRF   SSR_00_SPEED+9,   BANKED
001784 6B00               M          CLRF   SSR_00_COUNTER+9,   BANKED
001786 6B00               M          CLRF   SSR_00_FLAGS+9,   BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 8
                          M          SET_SSR_VALUE 8,   0
001788 0104               M         BANKSEL SSR_DATA_BANK
00178A 0E00               M          MOVLW  0
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 90


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00178C 6F00               M          MOVWF  SSR_00_VALUE+8,   BANKED
00178E 6B00               M          CLRF   SSR_00_STEP+8,   BANKED
001790 6B00               M          CLRF   SSR_00_SPEED+8,   BANKED
001792 6B00               M          CLRF   SSR_00_COUNTER+8,   BANKED
001794 6B00               M          CLRF   SSR_00_FLAGS+8,   BANKED
                          M         ENDW
                          M 
001796                    M LLIM_END_34:
001796 010C               M         BANKSEL QUIZSHOW_DATA
  00000023                M LLIM_N  ++
                      01073           LOCAL_LIGHT_INDICATOR BTN_IDX_L2, CHAN_L2R, 1, CHAN_L2R
001798 010C               M         BANKSEL QUIZSHOW_DATA
00179A A500               M         BTFSS   BTN_X0_FLAGS+5,           BTN_FLG_LOCKED, BANKED
00179C D???               M         BRA     LLIM_NOT_LOCKED_35
00179E B900               M         BTFSC   BTN_X0_FLAGS+5,           BTN_FLG_LCK_ACK, BANKED
0017A0 D???               M         BRA     LLIM_NOT_LOCKED_35
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
0017A2 8900               M         BSF     BTN_X0_FLAGS+5,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 11
                          M          SET_SSR_VALUE 11,  0
0017A4 0104               M         BANKSEL SSR_DATA_BANK
0017A6 0E00               M          MOVLW  0
0017A8 6F00               M          MOVWF  SSR_00_VALUE+11,  BANKED
0017AA 6B00               M          CLRF   SSR_00_STEP+11,  BANKED
0017AC 6B00               M          CLRF   SSR_00_SPEED+11,  BANKED
0017AE 6B00               M          CLRF   SSR_00_COUNTER+11,  BANKED
0017B0 6B00               M          CLRF   SSR_00_FLAGS+11,  BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_L2R
                          M          SET_SSR_PATTERN CHAN_L2R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0017B2 0104               M         BANKSEL SSR_DATA_BANK
0017B4 0E00               M          MOVLW  0
0017B6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
0017B8 0E04               M          MOVLW  4
0017BA 6F00               M          MOVWF  SSR_00_STEP+CHAN_L2R, BANKED
0017BC 0E01               M          MOVLW  1
0017BE 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L2R, BANKED
0017C0 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L2R, BANKED
0017C2 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0017C4 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L2R, BANKED
0017C6 D???               M         BRA     LLIM_END_35
                          M 
0017C8                    M LLIM_NOT_LOCKED_35:
0017C8 B300               M         BTFSC   BTN_X0_FLAGS+5,           BTN_FLG_MASKED, BANKED
0017CA D???               M         BRA     LLIM_OFF_35
0017CC B100               M         BTFSC   BTN_X0_FLAGS+5,           BTN_FLG_PRESSED, BANKED
0017CE D???               M         BRA     LLIM_OFF_35
0017D0 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0017D2 D???               M         BRA     LLIM_OFF_35
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 11
                          M          SET_SSR_VALUE 11,  255
0017D4 0104               M         BANKSEL SSR_DATA_BANK
0017D6 0EFF               M          MOVLW  255
0017D8 6F00               M          MOVWF  SSR_00_VALUE+11,  BANKED
0017DA 6B00               M          CLRF   SSR_00_STEP+11,  BANKED
0017DC 6B00               M          CLRF   SSR_00_SPEED+11,  BANKED
0017DE 6B00               M          CLRF   SSR_00_COUNTER+11,  BANKED
0017E0 6B00               M          CLRF   SSR_00_FLAGS+11,  BANKED
                          M         ENDW
0017E2 D???               M         BRA     LLIM_END_35
                          M         
0017E4                    M LLIM_OFF_35:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 91


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 11
                          M          SET_SSR_VALUE 11,  0
0017E4 0104               M         BANKSEL SSR_DATA_BANK
0017E6 0E00               M          MOVLW  0
0017E8 6F00               M          MOVWF  SSR_00_VALUE+11,  BANKED
0017EA 6B00               M          CLRF   SSR_00_STEP+11,  BANKED
0017EC 6B00               M          CLRF   SSR_00_SPEED+11,  BANKED
0017EE 6B00               M          CLRF   SSR_00_COUNTER+11,  BANKED
0017F0 6B00               M          CLRF   SSR_00_FLAGS+11,  BANKED
                          M         ENDW
                          M 
0017F2                    M LLIM_END_35:
0017F2 010C               M         BANKSEL QUIZSHOW_DATA
  00000024                M LLIM_N  ++
                      01074           LOCAL_LIGHT_INDICATOR BTN_IDX_X3, CHAN_X3R, 3, CHAN_X3R
0017F4 010C               M         BANKSEL QUIZSHOW_DATA
0017F6 A500               M         BTFSS   BTN_X0_FLAGS+6,           BTN_FLG_LOCKED, BANKED
0017F8 D???               M         BRA     LLIM_NOT_LOCKED_36
0017FA B900               M         BTFSC   BTN_X0_FLAGS+6,           BTN_FLG_LCK_ACK, BANKED
0017FC D???               M         BRA     LLIM_NOT_LOCKED_36
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
0017FE 8900               M         BSF     BTN_X0_FLAGS+6,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 14
                          M          SET_SSR_VALUE 14,  0
001800 0104               M         BANKSEL SSR_DATA_BANK
001802 0E00               M          MOVLW  0
001804 6F00               M          MOVWF  SSR_00_VALUE+14,  BANKED
001806 6B00               M          CLRF   SSR_00_STEP+14,  BANKED
001808 6B00               M          CLRF   SSR_00_SPEED+14,  BANKED
00180A 6B00               M          CLRF   SSR_00_COUNTER+14,  BANKED
00180C 6B00               M          CLRF   SSR_00_FLAGS+14,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 13
                          M          SET_SSR_VALUE 13,  0
00180E 0104               M         BANKSEL SSR_DATA_BANK
001810 0E00               M          MOVLW  0
001812 6F00               M          MOVWF  SSR_00_VALUE+13,  BANKED
001814 6B00               M          CLRF   SSR_00_STEP+13,  BANKED
001816 6B00               M          CLRF   SSR_00_SPEED+13,  BANKED
001818 6B00               M          CLRF   SSR_00_COUNTER+13,  BANKED
00181A 6B00               M          CLRF   SSR_00_FLAGS+13,  BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 12
                          M          SET_SSR_VALUE 12,  0
00181C 0104               M         BANKSEL SSR_DATA_BANK
00181E 0E00               M          MOVLW  0
001820 6F00               M          MOVWF  SSR_00_VALUE+12,  BANKED
001822 6B00               M          CLRF   SSR_00_STEP+12,  BANKED
001824 6B00               M          CLRF   SSR_00_SPEED+12,  BANKED
001826 6B00               M          CLRF   SSR_00_COUNTER+12,  BANKED
001828 6B00               M          CLRF   SSR_00_FLAGS+12,  BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_X3R
                          M          SET_SSR_PATTERN CHAN_X3R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
00182A 0104               M         BANKSEL SSR_DATA_BANK
00182C 0E00               M          MOVLW  0
00182E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
001830 0E04               M          MOVLW  4
001832 6F00               M          MOVWF  SSR_00_STEP+CHAN_X3R, BANKED
001834 0E01               M          MOVLW  1
001836 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X3R, BANKED
001838 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X3R, BANKED
00183A 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
00183C 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X3R, BANKED
00183E D???               M         BRA     LLIM_END_36
                          M 
001840                    M LLIM_NOT_LOCKED_36:
001840 B300               M         BTFSC   BTN_X0_FLAGS+6,           BTN_FLG_MASKED, BANKED
001842 D???               M         BRA     LLIM_OFF_36
001844 B100               M         BTFSC   BTN_X0_FLAGS+6,           BTN_FLG_PRESSED, BANKED
001846 D???               M         BRA     LLIM_OFF_36
001848 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
00184A D???               M         BRA     LLIM_OFF_36
                          M         ;
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 92


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_STEADY 14
                          M          SET_SSR_VALUE 14,  255
00184C 0104               M         BANKSEL SSR_DATA_BANK
00184E 0EFF               M          MOVLW  255
001850 6F00               M          MOVWF  SSR_00_VALUE+14,  BANKED
001852 6B00               M          CLRF   SSR_00_STEP+14,  BANKED
001854 6B00               M          CLRF   SSR_00_SPEED+14,  BANKED
001856 6B00               M          CLRF   SSR_00_COUNTER+14,  BANKED
001858 6B00               M          CLRF   SSR_00_FLAGS+14,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_STEADY 13
                          M          SET_SSR_VALUE 13,  255
00185A 0104               M         BANKSEL SSR_DATA_BANK
00185C 0EFF               M          MOVLW  255
00185E 6F00               M          MOVWF  SSR_00_VALUE+13,  BANKED
001860 6B00               M          CLRF   SSR_00_STEP+13,  BANKED
001862 6B00               M          CLRF   SSR_00_SPEED+13,  BANKED
001864 6B00               M          CLRF   SSR_00_COUNTER+13,  BANKED
001866 6B00               M          CLRF   SSR_00_FLAGS+13,  BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 12
                          M          SET_SSR_VALUE 12,  255
001868 0104               M         BANKSEL SSR_DATA_BANK
00186A 0EFF               M          MOVLW  255
00186C 6F00               M          MOVWF  SSR_00_VALUE+12,  BANKED
00186E 6B00               M          CLRF   SSR_00_STEP+12,  BANKED
001870 6B00               M          CLRF   SSR_00_SPEED+12,  BANKED
001872 6B00               M          CLRF   SSR_00_COUNTER+12,  BANKED
001874 6B00               M          CLRF   SSR_00_FLAGS+12,  BANKED
                          M         ENDW
001876 D???               M         BRA     LLIM_END_36
                          M         
001878                    M LLIM_OFF_36:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 14
                          M          SET_SSR_VALUE 14,  0
001878 0104               M         BANKSEL SSR_DATA_BANK
00187A 0E00               M          MOVLW  0
00187C 6F00               M          MOVWF  SSR_00_VALUE+14,  BANKED
00187E 6B00               M          CLRF   SSR_00_STEP+14,  BANKED
001880 6B00               M          CLRF   SSR_00_SPEED+14,  BANKED
001882 6B00               M          CLRF   SSR_00_COUNTER+14,  BANKED
001884 6B00               M          CLRF   SSR_00_FLAGS+14,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 13
                          M          SET_SSR_VALUE 13,  0
001886 0104               M         BANKSEL SSR_DATA_BANK
001888 0E00               M          MOVLW  0
00188A 6F00               M          MOVWF  SSR_00_VALUE+13,  BANKED
00188C 6B00               M          CLRF   SSR_00_STEP+13,  BANKED
00188E 6B00               M          CLRF   SSR_00_SPEED+13,  BANKED
001890 6B00               M          CLRF   SSR_00_COUNTER+13,  BANKED
001892 6B00               M          CLRF   SSR_00_FLAGS+13,  BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 12
                          M          SET_SSR_VALUE 12,  0
001894 0104               M         BANKSEL SSR_DATA_BANK
001896 0E00               M          MOVLW  0
001898 6F00               M          MOVWF  SSR_00_VALUE+12,  BANKED
00189A 6B00               M          CLRF   SSR_00_STEP+12,  BANKED
00189C 6B00               M          CLRF   SSR_00_SPEED+12,  BANKED
00189E 6B00               M          CLRF   SSR_00_COUNTER+12,  BANKED
0018A0 6B00               M          CLRF   SSR_00_FLAGS+12,  BANKED
                          M         ENDW
                          M 
0018A2                    M LLIM_END_36:
0018A2 010C               M         BANKSEL QUIZSHOW_DATA
  00000025                M LLIM_N  ++
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 93


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01075           LOCAL_LIGHT_INDICATOR BTN_IDX_L3, CHAN_L3R, 1, CHAN_L3R
0018A4 010C               M         BANKSEL QUIZSHOW_DATA
0018A6 A500               M         BTFSS   BTN_X0_FLAGS+7,           BTN_FLG_LOCKED, BANKED
0018A8 D???               M         BRA     LLIM_NOT_LOCKED_37
0018AA B900               M         BTFSC   BTN_X0_FLAGS+7,           BTN_FLG_LCK_ACK, BANKED
0018AC D???               M         BRA     LLIM_NOT_LOCKED_37
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
0018AE 8900               M         BSF     BTN_X0_FLAGS+7,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 15
                          M          SET_SSR_VALUE 15,  0
0018B0 0104               M         BANKSEL SSR_DATA_BANK
0018B2 0E00               M          MOVLW  0
0018B4 6F00               M          MOVWF  SSR_00_VALUE+15,  BANKED
0018B6 6B00               M          CLRF   SSR_00_STEP+15,  BANKED
0018B8 6B00               M          CLRF   SSR_00_SPEED+15,  BANKED
0018BA 6B00               M          CLRF   SSR_00_COUNTER+15,  BANKED
0018BC 6B00               M          CLRF   SSR_00_FLAGS+15,  BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_L3R
                          M          SET_SSR_PATTERN CHAN_L3R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0018BE 0104               M         BANKSEL SSR_DATA_BANK
0018C0 0E00               M          MOVLW  0
0018C2 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
0018C4 0E04               M          MOVLW  4
0018C6 6F00               M          MOVWF  SSR_00_STEP+CHAN_L3R, BANKED
0018C8 0E01               M          MOVLW  1
0018CA 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L3R, BANKED
0018CC 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L3R, BANKED
0018CE 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0018D0 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L3R, BANKED
0018D2 D???               M         BRA     LLIM_END_37
                          M 
0018D4                    M LLIM_NOT_LOCKED_37:
0018D4 B300               M         BTFSC   BTN_X0_FLAGS+7,           BTN_FLG_MASKED, BANKED
0018D6 D???               M         BRA     LLIM_OFF_37
0018D8 B100               M         BTFSC   BTN_X0_FLAGS+7,           BTN_FLG_PRESSED, BANKED
0018DA D???               M         BRA     LLIM_OFF_37
0018DC A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0018DE D???               M         BRA     LLIM_OFF_37
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 15
                          M          SET_SSR_VALUE 15,  255
0018E0 0104               M         BANKSEL SSR_DATA_BANK
0018E2 0EFF               M          MOVLW  255
0018E4 6F00               M          MOVWF  SSR_00_VALUE+15,  BANKED
0018E6 6B00               M          CLRF   SSR_00_STEP+15,  BANKED
0018E8 6B00               M          CLRF   SSR_00_SPEED+15,  BANKED
0018EA 6B00               M          CLRF   SSR_00_COUNTER+15,  BANKED
0018EC 6B00               M          CLRF   SSR_00_FLAGS+15,  BANKED
                          M         ENDW
0018EE D???               M         BRA     LLIM_END_37
                          M         
0018F0                    M LLIM_OFF_37:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 15
                          M          SET_SSR_VALUE 15,  0
0018F0 0104               M         BANKSEL SSR_DATA_BANK
0018F2 0E00               M          MOVLW  0
0018F4 6F00               M          MOVWF  SSR_00_VALUE+15,  BANKED
0018F6 6B00               M          CLRF   SSR_00_STEP+15,  BANKED
0018F8 6B00               M          CLRF   SSR_00_SPEED+15,  BANKED
0018FA 6B00               M          CLRF   SSR_00_COUNTER+15,  BANKED
0018FC 6B00               M          CLRF   SSR_00_FLAGS+15,  BANKED
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 94


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ENDW
                          M 
0018FE                    M LLIM_END_37:
0018FE 010C               M         BANKSEL QUIZSHOW_DATA
  00000026                M LLIM_N  ++
                      01076           LOCAL_LIGHT_INDICATOR BTN_IDX_X4, CHAN_X4R, 3, CHAN_X4R
001900 010C               M         BANKSEL QUIZSHOW_DATA
001902 A500               M         BTFSS   BTN_X0_FLAGS+8,           BTN_FLG_LOCKED, BANKED
001904 D???               M         BRA     LLIM_NOT_LOCKED_38
001906 B900               M         BTFSC   BTN_X0_FLAGS+8,           BTN_FLG_LCK_ACK, BANKED
001908 D???               M         BRA     LLIM_NOT_LOCKED_38
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
00190A 8900               M         BSF     BTN_X0_FLAGS+8,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 18
                          M          SET_SSR_VALUE 18,  0
00190C 0104               M         BANKSEL SSR_DATA_BANK
00190E 0E00               M          MOVLW  0
001910 6F00               M          MOVWF  SSR_00_VALUE+18,  BANKED
001912 6B00               M          CLRF   SSR_00_STEP+18,  BANKED
001914 6B00               M          CLRF   SSR_00_SPEED+18,  BANKED
001916 6B00               M          CLRF   SSR_00_COUNTER+18,  BANKED
001918 6B00               M          CLRF   SSR_00_FLAGS+18,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 17
                          M          SET_SSR_VALUE 17,  0
00191A 0104               M         BANKSEL SSR_DATA_BANK
00191C 0E00               M          MOVLW  0
00191E 6F00               M          MOVWF  SSR_00_VALUE+17,  BANKED
001920 6B00               M          CLRF   SSR_00_STEP+17,  BANKED
001922 6B00               M          CLRF   SSR_00_SPEED+17,  BANKED
001924 6B00               M          CLRF   SSR_00_COUNTER+17,  BANKED
001926 6B00               M          CLRF   SSR_00_FLAGS+17,  BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 16
                          M          SET_SSR_VALUE 16,  0
001928 0104               M         BANKSEL SSR_DATA_BANK
00192A 0E00               M          MOVLW  0
00192C 6F00               M          MOVWF  SSR_00_VALUE+16,  BANKED
00192E 6B00               M          CLRF   SSR_00_STEP+16,  BANKED
001930 6B00               M          CLRF   SSR_00_SPEED+16,  BANKED
001932 6B00               M          CLRF   SSR_00_COUNTER+16,  BANKED
001934 6B00               M          CLRF   SSR_00_FLAGS+16,  BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_X4R
                          M          SET_SSR_PATTERN CHAN_X4R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
001936 0104               M         BANKSEL SSR_DATA_BANK
001938 0E00               M          MOVLW  0
00193A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
00193C 0E04               M          MOVLW  4
00193E 6F00               M          MOVWF  SSR_00_STEP+CHAN_X4R, BANKED
001940 0E01               M          MOVLW  1
001942 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X4R, BANKED
001944 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X4R, BANKED
001946 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
001948 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X4R, BANKED
00194A D???               M         BRA     LLIM_END_38
                          M 
00194C                    M LLIM_NOT_LOCKED_38:
00194C B300               M         BTFSC   BTN_X0_FLAGS+8,           BTN_FLG_MASKED, BANKED
00194E D???               M         BRA     LLIM_OFF_38
001950 B100               M         BTFSC   BTN_X0_FLAGS+8,           BTN_FLG_PRESSED, BANKED
001952 D???               M         BRA     LLIM_OFF_38
001954 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
001956 D???               M         BRA     LLIM_OFF_38
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_STEADY 18
                          M          SET_SSR_VALUE 18,  255
001958 0104               M         BANKSEL SSR_DATA_BANK
00195A 0EFF               M          MOVLW  255
00195C 6F00               M          MOVWF  SSR_00_VALUE+18,  BANKED
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 95


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00195E 6B00               M          CLRF   SSR_00_STEP+18,  BANKED
001960 6B00               M          CLRF   SSR_00_SPEED+18,  BANKED
001962 6B00               M          CLRF   SSR_00_COUNTER+18,  BANKED
001964 6B00               M          CLRF   SSR_00_FLAGS+18,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_STEADY 17
                          M          SET_SSR_VALUE 17,  255
001966 0104               M         BANKSEL SSR_DATA_BANK
001968 0EFF               M          MOVLW  255
00196A 6F00               M          MOVWF  SSR_00_VALUE+17,  BANKED
00196C 6B00               M          CLRF   SSR_00_STEP+17,  BANKED
00196E 6B00               M          CLRF   SSR_00_SPEED+17,  BANKED
001970 6B00               M          CLRF   SSR_00_COUNTER+17,  BANKED
001972 6B00               M          CLRF   SSR_00_FLAGS+17,  BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 16
                          M          SET_SSR_VALUE 16,  255
001974 0104               M         BANKSEL SSR_DATA_BANK
001976 0EFF               M          MOVLW  255
001978 6F00               M          MOVWF  SSR_00_VALUE+16,  BANKED
00197A 6B00               M          CLRF   SSR_00_STEP+16,  BANKED
00197C 6B00               M          CLRF   SSR_00_SPEED+16,  BANKED
00197E 6B00               M          CLRF   SSR_00_COUNTER+16,  BANKED
001980 6B00               M          CLRF   SSR_00_FLAGS+16,  BANKED
                          M         ENDW
001982 D???               M         BRA     LLIM_END_38
                          M         
001984                    M LLIM_OFF_38:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000003                M LLIM_LTN SET    3
                          M         WHILE LLIM_LTN > 0
  00000002                M LLIM_LTN --
                          M          SET_SSR_OFF 18
                          M          SET_SSR_VALUE 18,  0
001984 0104               M         BANKSEL SSR_DATA_BANK
001986 0E00               M          MOVLW  0
001988 6F00               M          MOVWF  SSR_00_VALUE+18,  BANKED
00198A 6B00               M          CLRF   SSR_00_STEP+18,  BANKED
00198C 6B00               M          CLRF   SSR_00_SPEED+18,  BANKED
00198E 6B00               M          CLRF   SSR_00_COUNTER+18,  BANKED
001990 6B00               M          CLRF   SSR_00_FLAGS+18,  BANKED
  00000001                M LLIM_LTN --
                          M          SET_SSR_OFF 17
                          M          SET_SSR_VALUE 17,  0
001992 0104               M         BANKSEL SSR_DATA_BANK
001994 0E00               M          MOVLW  0
001996 6F00               M          MOVWF  SSR_00_VALUE+17,  BANKED
001998 6B00               M          CLRF   SSR_00_STEP+17,  BANKED
00199A 6B00               M          CLRF   SSR_00_SPEED+17,  BANKED
00199C 6B00               M          CLRF   SSR_00_COUNTER+17,  BANKED
00199E 6B00               M          CLRF   SSR_00_FLAGS+17,  BANKED
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 16
                          M          SET_SSR_VALUE 16,  0
0019A0 0104               M         BANKSEL SSR_DATA_BANK
0019A2 0E00               M          MOVLW  0
0019A4 6F00               M          MOVWF  SSR_00_VALUE+16,  BANKED
0019A6 6B00               M          CLRF   SSR_00_STEP+16,  BANKED
0019A8 6B00               M          CLRF   SSR_00_SPEED+16,  BANKED
0019AA 6B00               M          CLRF   SSR_00_COUNTER+16,  BANKED
0019AC 6B00               M          CLRF   SSR_00_FLAGS+16,  BANKED
                          M         ENDW
                          M 
0019AE                    M LLIM_END_38:
0019AE 010C               M         BANKSEL QUIZSHOW_DATA
  00000027                M LLIM_N  ++
                      01077           LOCAL_LIGHT_INDICATOR BTN_IDX_L4, CHAN_L4R, 1, CHAN_L4R
0019B0 010C               M         BANKSEL QUIZSHOW_DATA
0019B2 A500               M         BTFSS   BTN_X0_FLAGS+9,           BTN_FLG_LOCKED, BANKED
0019B4 D???               M         BRA     LLIM_NOT_LOCKED_39
0019B6 B900               M         BTFSC   BTN_X0_FLAGS+9,           BTN_FLG_LCK_ACK, BANKED
0019B8 D???               M         BRA     LLIM_NOT_LOCKED_39
                          M         ;
                          M         ; light up for locked mode for the first time
                          M         ;
0019BA 8900               M         BSF     BTN_X0_FLAGS+9,           BTN_FLG_LCK_ACK, BANKED       ; don't do it again
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 96


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 19
                          M          SET_SSR_VALUE 19,  0
0019BC 0104               M         BANKSEL SSR_DATA_BANK
0019BE 0E00               M          MOVLW  0
0019C0 6F00               M          MOVWF  SSR_00_VALUE+19,  BANKED
0019C2 6B00               M          CLRF   SSR_00_STEP+19,  BANKED
0019C4 6B00               M          CLRF   SSR_00_SPEED+19,  BANKED
0019C6 6B00               M          CLRF   SSR_00_COUNTER+19,  BANKED
0019C8 6B00               M          CLRF   SSR_00_FLAGS+19,  BANKED
                          M         ENDW
                          M         SET_SSR_RAPID_FADE CHAN_L4R
                          M          SET_SSR_PATTERN CHAN_L4R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0019CA 0104               M         BANKSEL SSR_DATA_BANK
0019CC 0E00               M          MOVLW  0
0019CE 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
0019D0 0E04               M          MOVLW  4
0019D2 6F00               M          MOVWF  SSR_00_STEP+CHAN_L4R, BANKED
0019D4 0E01               M          MOVLW  1
0019D6 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L4R, BANKED
0019D8 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L4R, BANKED
0019DA 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0019DC 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L4R, BANKED
0019DE D???               M         BRA     LLIM_END_39
                          M 
0019E0                    M LLIM_NOT_LOCKED_39:
0019E0 B300               M         BTFSC   BTN_X0_FLAGS+9,           BTN_FLG_MASKED, BANKED
0019E2 D???               M         BRA     LLIM_OFF_39
0019E4 B100               M         BTFSC   BTN_X0_FLAGS+9,           BTN_FLG_PRESSED, BANKED
0019E6 D???               M         BRA     LLIM_OFF_39
0019E8 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0019EA D???               M         BRA     LLIM_OFF_39
                          M         ;
                          M         ; scanning and not pressed or masked? light up fully
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_STEADY 19
                          M          SET_SSR_VALUE 19,  255
0019EC 0104               M         BANKSEL SSR_DATA_BANK
0019EE 0EFF               M          MOVLW  255
0019F0 6F00               M          MOVWF  SSR_00_VALUE+19,  BANKED
0019F2 6B00               M          CLRF   SSR_00_STEP+19,  BANKED
0019F4 6B00               M          CLRF   SSR_00_SPEED+19,  BANKED
0019F6 6B00               M          CLRF   SSR_00_COUNTER+19,  BANKED
0019F8 6B00               M          CLRF   SSR_00_FLAGS+19,  BANKED
                          M         ENDW
0019FA D???               M         BRA     LLIM_END_39
                          M         
0019FC                    M LLIM_OFF_39:
                          M         ;
                          M         ; button pressed or masked, or scan is off; 
                          M         ; turn off until the host computer
                          M         ; stops the scan and awards the winner
                          M         ;
  00000001                M LLIM_LTN SET    1
                          M         WHILE LLIM_LTN > 0
  00000000                M LLIM_LTN --
                          M          SET_SSR_OFF 19
                          M          SET_SSR_VALUE 19,  0
0019FC 0104               M         BANKSEL SSR_DATA_BANK
0019FE 0E00               M          MOVLW  0
001A00 6F00               M          MOVWF  SSR_00_VALUE+19,  BANKED
001A02 6B00               M          CLRF   SSR_00_STEP+19,  BANKED
001A04 6B00               M          CLRF   SSR_00_SPEED+19,  BANKED
001A06 6B00               M          CLRF   SSR_00_COUNTER+19,  BANKED
001A08 6B00               M          CLRF   SSR_00_FLAGS+19,  BANKED
                          M         ENDW
                          M 
001A0A                    M LLIM_END_39:
001A0A 010C               M         BANKSEL QUIZSHOW_DATA
  00000028                M LLIM_N  ++
                      01078          ELSE
                      01079           ERROR "Incorrect chip type setting!"
                      01080          ENDIF
                      01081         ENDIF
001A0C 0012           01082         RETURN
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 97


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01083 
001A0E                01084 QS_STOP_SCANNER:
001A0E 0004           01085         CLRWDT
001A10 9000           01086         BCF     QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
                      01087         ; stop timer
001A12 90CD           01088         BCF     T1CON, TMR1ON, ACCESS
001A14 909D           01089         BCF     PIE1, TMR1IE, ACCESS
001A16 909E           01090         BCF     PIR1, TMR1IF, ACCESS
                      01091         ; extinguish non-masked buttons
001A18 D???           01092         RCALL SET_ALL_BUTTON_LIGHTS
001A1A 0012           01093         RETURN
                      01094 
                      01095         END
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 98


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ABAT                              00000004
ABDEN                             00000000
ABDOVF                            00000007
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACQT0                             00000003
ACQT1                             00000004
ACQT2                             00000005
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCON2                            00000FC0
ADCS0                             00000000
ADCS1                             00000001
ADCS2                             00000002
ADDEN                             00000003
ADEN                              00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADON                              00000000
ADRES                             00000FC3
ADRESH                            00000FC4
ADRESL                            00000FC3
ALL_OFF                           00000004
AN0                               00000000
AN1                               00000001
AN10                              00000000
AN2                               00000002
AN3                               00000003
AN4                               00000005
AN5                               00000000
AN6                               00000001
AN7                               00000002
AN8                               00000001
AN9                               00000004
B0CON                             00000E20
B0D0                              00000E26
B0D00                             00000000
B0D01                             00000001
B0D02                             00000002
B0D03                             00000003
B0D04                             00000004
B0D05                             00000005
B0D06                             00000006
B0D07                             00000007
B0D1                              00000E27
B0D10                             00000000
B0D11                             00000001
B0D12                             00000002
B0D13                             00000003
B0D14                             00000004
B0D15                             00000005
B0D16                             00000006
B0D17                             00000007
B0D2                              00000E28
B0D20                             00000000
B0D21                             00000001
B0D22                             00000002
B0D23                             00000003
B0D24                             00000004
B0D25                             00000005
B0D26                             00000006
B0D27                             00000007
B0D3                              00000E29
B0D30                             00000000
B0D31                             00000001
B0D32                             00000002
B0D33                             00000003
B0D34                             00000004
B0D35                             00000005
B0D36                             00000006
B0D37                             00000007
B0D4                              00000E2A
B0D40                             00000000
B0D41                             00000001
B0D42                             00000002
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 99


SYMBOL TABLE
  LABEL                             VALUE 

B0D43                             00000003
B0D44                             00000004
B0D45                             00000005
B0D46                             00000006
B0D47                             00000007
B0D5                              00000E2B
B0D50                             00000000
B0D51                             00000001
B0D52                             00000002
B0D53                             00000003
B0D54                             00000004
B0D55                             00000005
B0D56                             00000006
B0D57                             00000007
B0D6                              00000E2C
B0D60                             00000000
B0D61                             00000001
B0D62                             00000002
B0D63                             00000003
B0D64                             00000004
B0D65                             00000005
B0D66                             00000006
B0D67                             00000007
B0D7                              00000E2D
B0D70                             00000000
B0D71                             00000001
B0D72                             00000002
B0D73                             00000003
B0D74                             00000004
B0D75                             00000005
B0D76                             00000006
B0D77                             00000007
B0DLC                             00000E25
B0EIDH                            00000E23
B0EIDL                            00000E24
B0IE                              00000002
B0SIDH                            00000E21
B0SIDL                            00000E22
B0TXEN                            00000002
B1CON                             00000E30
B1D0                              00000E36
B1D00                             00000000
B1D01                             00000001
B1D02                             00000002
B1D03                             00000003
B1D04                             00000004
B1D05                             00000005
B1D06                             00000006
B1D07                             00000007
B1D1                              00000E37
B1D10                             00000000
B1D11                             00000001
B1D12                             00000002
B1D13                             00000003
B1D14                             00000004
B1D15                             00000005
B1D16                             00000006
B1D17                             00000007
B1D2                              00000E38
B1D20                             00000000
B1D21                             00000001
B1D22                             00000002
B1D23                             00000003
B1D24                             00000004
B1D25                             00000005
B1D26                             00000006
B1D27                             00000007
B1D3                              00000E39
B1D30                             00000000
B1D31                             00000001
B1D32                             00000002
B1D33                             00000003
B1D34                             00000004
B1D35                             00000005
B1D36                             00000006
B1D37                             00000007
B1D4                              00000E3A
B1D40                             00000000
B1D41                             00000001
B1D42                             00000002
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 100


SYMBOL TABLE
  LABEL                             VALUE 

B1D43                             00000003
B1D44                             00000004
B1D45                             00000005
B1D46                             00000006
B1D47                             00000007
B1D5                              00000E3B
B1D50                             00000000
B1D51                             00000001
B1D52                             00000002
B1D53                             00000003
B1D54                             00000004
B1D55                             00000005
B1D56                             00000006
B1D57                             00000007
B1D6                              00000E3C
B1D60                             00000000
B1D61                             00000001
B1D62                             00000002
B1D63                             00000003
B1D64                             00000004
B1D65                             00000005
B1D66                             00000006
B1D67                             00000007
B1D7                              00000E3D
B1D70                             00000000
B1D71                             00000001
B1D72                             00000002
B1D73                             00000003
B1D74                             00000004
B1D75                             00000005
B1D76                             00000006
B1D77                             00000007
B1DLC                             00000E35
B1EIDH                            00000E33
B1EIDL                            00000E34
B1IE                              00000003
B1SIDH                            00000E31
B1SIDL                            00000E32
B1TXEN                            00000003
B2CON                             00000E40
B2D0                              00000E46
B2D00                             00000000
B2D01                             00000001
B2D02                             00000002
B2D03                             00000003
B2D04                             00000004
B2D05                             00000005
B2D06                             00000006
B2D07                             00000007
B2D1                              00000E47
B2D10                             00000000
B2D11                             00000001
B2D12                             00000002
B2D13                             00000003
B2D14                             00000004
B2D15                             00000005
B2D16                             00000006
B2D17                             00000007
B2D2                              00000E48
B2D20                             00000000
B2D21                             00000001
B2D22                             00000002
B2D23                             00000003
B2D24                             00000004
B2D25                             00000005
B2D26                             00000006
B2D27                             00000007
B2D3                              00000E49
B2D30                             00000000
B2D31                             00000001
B2D32                             00000002
B2D33                             00000003
B2D34                             00000004
B2D35                             00000005
B2D36                             00000006
B2D37                             00000007
B2D4                              00000E4A
B2D40                             00000000
B2D41                             00000001
B2D42                             00000002
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 101


SYMBOL TABLE
  LABEL                             VALUE 

B2D43                             00000003
B2D44                             00000004
B2D45                             00000005
B2D46                             00000006
B2D47                             00000007
B2D5                              00000E4B
B2D50                             00000000
B2D51                             00000001
B2D52                             00000002
B2D53                             00000003
B2D54                             00000004
B2D55                             00000005
B2D56                             00000006
B2D57                             00000007
B2D6                              00000E4C
B2D60                             00000000
B2D61                             00000001
B2D62                             00000002
B2D63                             00000003
B2D64                             00000004
B2D65                             00000005
B2D66                             00000006
B2D67                             00000007
B2D7                              00000E4D
B2D70                             00000000
B2D71                             00000001
B2D72                             00000002
B2D73                             00000003
B2D74                             00000004
B2D75                             00000005
B2D76                             00000006
B2D77                             00000007
B2DLC                             00000E45
B2EIDH                            00000E43
B2EIDL                            00000E44
B2IE                              00000004
B2SIDH                            00000E41
B2SIDL                            00000E42
B2TXEN                            00000004
B3CON                             00000E50
B3D0                              00000E56
B3D00                             00000000
B3D01                             00000001
B3D02                             00000002
B3D03                             00000003
B3D04                             00000004
B3D05                             00000005
B3D06                             00000006
B3D07                             00000007
B3D1                              00000E57
B3D10                             00000000
B3D11                             00000001
B3D12                             00000002
B3D13                             00000003
B3D14                             00000004
B3D15                             00000005
B3D16                             00000006
B3D17                             00000007
B3D2                              00000E58
B3D20                             00000000
B3D21                             00000001
B3D22                             00000002
B3D23                             00000003
B3D24                             00000004
B3D25                             00000005
B3D26                             00000006
B3D27                             00000007
B3D3                              00000E59
B3D30                             00000000
B3D31                             00000001
B3D32                             00000002
B3D33                             00000003
B3D34                             00000004
B3D35                             00000005
B3D36                             00000006
B3D37                             00000007
B3D4                              00000E5A
B3D40                             00000000
B3D41                             00000001
B3D42                             00000002
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 102


SYMBOL TABLE
  LABEL                             VALUE 

B3D43                             00000003
B3D44                             00000004
B3D45                             00000005
B3D46                             00000006
B3D47                             00000007
B3D5                              00000E5B
B3D50                             00000000
B3D51                             00000001
B3D52                             00000002
B3D53                             00000003
B3D54                             00000004
B3D55                             00000005
B3D56                             00000006
B3D57                             00000007
B3D6                              00000E5C
B3D60                             00000000
B3D61                             00000001
B3D62                             00000002
B3D63                             00000003
B3D64                             00000004
B3D65                             00000005
B3D66                             00000006
B3D67                             00000007
B3D7                              00000E5D
B3D70                             00000000
B3D71                             00000001
B3D72                             00000002
B3D73                             00000003
B3D74                             00000004
B3D75                             00000005
B3D76                             00000006
B3D77                             00000007
B3DLC                             00000E55
B3EIDH                            00000E53
B3EIDL                            00000E54
B3IE                              00000005
B3SIDH                            00000E51
B3SIDL                            00000E52
B3TXEN                            00000005
B46D77                            00000007
B4CON                             00000E60
B4D0                              00000E66
B4D00                             00000000
B4D01                             00000001
B4D02                             00000002
B4D03                             00000003
B4D04                             00000004
B4D05                             00000005
B4D06                             00000006
B4D07                             00000007
B4D1                              00000E67
B4D10                             00000000
B4D11                             00000001
B4D12                             00000002
B4D13                             00000003
B4D14                             00000004
B4D15                             00000005
B4D16                             00000006
B4D17                             00000007
B4D2                              00000E68
B4D20                             00000000
B4D21                             00000001
B4D22                             00000002
B4D23                             00000003
B4D24                             00000004
B4D25                             00000005
B4D26                             00000006
B4D27                             00000007
B4D3                              00000E69
B4D30                             00000000
B4D31                             00000001
B4D32                             00000002
B4D33                             00000003
B4D34                             00000004
B4D35                             00000005
B4D36                             00000006
B4D37                             00000007
B4D4                              00000E6A
B4D40                             00000000
B4D41                             00000001
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 103


SYMBOL TABLE
  LABEL                             VALUE 

B4D42                             00000002
B4D43                             00000003
B4D44                             00000004
B4D45                             00000005
B4D46                             00000006
B4D47                             00000007
B4D5                              00000E6B
B4D50                             00000000
B4D51                             00000001
B4D52                             00000002
B4D53                             00000003
B4D54                             00000004
B4D55                             00000005
B4D56                             00000006
B4D57                             00000007
B4D6                              00000E6C
B4D60                             00000000
B4D61                             00000001
B4D62                             00000002
B4D63                             00000003
B4D64                             00000004
B4D65                             00000005
B4D66                             00000006
B4D67                             00000007
B4D7                              00000E6D
B4D70                             00000000
B4D71                             00000001
B4D72                             00000002
B4D73                             00000003
B4D74                             00000004
B4D75                             00000005
B4D76                             00000006
B4D77                             00000007
B4DLC                             00000E65
B4EIDH                            00000E63
B4EIDL                            00000E64
B4IE                              00000006
B4SIDH                            00000E61
B4SIDL                            00000E62
B4TXEN                            00000006
B57D07                            00000007
B57D23                            00000003
B5CON                             00000E70
B5D0                              00000E76
B5D00                             00000000
B5D01                             00000001
B5D02                             00000002
B5D03                             00000003
B5D04                             00000004
B5D05                             00000005
B5D06                             00000006
B5D07                             00000007
B5D1                              00000E77
B5D10                             00000000
B5D11                             00000001
B5D12                             00000002
B5D13                             00000003
B5D14                             00000004
B5D15                             00000005
B5D16                             00000006
B5D17                             00000007
B5D2                              00000E78
B5D20                             00000000
B5D21                             00000001
B5D22                             00000002
B5D23                             00000003
B5D24                             00000004
B5D25                             00000005
B5D26                             00000006
B5D27                             00000007
B5D3                              00000E79
B5D30                             00000000
B5D31                             00000001
B5D32                             00000002
B5D33                             00000003
B5D34                             00000004
B5D35                             00000005
B5D36                             00000006
B5D37                             00000007
B5D4                              00000E7A
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 104


SYMBOL TABLE
  LABEL                             VALUE 

B5D40                             00000000
B5D41                             00000001
B5D42                             00000002
B5D43                             00000003
B5D44                             00000004
B5D45                             00000005
B5D46                             00000006
B5D47                             00000007
B5D5                              00000E7B
B5D50                             00000000
B5D51                             00000001
B5D52                             00000002
B5D53                             00000003
B5D54                             00000004
B5D55                             00000005
B5D56                             00000006
B5D57                             00000007
B5D6                              00000E7C
B5D60                             00000000
B5D61                             00000001
B5D62                             00000002
B5D63                             00000003
B5D64                             00000004
B5D65                             00000005
B5D66                             00000006
B5D67                             00000007
B5D7                              00000E7D
B5D70                             00000000
B5D71                             00000001
B5D72                             00000002
B5D73                             00000003
B5D74                             00000004
B5D75                             00000005
B5D76                             00000006
B5D77                             00000007
B5DLC                             00000E75
B5EIDH                            00000E73
B5EIDL                            00000E74
B5IE                              00000007
B5SIDH                            00000E71
B5SIDL                            00000E72
B5TXEN                            00000007
BANKED                            00000001
BAUDCON                           00000FB8
BAUDCTL                           00000FB8
BCLIE                             00000003
BCLIF                             00000003
BCLIP                             00000003
BF                                00000000
BGST                              00000005
BIE0                              00000DFA
BIT_0                             00000002
BIT_1                             00000001
BIT_10                            00000001
BIT_11                            00000000
BIT_12                            00000007
BIT_13                            00000006
BIT_14                            00000005
BIT_15                            00000001
BIT_16                            00000000
BIT_17                            00000003
BIT_18                            00000001
BIT_19                            00000002
BIT_2                             00000000
BIT_3                             00000002
BIT_4                             00000007
BIT_5                             00000006
BIT_6                             00000005
BIT_7                             00000004
BIT_8                             00000003
BIT_9                             00000002
BIT_FADE_CYCLE                    00000020
BIT_FADE_DOWN                     00000040
BIT_FADE_UP                       00000080
BIT_L0                            00000002
BIT_L1                            00000000
BIT_L2                            00000005
BIT_L3                            00000000
BIT_L4                            00000005
BIT_MAX_OFF_TIME                  00000010
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 105


SYMBOL TABLE
  LABEL                             VALUE 

BIT_RX                            00000007
BIT_T_R                           00000003
BIT_X0                            00000003
BIT_X1                            00000001
BIT_X2                            00000004
BIT_X3                            00000004
BIT_X4                            00000004
BOR                               00000000
BRG16                             00000003
BRGCON1                           00000F70
BRGCON2                           00000F71
BRGCON3                           00000F72
BRGH                              00000002
BRP0                              00000000
BRP1                              00000001
BRP2                              00000002
BRP3                              00000003
BRP4                              00000004
BRP5                              00000005
BSEL0                             00000DF8
BSR                               00000FE0
BTN_FLG_ACTIVE                    00000003
BTN_FLG_LCK_ACK                   00000004
BTN_FLG_LOCKED                    00000002
BTN_FLG_MASKED                    00000001
BTN_FLG_PRESSED                   00000000
BTN_IDX_L0                        00000001
BTN_IDX_L1                        00000003
BTN_IDX_L2                        00000005
BTN_IDX_L3                        00000007
BTN_IDX_L4                        00000009
BTN_IDX_X0                        00000000
BTN_IDX_X1                        00000002
BTN_IDX_X2                        00000004
BTN_IDX_X3                        00000006
BTN_IDX_X4                        00000008
BTN_X0_DEB_TMR                    00000C3C
BTN_X0_FLAGS                      00000C28
BTN_X0_LOCKTMR                    00000C32
BTN_X0_TIME_H                     00000C14
BTN_X0_TIME_L                     00000C1E
BTN_X0_TIME_T                     00000C00
BTN_X0_TIME_U                     00000C0A
C                                 00000000
C1INA                             00000001
C1INB                             00000000
C1INV                             00000004
C1OUT                             00000006
C2INA                             00000003
C2INB                             00000002
C2INV                             00000005
C2OUT                             00000007
CANCAP                            00000004
CANCON                            00000F6F
CANCON_RO0                        00000F5F
CANCON_RO1                        00000F4F
CANCON_RO2                        00000F3F
CANCON_RO3                        00000F2F
CANCON_RO4                        00000E7F
CANCON_RO5                        00000E6F
CANCON_RO6                        00000E5F
CANCON_RO7                        00000E4F
CANCON_RO8                        00000E3F
CANCON_RO9                        00000E2F
CANRX                             00000003
CANSTAT                           00000F6E
CANSTAT_RO0                       00000F5E
CANSTAT_RO1                       00000F4E
CANSTAT_RO2                       00000F3E
CANSTAT_RO3                       00000F2E
CANSTAT_RO4                       00000E7E
CANSTAT_RO5                       00000E6E
CANSTAT_RO6                       00000E5E
CANSTAT_RO7                       00000E4E
CANSTAT_RO8                       00000E3E
CANSTAT_RO9                       00000E2E
CANTX                             00000002
CB_IDX                            0000000A
CCP1                              00000002
CCP1CON                           00000FBD
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 106


SYMBOL TABLE
  LABEL                             VALUE 

CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCPR1                             00000FBE
CCPR1H                            00000FBF
CCPR1L                            00000FBE
CFGS                              00000006
CHAN_HB                           00000013
CHAN_L0R                          00000003
CHAN_L1R                          00000007
CHAN_L2R                          0000000B
CHAN_L3R                          0000000F
CHAN_L4R                          00000013
CHAN_X0B                          00000002
CHAN_X0G                          00000001
CHAN_X0R                          00000000
CHAN_X1B                          00000006
CHAN_X1G                          00000005
CHAN_X1R                          00000004
CHAN_X2B                          0000000A
CHAN_X2G                          00000009
CHAN_X2R                          00000008
CHAN_X3B                          0000000E
CHAN_X3G                          0000000D
CHAN_X3R                          0000000C
CHAN_X4B                          00000012
CHAN_X4G                          00000011
CHAN_X4R                          00000010
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CIOCON                            00000F73
CIS                               00000003
CK                                00000006
CKE                               00000006
CKP                               00000004
CLEAR_BUTTONS                     
CLKI                              00000007
CLKO                              00000006
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             00000FB4
CMIE                              00000006
CMIF                              00000006
CMIP                              00000006
COMSTAT                           00000F74
CREN                              00000004
CS                                00000002
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            00000FB5
CVREF_CVRCON                      00000004
CVREF_PORTA                       00000000
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
CVRSS                             00000004
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DDRA                              TRISA
DDRB                              TRISB
DDRC                              TRISC
DDRD                              TRISD
DDRE                              TRISE
DFLC0                             00000000
DFLC1                             00000001
DFLC2                             00000002
DFLC3                             00000003
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 107


SYMBOL TABLE
  LABEL                             VALUE 

DFLC4                             00000004
DLC0                              00000000
DLC1                              00000001
DLC2                              00000002
DLC3                              00000003
DMX_ENABLED                       0
DONE                              00000001
DRAIN_TR                          00000002
D_A                               00000005
D_NOT_A                           00000005
ECANCON                           00000F77
ECCP1                             00000004
ECCP1AS                           00000FB6
ECCP1CON                          00000FBA
ECCP1DEL                          00000FB7
ECCP1IE                           00000000
ECCP1IF                           00000000
ECCP1IP                           00000000
ECCP1M0                           00000000
ECCP1M1                           00000001
ECCP1M2                           00000002
ECCP1M3                           00000003
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
ECCPR1                            00000FBB
ECCPR1H                           00000FBC
ECCPR1L                           00000FBB
EDC1B0                            00000004
EDC1B1                            00000005
EEADR                             00000FA9
EEADRH                            00000FAA
EECON1                            00000FA6
EECON2                            00000FA7
EEDATA                            00000FA8
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
EEPGD                             00000007
EICODE0                           00000000
EICODE1                           00000001
EICODE1_ICODE0                    00000001
EICODE2                           00000002
EICODE2_ICODE1                    00000002
EICODE3                           00000003
EICODE3_ICODE2                    00000003
EICODE4                           00000004
EID0                              00000000
EID1                              00000001
EID10                             00000002
EID11                             00000003
EID12                             00000004
EID13                             00000005
EID14                             00000006
EID15                             00000007
EID16                             00000000
EID17                             00000001
EID2                              00000002
EID3                              00000003
EID4                              00000004
EID5                              00000005
EID6                              00000006
EID7                              00000007
EID8                              00000000
EID9                              00000001
ENDRHI                            00000005
EPWM1M0                           00000006
EPWM1M1                           00000007
ERRIE                             00000005
ERRIF                             00000005
ERRIP                             00000005
EWARN                             00000000
EWIN0                             00000000
EWIN1                             00000001
EWIN2                             00000002
EWIN3                             00000003
EWIN4                             00000004
EXID                              00000003
EXIDE                             00000003
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 108


SYMBOL TABLE
  LABEL                             VALUE 

EXIDEN                            00000003
F                                 00000005
F0BP_0                            00000000
F0BP_1                            00000001
F0BP_2                            00000002
F0BP_3                            00000003
F10BP_0                           00000000
F10BP_1                           00000001
F10BP_2                           00000002
F10BP_3                           00000003
F11BP_0                           00000004
F11BP_1                           00000005
F11BP_2                           00000006
F11BP_3                           00000007
F12BP_0                           00000000
F12BP_1                           00000001
F12BP_2                           00000002
F12BP_3                           00000003
F13BP_0                           00000004
F13BP_1                           00000005
F13BP_2                           00000006
F13BP_3                           00000007
F14BP_0                           00000000
F14BP_1                           00000001
F14BP_2                           00000002
F14BP_3                           00000003
F15BP_0                           00000004
F15BP_1                           00000005
F15BP_2                           00000006
F15BP_3                           00000007
F1BP_0                            00000004
F1BP_1                            00000005
F1BP_2                            00000006
F1BP_3                            00000007
F2BP_0                            00000000
F2BP_1                            00000001
F2BP_2                            00000002
F2BP_3                            00000003
F3BP_0                            00000004
F3BP_1                            00000005
F3BP_2                            00000006
F3BP_3                            00000007
F4BP_0                            00000000
F4BP_1                            00000001
F4BP_2                            00000002
F4BP_3                            00000003
F5BP_0                            00000004
F5BP_1                            00000005
F5BP_2                            00000006
F5BP_3                            00000007
F6BP_0                            00000000
F6BP_1                            00000001
F6BP_2                            00000002
F6BP_3                            00000003
F7BP_0                            00000004
F7BP_1                            00000005
F7BP_2                            00000006
F7BP_3                            00000007
F8BP_0                            00000000
F8BP_1                            00000001
F8BP_2                            00000002
F8BP_3                            00000003
F9BP_0                            00000004
F9BP_1                            00000005
F9BP_2                            00000006
F9BP_3                            00000007
FADE_CYCLE                        00000005
FADE_DOWN                         00000006
FADE_UP                           00000007
FAST                              00000001
FERR                              00000002
FIFOEMPTY                         00000007
FIFOMWIE                          00000000
FIFOWM                            00000005
FIFOWMIE                          00000000
FIFOWMIF                          00000000
FIFOWMIP                          00000000
FIL0_0                            00000000
FIL0_1                            00000001
FIL10_0                           00000004
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 109


SYMBOL TABLE
  LABEL                             VALUE 

FIL10_1                           00000005
FIL11_0                           00000006
FIL11_1                           00000007
FIL12_0                           00000000
FIL12_1                           00000001
FIL13_0                           00000002
FIL13_1                           00000003
FIL14_0                           00000004
FIL14_1                           00000005
FIL15_0                           00000006
FIL15_1                           00000007
FIL1_0                            00000002
FIL1_1                            00000003
FIL2_0                            00000004
FIL2_1                            00000005
FIL3_0                            00000006
FIL3_1                            00000007
FIL4_0                            00000000
FIL4_1                            00000001
FIL5_0                            00000002
FIL5_1                            00000003
FIL6_0                            00000004
FIL6_1                            00000005
FIL7_0                            00000006
FIL7_1                            00000007
FIL8_0                            00000000
FIL8_1                            00000001
FIL9_0                            00000002
FIL9_1                            00000003
FILHIT0                           00000000
FILHIT0_TXPRI0                    00000000
FILHIT1                           00000001
FILHIT1_TXPRI1                    00000001
FILHIT2                           00000002
FILHIT2_RTREN                     00000002
FILHIT3                           00000003
FILHIT3_TXREQ                     00000003
FILHIT4                           00000004
FILHIT4_TXERR                     00000004
FLC0                              00000000
FLC1                              00000001
FLC2                              00000002
FLC3                              00000003
FLC4                              00000004
FLT0                              00000000
FP0                               00000000
FP1                               00000001
FP2                               00000002
FP3                               00000003
FREE                              00000004
FRST_RECEIVER_B                   00000004
FRST_RECEIVER_P                   00000F83
FRST_SENDER_B                     00000007
FRST_SENDER_P                     00000F8A
FRST_SIG_A_B                      00000002
FRST_SIG_A_P                      00000F8C
FRST_SIG_B_B                      00000002
FRST_SIG_B_P                      00000F8B
FRST_SIG_C_B                      00000000
FRST_SIG_C_P                      00000F8B
FRST_TRISTATE_TEST                00000000
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
GCEN                              00000007
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GIE_GIEH                          00000007
GO                                00000001
GO_DONE                           00000001
GO_NOT_DONE                       00000001
HAS_ACTIVE                        00000000
HAS_FACTORY_RESET                 00000001
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 110


SYMBOL TABLE
  LABEL                             VALUE 

HAS_OPTION                        00000000
HAS_POWER_CTRL                    00000000
HAS_SENSORS                       00000000
HAS_STATUS_LEDS                   00000000
HAS_T_R                           00000001
HLVDCON                           00000FD2
HLVDEN                            00000004
HLVDIE                            00000002
HLVDIF                            00000002
HLVDIN                            00000005
HLVDIP                            00000002
HLVDL0                            00000000
HLVDL1                            00000001
HLVDL2                            00000002
HLVDL3                            00000003
I2C_DAT                           00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
ICODE0                            00000000
ICODE1                            00000001
ICODE2                            00000002
ICODE3                            00000003
ICODE4                            00000004
IDLEN                             00000007
INCYC                             00000007
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INHIBIT_OUTPUT                    00000002
INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1E                             00000003
INT1F                             00000000
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT1P                             00000006
INT2                              00000002
INT2E                             00000004
INT2F                             00000001
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INT2P                             00000007
INTCON                            00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
INTSCR                            00000007
INTSRC                            00000007
IOFS                              00000002
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IPR3                              00000FA5
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRVST                             00000005
IRXIE                             00000007
IRXIF                             00000007
IRXIP                             00000007
IVRST                             00000005
JTOFF                             00000001
JTOFF_FILHIT1                     00000001
KBI0                              00000004
KBI1                              00000005
KBI2                              00000006
KBI3                              00000007
LATA                              00000F89
LATA0                             00000000
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 111


SYMBOL TABLE
  LABEL                             VALUE 

LATA1                             00000001
LATA2                             00000002
LATA3                             00000003
LATA4                             00000004
LATA5                             00000005
LATA6                             00000006
LATA7                             00000007
LATB                              00000F8A
LATB0                             00000000
LATB1                             00000001
LATB2                             00000002
LATB3                             00000003
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              00000F8B
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC3                             00000003
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
LATD                              00000F8C
LATD0                             00000000
LATD1                             00000001
LATD2                             00000002
LATD3                             00000003
LATD4                             00000004
LATD5                             00000005
LATD6                             00000006
LATD7                             00000007
LATE                              00000F8D
LATE0                             00000000
LATE1                             00000001
LATE2                             00000002
LITERAL_ESC                       00000000
LLIM_END_0                        000001A0
LLIM_END_1                        00000288
LLIM_END_10                       00000834
LLIM_END_11                       0000089E
LLIM_END_12                       00000968
LLIM_END_13                       00000A50
LLIM_END_14                       00000B0E
LLIM_END_15                       00000B84
LLIM_END_16                       00000C18
LLIM_END_17                       00000C82
LLIM_END_18                       00000D4C
LLIM_END_19                       00000E34
LLIM_END_2                        00000346
LLIM_END_20                       00000EF2
LLIM_END_21                       00000F68
LLIM_END_22                       00000FFC
LLIM_END_23                       00001066
LLIM_END_24                       00001130
LLIM_END_25                       00001218
LLIM_END_26                       000012D6
LLIM_END_27                       0000134C
LLIM_END_28                       000013E0
LLIM_END_29                       0000144A
LLIM_END_3                        000003BC
LLIM_END_30                       0000157E
LLIM_END_31                       000015DA
LLIM_END_32                       0000168A
LLIM_END_33                       000016E6
LLIM_END_34                       00001796
LLIM_END_35                       000017F2
LLIM_END_36                       000018A2
LLIM_END_37                       000018FE
LLIM_END_38                       000019AE
LLIM_END_39                       00001A0A
LLIM_END_4                        00000450
LLIM_END_5                        000004BA
LLIM_END_6                        00000584
LLIM_END_7                        0000066C
LLIM_END_8                        0000072A
LLIM_END_9                        000007A0
LLIM_LTN                          00000000
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 112


SYMBOL TABLE
  LABEL                             VALUE 

LLIM_N                            00000028
LLIM_NOT_LOCKED_0                 0000013E
LLIM_NOT_LOCKED_1                 00000226
LLIM_NOT_LOCKED_10                0000080A
LLIM_NOT_LOCKED_11                00000874
LLIM_NOT_LOCKED_12                00000906
LLIM_NOT_LOCKED_13                000009EE
LLIM_NOT_LOCKED_14                00000AAC
LLIM_NOT_LOCKED_15                00000B5A
LLIM_NOT_LOCKED_16                00000BEE
LLIM_NOT_LOCKED_17                00000C58
LLIM_NOT_LOCKED_18                00000CEA
LLIM_NOT_LOCKED_19                00000DD2
LLIM_NOT_LOCKED_2                 000002E4
LLIM_NOT_LOCKED_20                00000E90
LLIM_NOT_LOCKED_21                00000F3E
LLIM_NOT_LOCKED_22                00000FD2
LLIM_NOT_LOCKED_23                0000103C
LLIM_NOT_LOCKED_24                000010CE
LLIM_NOT_LOCKED_25                000011B6
LLIM_NOT_LOCKED_26                00001274
LLIM_NOT_LOCKED_27                00001322
LLIM_NOT_LOCKED_28                000013B6
LLIM_NOT_LOCKED_29                00001420
LLIM_NOT_LOCKED_3                 00000392
LLIM_NOT_LOCKED_30                0000151C
LLIM_NOT_LOCKED_31                000015B0
LLIM_NOT_LOCKED_32                00001628
LLIM_NOT_LOCKED_33                000016BC
LLIM_NOT_LOCKED_34                00001734
LLIM_NOT_LOCKED_35                000017C8
LLIM_NOT_LOCKED_36                00001840
LLIM_NOT_LOCKED_37                000018D4
LLIM_NOT_LOCKED_38                0000194C
LLIM_NOT_LOCKED_39                000019E0
LLIM_NOT_LOCKED_4                 00000426
LLIM_NOT_LOCKED_5                 00000490
LLIM_NOT_LOCKED_6                 00000522
LLIM_NOT_LOCKED_7                 0000060A
LLIM_NOT_LOCKED_8                 000006C8
LLIM_NOT_LOCKED_9                 00000776
LLIM_OFF_0                        00000176
LLIM_OFF_1                        0000025E
LLIM_OFF_10                       00000826
LLIM_OFF_11                       00000890
LLIM_OFF_12                       0000093E
LLIM_OFF_13                       00000A26
LLIM_OFF_14                       00000AE4
LLIM_OFF_15                       00000B76
LLIM_OFF_16                       00000C0A
LLIM_OFF_17                       00000C74
LLIM_OFF_18                       00000D22
LLIM_OFF_19                       00000E0A
LLIM_OFF_2                        0000031C
LLIM_OFF_20                       00000EC8
LLIM_OFF_21                       00000F5A
LLIM_OFF_22                       00000FEE
LLIM_OFF_23                       00001058
LLIM_OFF_24                       00001106
LLIM_OFF_25                       000011EE
LLIM_OFF_26                       000012AC
LLIM_OFF_27                       0000133E
LLIM_OFF_28                       000013D2
LLIM_OFF_29                       0000143C
LLIM_OFF_3                        000003AE
LLIM_OFF_30                       00001554
LLIM_OFF_31                       000015CC
LLIM_OFF_32                       00001660
LLIM_OFF_33                       000016D8
LLIM_OFF_34                       0000176C
LLIM_OFF_35                       000017E4
LLIM_OFF_36                       00001878
LLIM_OFF_37                       000018F0
LLIM_OFF_38                       00001984
LLIM_OFF_39                       000019FC
LLIM_OFF_4                        00000442
LLIM_OFF_5                        000004AC
LLIM_OFF_6                        0000055A
LLIM_OFF_7                        00000642
LLIM_OFF_8                        00000700
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 113


SYMBOL TABLE
  LABEL                             VALUE 

LLIM_OFF_9                        00000792
LOCAL_LIGHT_INDICATOR             
LUMOS_ARCH                        LUMOS_ARCH_4685
LUMOS_ARCH_14K50                  (0x1450)
LUMOS_ARCH_4685                   (0x4685)
LUMOS_CHIP_4CHANNEL               0x44
LUMOS_CHIP_MASTER                 0x41
LUMOS_CHIP_QSCC                   0x45
LUMOS_CHIP_QSRC                   0x46
LUMOS_CHIP_SLAVE                  0x42
LUMOS_CHIP_STANDALONE             0x43
LUMOS_CHIP_TYPE                   LUMOS_CHIP_QSRC
LUMOS_CONFIG_INC                  
LUMOS_INTERNAL                    0x58
LUMOS_SET_SSR_INC                 
LUMOS_SLICE_TIMER                 LUMOS_INTERNAL
LUMOS_ZC                          0x55
LVDCON                            00000FD2
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIN                             00000005
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
LVV0                              00000000
LVV1                              00000001
LVV2                              00000002
LVV3                              00000003
MAIN_DATA                         00000500
MAX_OFF_TIME                      00000004
MDSEL0                            00000006
MDSEL1                            00000007
MSB_ESC                           00000001
MSEL0                             00000DF0
MSEL1                             00000DF1
MSEL2                             00000DF2
MSEL3                             00000DF3
N                                 00000004
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_CS                            00000002
NOT_DONE                          00000001
NOT_FIFOEMPTY                     00000007
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RD                            00000000
NOT_RI                            00000004
NOT_SS                            00000005
NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
NOT_TO                            00000003
NOT_W                             00000002
NOT_WR                            00000001
NOT_WRITE                         00000002
NUM_CHANNELS                      (.20)
N_BUTTONS                         0000000A
OBF                               00000006
OERR                              00000001
OPMODE0                           00000005
OPMODE1                           00000006
OPMODE2                           00000007
OSC1                              00000007
OSC2                              00000006
OSCCON                            00000FD3
OSCFIE                            00000007
OSCFIF                            00000007
OSCFIP                            00000007
OSCTUNE                           00000F9B
OSTS                              00000003
OV                                00000003
P                                 00000004
P1A                               00000004
P1B                               00000005
P1C                               00000006
P1D                               00000007
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 114


SYMBOL TABLE
  LABEL                             VALUE 

PC                                00000FF9
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEIE_GIEL                         00000006
PEN                               00000002
PGC                               00000006
PGD                               00000007
PGM                               00000005
PIE1                              00000F9D
PIE2                              00000FA0
PIE3                              00000FA3
PIR1                              00000F9E
PIR2                              00000FA1
PIR3                              00000FA4
PLAT_0                            00000F8B
PLAT_1                            00000F8B
PLAT_10                           00000F8A
PLAT_11                           00000F8D
PLAT_12                           00000F8C
PLAT_13                           00000F8C
PLAT_14                           00000F8C
PLAT_15                           00000F8D
PLAT_16                           00000F8A
PLAT_17                           00000F8C
PLAT_18                           00000F8C
PLAT_19                           00000F8C
PLAT_2                            00000F8B
PLAT_3                            00000F8D
PLAT_4                            00000F8A
PLAT_5                            00000F8A
PLAT_6                            00000F8A
PLAT_7                            00000F8A
PLAT_8                            00000F8A
PLAT_9                            00000F8A
PLAT_T_R                          00000F8B
PLLEN                             00000006
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
PORTD                             00000F83
PORTE                             00000F84
PORT_L0                           00000F80
PORT_L1                           00000F80
PORT_L2                           00000F80
PORT_L3                           00000F83
PORT_L4                           00000F82
PORT_RX                           00000F82
PORT_T_R                          00000F82
PORT_X0                           00000F80
PORT_X1                           00000F80
PORT_X2                           00000F80
PORT_X3                           00000F82
PORT_X4                           00000F83
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PR2                               00000FCB
PRECYC                            00000006
PREINC0                           00000FEC
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 115


SYMBOL TABLE
  LABEL                             VALUE 

PREINC1                           00000FE4
PREINC2                           00000FDC
PRE_PRIV                          00000001
PRIV_FORBID                       00000003
PRIV_MODE                         00000004
PROD                              00000FF3
PRODH                             00000FF4
PRODL                             00000FF3
PRSEG0                            00000000
PRSEG1                            00000001
PRSEG2                            00000002
PRSEN                             00000007
PSA                               00000003
PSP0                              00000000
PSP1                              00000001
PSP2                              00000002
PSP3                              00000003
PSP4                              00000004
PSP5                              00000005
PSP6                              00000006
PSP7                              00000007
PSPIE                             00000007
PSPIF                             00000007
PSPIP                             00000007
PSPMODE                           00000004
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
QSCC_BITS_INC                     
QSCC_CMD5_START                   00001450
QSCC_MAIN                         000000CC
QSCC_PORT                         (1)
QSCC_SENS_END                     000000B6
QSCC_START                        00000000
QS_BTN_TMR_T                      00000000
QS_BTN_TMR_U                      00000000
QS_FLAG_DOING120                  00000002
QS_FLAG_ON_120_S                  00000001
QS_FLAG_SCANNING                  00000000
QS_SENS_CONF                      00000028
QS_SENS_MASK                      0000003F
QS_SENS_PORT                      00000F80
QS_SENS_STAND                     00000006
QS_STOP_SCANNER                   00001A0E
QUIZSHOW_DATA                     00000C00
QUIZSHOW_FLAGS                    00000000
QUIZSHOW_LCKTM                    00000C46
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RB0_B0DLC                         00000004
RB0_B1DLC                         00000004
RB0_B2DLC                         00000004
RB0_B3DLC                         00000004
RB0_B4DLC                         00000004
RB0_B5DLC                         00000004
RB0_DDRB                          00000000
RB0_PORTB                         00000000
RB0_RXB0DLC                       00000004
RB0_RXB1DLC                       00000004
RB0_TRISB                         00000000
RB1_B0DLC                         00000005
RB1_B1DLC                         00000005
RB1_B2DLC                         00000005
RB1_B3DLC                         00000005
RB1_B4DLC                         00000005
RB1_B5DLC                         00000005
RB1_DDRB                          00000001
RB1_PORTB                         00000001
RB1_RXB0DLC                       00000005
RB1_RXB1DLC                       00000005
RB1_TRISB                         00000001
RB2                               00000002
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 116


SYMBOL TABLE
  LABEL                             VALUE 

RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCIP                              00000005
RCON                              00000FD0
RCREG                             00000FAE
RCSTA                             00000FAB
RD                                00000000
RD0                               00000000
RD1                               00000001
RD16                              00000007
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
RE3                               00000003
READ_WRITE                        00000002
REC0                              00000000
REC1                              00000001
REC2                              00000002
REC3                              00000003
REC4                              00000004
REC5                              00000005
REC6                              00000006
REC7                              00000007
REQOP0                            00000005
REQOP1                            00000006
REQOP2                            00000007
RESRB0                            00000004
RESRB1                            00000005
RI                                00000004
ROLE_MASTER                       (0)
ROLE_SLAVE                        (0)
ROLE_STANDALONE                   (1)
RSEN                              00000001
RTREN                             00000002
RTRRO                             00000005
RX                                00000007
RX9                               00000006
RX9D                              00000000
RXB0CON                           00000F60
RXB0D0                            00000F66
RXB0D00                           00000000
RXB0D01                           00000001
RXB0D02                           00000002
RXB0D03                           00000003
RXB0D04                           00000004
RXB0D05                           00000005
RXB0D06                           00000006
RXB0D07                           00000007
RXB0D1                            00000F67
RXB0D10                           00000000
RXB0D11                           00000001
RXB0D12                           00000002
RXB0D13                           00000003
RXB0D14                           00000004
RXB0D15                           00000005
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 117


SYMBOL TABLE
  LABEL                             VALUE 

RXB0D16                           00000006
RXB0D17                           00000007
RXB0D2                            00000F68
RXB0D20                           00000000
RXB0D21                           00000001
RXB0D22                           00000002
RXB0D23                           00000003
RXB0D24                           00000004
RXB0D25                           00000005
RXB0D26                           00000006
RXB0D27                           00000007
RXB0D3                            00000F69
RXB0D30                           00000000
RXB0D31                           00000001
RXB0D32                           00000002
RXB0D33                           00000003
RXB0D34                           00000004
RXB0D35                           00000005
RXB0D36                           00000006
RXB0D37                           00000007
RXB0D4                            00000F6A
RXB0D40                           00000000
RXB0D41                           00000001
RXB0D42                           00000002
RXB0D43                           00000003
RXB0D44                           00000004
RXB0D45                           00000005
RXB0D46                           00000006
RXB0D47                           00000007
RXB0D5                            00000F6B
RXB0D50                           00000000
RXB0D51                           00000001
RXB0D52                           00000002
RXB0D53                           00000003
RXB0D54                           00000004
RXB0D55                           00000005
RXB0D56                           00000006
RXB0D57                           00000007
RXB0D6                            00000F6C
RXB0D60                           00000000
RXB0D61                           00000001
RXB0D62                           00000002
RXB0D63                           00000003
RXB0D64                           00000004
RXB0D65                           00000005
RXB0D66                           00000006
RXB0D67                           00000007
RXB0D7                            00000F6D
RXB0D70                           00000000
RXB0D71                           00000001
RXB0D72                           00000002
RXB0D73                           00000003
RXB0D74                           00000004
RXB0D75                           00000005
RXB0D76                           00000006
RXB0D77                           00000007
RXB0DBEN                          00000002
RXB0DBEN_FILHIT2                  00000002
RXB0DLC                           00000F65
RXB0EIDH                          00000F63
RXB0EIDL                          00000F64
RXB0IE                            00000000
RXB0IF                            00000000
RXB0IP                            00000000
RXB0OVFL                          00000007
RXB0OVFL_NOT_FIFOEMPTY            00000007
RXB0SIDH                          00000F61
RXB0SIDL                          00000F62
RXB1CON                           00000F50
RXB1D0                            00000F56
RXB1D00                           00000000
RXB1D01                           00000001
RXB1D02                           00000002
RXB1D03                           00000003
RXB1D04                           00000004
RXB1D05                           00000005
RXB1D06                           00000006
RXB1D07                           00000007
RXB1D1                            00000F57
RXB1D10                           00000000
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 118


SYMBOL TABLE
  LABEL                             VALUE 

RXB1D11                           00000001
RXB1D12                           00000002
RXB1D13                           00000003
RXB1D14                           00000004
RXB1D15                           00000005
RXB1D16                           00000006
RXB1D17                           00000007
RXB1D2                            00000F58
RXB1D20                           00000000
RXB1D21                           00000001
RXB1D22                           00000002
RXB1D23                           00000003
RXB1D24                           00000004
RXB1D25                           00000005
RXB1D26                           00000006
RXB1D27                           00000007
RXB1D3                            00000F59
RXB1D30                           00000000
RXB1D31                           00000001
RXB1D32                           00000002
RXB1D33                           00000003
RXB1D34                           00000004
RXB1D35                           00000005
RXB1D36                           00000006
RXB1D37                           00000007
RXB1D4                            00000F5A
RXB1D40                           00000000
RXB1D41                           00000001
RXB1D42                           00000002
RXB1D43                           00000003
RXB1D44                           00000004
RXB1D45                           00000005
RXB1D46                           00000006
RXB1D47                           00000007
RXB1D5                            00000F5B
RXB1D50                           00000000
RXB1D51                           00000001
RXB1D52                           00000002
RXB1D53                           00000003
RXB1D54                           00000004
RXB1D55                           00000005
RXB1D56                           00000006
RXB1D57                           00000007
RXB1D6                            00000F5C
RXB1D60                           00000000
RXB1D61                           00000001
RXB1D62                           00000002
RXB1D63                           00000003
RXB1D64                           00000004
RXB1D65                           00000005
RXB1D66                           00000006
RXB1D67                           00000007
RXB1D7                            00000F5D
RXB1D70                           00000000
RXB1D71                           00000001
RXB1D72                           00000002
RXB1D73                           00000003
RXB1D74                           00000004
RXB1D75                           00000005
RXB1D76                           00000006
RXB1D77                           00000007
RXB1DLC                           00000F55
RXB1EIDH                          00000F53
RXB1EIDL                          00000F54
RXB1IE                            00000001
RXB1IF                            00000001
RXB1IP                            00000001
RXB1OVFL                          00000006
RXB1SIDH                          00000F51
RXB1SIDL                          00000F52
RXBODBEN                          00000002
RXBP                              00000003
RXBnIE                            00000001
RXBnIF                            00000001
RXBnIP                            00000001
RXBnOVFL                          00000006
RXERRCNT                          00000F75
RXF0EIDH                          00000F02
RXF0EIDL                          00000F03
RXF0EN                            00000000
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 119


SYMBOL TABLE
  LABEL                             VALUE 

RXF0SIDH                          00000F00
RXF0SIDL                          00000F01
RXF10EIDH                         00000D76
RXF10EIDL                         00000D77
RXF10EN                           00000002
RXF10SIDH                         00000D74
RXF10SIDL                         00000D75
RXF11EIDH                         00000D7A
RXF11EIDL                         00000D7B
RXF11EN                           00000003
RXF11SIDH                         00000D78
RXF11SIDL                         00000D79
RXF12EIDH                         00000D82
RXF12EIDL                         00000D83
RXF12EN                           00000004
RXF12SIDH                         00000D80
RXF12SIDL                         00000D81
RXF13EIDH                         00000D86
RXF13EIDL                         00000D87
RXF13EN                           00000005
RXF13SIDH                         00000D84
RXF13SIDL                         00000D85
RXF14EIDH                         00000D8A
RXF14EIDL                         00000D8B
RXF14EN                           00000006
RXF14SIDH                         00000D88
RXF14SIDL                         00000D89
RXF15EIDH                         00000D92
RXF15EIDL                         00000D93
RXF15EN                           00000007
RXF15SIDH                         00000D90
RXF15SIDL                         00000D91
RXF1EIDH                          00000F06
RXF1EIDL                          00000F07
RXF1EN                            00000001
RXF1SIDH                          00000F04
RXF1SIDL                          00000F05
RXF2EIDH                          00000F0A
RXF2EIDL                          00000F0B
RXF2EN                            00000002
RXF2SIDH                          00000F08
RXF2SIDL                          00000F09
RXF3EIDH                          00000F0E
RXF3EIDL                          00000F0F
RXF3EN                            00000003
RXF3SIDH                          00000F0C
RXF3SIDL                          00000F0D
RXF4EIDH                          00000F12
RXF4EIDL                          00000F13
RXF4EN                            00000004
RXF4SIDH                          00000F10
RXF4SIDL                          00000F11
RXF5EIDH                          00000F16
RXF5EIDL                          00000F17
RXF5EN                            00000005
RXF5SIDH                          00000F14
RXF5SIDL                          00000F15
RXF6EIDH                          00000D62
RXF6EIDL                          00000D63
RXF6EN                            00000006
RXF6SIDH                          00000D60
RXF6SIDL                          00000D61
RXF7EIDH                          00000D66
RXF7EIDL                          00000D67
RXF7EN                            00000007
RXF7SIDH                          00000D64
RXF7SIDL                          00000D65
RXF8EIDH                          00000D6A
RXF8EIDL                          00000D6B
RXF8EN                            00000000
RXF8SIDH                          00000D68
RXF8SIDL                          00000D69
RXF9EIDH                          00000D72
RXF9EIDL                          00000D73
RXF9EN                            00000001
RXF9SIDH                          00000D70
RXF9SIDL                          00000D71
RXFBCON0                          00000DE0
RXFBCON1                          00000DE1
RXFBCON2                          00000DE2
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 120


SYMBOL TABLE
  LABEL                             VALUE 

RXFBCON3                          00000DE3
RXFBCON4                          00000DE4
RXFBCON5                          00000DE5
RXFBCON6                          00000DE6
RXFBCON7                          00000DE7
RXFCON0                           00000DD4
RXFCON1                           00000DD5
RXFUL                             00000007
RXFUL_TXBIF                       00000007
RXM0                              00000005
RXM0EIDH                          00000F1A
RXM0EIDL                          00000F1B
RXM0SIDH                          00000F18
RXM0SIDL                          00000F19
RXM0_RTRRO                        00000005
RXM1                              00000006
RXM1EIDH                          00000F1E
RXM1EIDL                          00000F1F
RXM1SIDH                          00000F1C
RXM1SIDL                          00000F1D
RXM1_TXABT                        00000006
RXRTR                             00000006
RXRTRRO_B0CON                     00000005
RXRTRRO_B1CON                     00000005
RXRTRRO_B2CON                     00000005
RXRTRRO_B3CON                     00000005
RXRTRRO_B4CON                     00000005
RXRTRRO_B5CON                     00000005
RXRTRRO_FILHIT3                   00000003
RXRTRRO_RXB0CON                   00000003
RXRTRRO_RXB1CON                   00000003
RXRTRRO_TXLARB                    00000005
RXRTR_TXRTR                       00000006
RXWARN                            00000001
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SAM                               00000006
SBOREN                            00000006
SCAN_DEBOUNCE                     
SCAN_DEBOUNCERS                   000000D8
SCK                               00000003
SCKP                              00000004
SCL                               00000003
SCN_DBN                           0000000A
SCN_DB_DONE_0                     0000028A
SCN_DB_DONE_1                     00000452
SCN_DB_DONE_2                     0000066E
SCN_DB_DONE_3                     00000836
SCN_DB_DONE_4                     00000A52
SCN_DB_DONE_5                     00000C1A
SCN_DB_DONE_6                     00000E36
SCN_DB_DONE_7                     00000FFE
SCN_DB_DONE_8                     0000121A
SCN_DB_DONE_9                     000013E2
SCN_DB_DOWN_0                     000001A4
SCN_DB_DOWN_1                     000003C0
SCN_DB_DOWN_2                     00000588
SCN_DB_DOWN_3                     000007A4
SCN_DB_DOWN_4                     0000096C
SCN_DB_DOWN_5                     00000B88
SCN_DB_DOWN_6                     00000D50
SCN_DB_DOWN_7                     00000F6C
SCN_DB_DOWN_8                     00001134
SCN_DB_DOWN_9                     00001350
SCN_DB_DRAIN_0                    000000E8
SCN_DB_DRAIN_1                    00000358
SCN_DB_DRAIN_2                    000004CC
SCN_DB_DRAIN_3                    0000073C
SCN_DB_DRAIN_4                    000008B0
SCN_DB_DRAIN_5                    00000B20
SCN_DB_DRAIN_6                    00000C94
SCN_DB_DRAIN_7                    00000F04
SCN_DB_DRAIN_8                    00001078
SCN_DB_DRAIN_9                    000012E8
SCN_DB_END_0                      00000348
SCN_DB_END_1                      000004BC
SCN_DB_END_2                      0000072C
SCN_DB_END_3                      000008A0
SCN_DB_END_4                      00000B10
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 121


SYMBOL TABLE
  LABEL                             VALUE 

SCN_DB_END_5                      00000C84
SCN_DB_END_6                      00000EF4
SCN_DB_END_7                      00001068
SCN_DB_END_8                      000012D8
SCN_DB_END_9                      0000144C
SCN_DB_RST_LCK_0                  000000EC
SCN_DB_RST_LCK_1                  0000035C
SCN_DB_RST_LCK_2                  000004D0
SCN_DB_RST_LCK_3                  00000740
SCN_DB_RST_LCK_4                  000008B4
SCN_DB_RST_LCK_5                  00000B24
SCN_DB_RST_LCK_6                  00000C98
SCN_DB_RST_LCK_7                  00000F08
SCN_DB_RST_LCK_8                  0000107C
SCN_DB_RST_LCK_9                  000012EC
SCS0                              00000000
SCS1                              00000001
SDA                               00000004
SDFLC                             00000DD8
SDI                               00000004
SDO                               00000005
SEG1PH0                           00000003
SEG1PH1                           00000004
SEG1PH2                           00000005
SEG2PH0                           00000000
SEG2PH1                           00000001
SEG2PH2                           00000002
SEG2PHT                           00000007
SEG2PHTS                          00000007
SEN                               00000000
SENDB                             00000003
SET_ALL_BUTTON_LIGHTS             000014CC
SET_SSR_BLINK_FADE                
SET_SSR_DMX_MODE                  
SET_SSR_NORMAL_MODE               
SET_SSR_OFF                       
SET_SSR_PATTERN                   
SET_SSR_RAPID_FADE                
SET_SSR_RAPID_FLASH               
SET_SSR_SLOW_FADE                 
SET_SSR_SLOW_FLASH                
SET_SSR_STEADY                    
SET_SSR_VALUE                     
SID0                              00000005
SID1                              00000006
SID10                             00000007
SID2                              00000007
SID3                              00000000
SID4                              00000001
SID5                              00000002
SID6                              00000003
SID7                              00000004
SID8                              00000005
SID9                              00000006
SJW0                              00000006
SJW1                              00000007
SLEEP_MODE                        00000003
SLICE_UPD                         00000005
SMP                               00000007
SP0                               00000000
SP1                               00000001
SP2                               00000002
SP3                               00000003
SP4                               00000004
SPBRG                             00000FAF
SPBRGH                            00000FB0
SPEN                              00000007
SREN                              00000005
SRR                               00000004
SS                                00000005
SSPADD                            00000FC8
SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 122


SYMBOL TABLE
  LABEL                             VALUE 

SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000FC7
SSR_00_COUNTER                    00000000
SSR_00_FLAGS                      00000000
SSR_00_SPEED                      00000000
SSR_00_STEP                       00000000
SSR_00_VALUE                      00000000
SSR_DATA_BANK                     00000400
SSR_MAX                           00000013
SSR_STATE                         00000000
STATUS                            00000FD8
STKFUL                            00000007
STKOVF                            00000007
STKPTR                            00000FFC
STKPTR0                           00000000
STKPTR1                           00000001
STKPTR2                           00000002
STKPTR3                           00000003
STKPTR4                           00000004
STKUNF                            00000006
SWDTE                             00000000
SWDTEN                            00000000
SYNC                              00000004
T08BIT                            00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0IP                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0PS3                             00000003
T0SE                              00000004
T13CKI                            00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1INSYNC                          00000002
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1RUN                             00000006
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FCA
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
T3CCP1                            00000003
T3CCP2                            00000006
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3ECCP1                           00000006
T3NSYNC                           00000002
T3SYNC                            00000002
TABLAT                            00000FF5
TBLPTR                            00000FF6
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
TEC0                              00000000
TEC1                              00000001
TEC2                              00000002
TEC3                              00000003
TEC4                              00000004
TEC5                              00000005
TEC6                              00000006
TEC7                              00000007
TEST_BUTTON                       00000005
TEST_MODE                         00000000
TEST_PAUSE                        00000007
TEST_UPD                          00000006
TMR0                              00000FD6
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 123


SYMBOL TABLE
  LABEL                             VALUE 

TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0ON                            00000007
TMR1                              00000FCE
TMR1CS                            00000001
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1ON                            00000000
TMR2                              00000FCC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2ON                            00000002
TMR3                              00000FB2
TMR3CS                            00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3ON                            00000000
TO                                00000003
TOS                               00000FFD
TOSH                              00000FFE
TOSL                              00000FFD
TOSU                              00000FFF
TRISA                             00000F92
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000F93
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000F94
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000F95
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000F96
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRIS_T_R                          00000F94
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX                                00000006
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 124


SYMBOL TABLE
  LABEL                             VALUE 

TX9                               00000006
TX9D                              00000000
TXABT                             00000006
TXB0CON                           00000F40
TXB0D0                            00000F46
TXB0D00                           00000000
TXB0D01                           00000001
TXB0D02                           00000002
TXB0D03                           00000003
TXB0D04                           00000004
TXB0D05                           00000005
TXB0D06                           00000006
TXB0D07                           00000007
TXB0D1                            00000F47
TXB0D10                           00000000
TXB0D11                           00000001
TXB0D12                           00000002
TXB0D13                           00000003
TXB0D14                           00000004
TXB0D15                           00000005
TXB0D16                           00000006
TXB0D17                           00000007
TXB0D2                            00000F48
TXB0D20                           00000000
TXB0D21                           00000001
TXB0D22                           00000002
TXB0D23                           00000003
TXB0D24                           00000004
TXB0D25                           00000005
TXB0D26                           00000006
TXB0D27                           00000007
TXB0D3                            00000F49
TXB0D30                           00000000
TXB0D31                           00000001
TXB0D32                           00000002
TXB0D33                           00000003
TXB0D34                           00000004
TXB0D35                           00000005
TXB0D36                           00000006
TXB0D37                           00000007
TXB0D4                            00000F4A
TXB0D40                           00000000
TXB0D41                           00000001
TXB0D42                           00000002
TXB0D43                           00000003
TXB0D44                           00000004
TXB0D45                           00000005
TXB0D46                           00000006
TXB0D47                           00000007
TXB0D5                            00000F4B
TXB0D50                           00000000
TXB0D51                           00000001
TXB0D52                           00000002
TXB0D53                           00000003
TXB0D54                           00000004
TXB0D55                           00000005
TXB0D56                           00000006
TXB0D57                           00000007
TXB0D6                            00000F4C
TXB0D60                           00000000
TXB0D61                           00000001
TXB0D62                           00000002
TXB0D63                           00000003
TXB0D64                           00000004
TXB0D65                           00000005
TXB0D66                           00000006
TXB0D67                           00000007
TXB0D7                            00000F4D
TXB0D70                           00000000
TXB0D71                           00000001
TXB0D72                           00000002
TXB0D73                           00000003
TXB0D74                           00000004
TXB0D75                           00000005
TXB0D76                           00000006
TXB0D77                           00000007
TXB0DLC                           00000F45
TXB0EIDH                          00000F43
TXB0EIDL                          00000F44
TXB0IE                            00000002
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 125


SYMBOL TABLE
  LABEL                             VALUE 

TXB0IF                            00000002
TXB0IP                            00000002
TXB0SIDH                          00000F41
TXB0SIDL                          00000F42
TXB1CON                           00000F30
TXB1D0                            00000F36
TXB1D00                           00000000
TXB1D01                           00000001
TXB1D02                           00000002
TXB1D03                           00000003
TXB1D04                           00000004
TXB1D05                           00000005
TXB1D06                           00000006
TXB1D07                           00000007
TXB1D1                            00000F37
TXB1D10                           00000000
TXB1D11                           00000001
TXB1D12                           00000002
TXB1D13                           00000003
TXB1D14                           00000004
TXB1D15                           00000005
TXB1D16                           00000006
TXB1D17                           00000007
TXB1D2                            00000F38
TXB1D20                           00000000
TXB1D21                           00000001
TXB1D22                           00000002
TXB1D23                           00000003
TXB1D24                           00000004
TXB1D25                           00000005
TXB1D26                           00000006
TXB1D27                           00000007
TXB1D3                            00000F39
TXB1D30                           00000000
TXB1D31                           00000001
TXB1D32                           00000002
TXB1D33                           00000003
TXB1D34                           00000004
TXB1D35                           00000005
TXB1D36                           00000006
TXB1D37                           00000007
TXB1D4                            00000F3A
TXB1D40                           00000000
TXB1D41                           00000001
TXB1D42                           00000002
TXB1D43                           00000003
TXB1D44                           00000004
TXB1D45                           00000005
TXB1D46                           00000006
TXB1D47                           00000007
TXB1D5                            00000F3B
TXB1D50                           00000000
TXB1D51                           00000001
TXB1D52                           00000002
TXB1D53                           00000003
TXB1D54                           00000004
TXB1D55                           00000005
TXB1D56                           00000006
TXB1D57                           00000007
TXB1D6                            00000F3C
TXB1D60                           00000000
TXB1D61                           00000001
TXB1D62                           00000002
TXB1D63                           00000003
TXB1D64                           00000004
TXB1D65                           00000005
TXB1D66                           00000006
TXB1D67                           00000007
TXB1D7                            00000F3D
TXB1D70                           00000000
TXB1D71                           00000001
TXB1D72                           00000002
TXB1D73                           00000003
TXB1D74                           00000004
TXB1D75                           00000005
TXB1D76                           00000006
TXB1D77                           00000007
TXB1DLC                           00000F35
TXB1EIDH                          00000F33
TXB1EIDL                          00000F34
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 126


SYMBOL TABLE
  LABEL                             VALUE 

TXB1IE                            00000003
TXB1IF                            00000003
TXB1IP                            00000003
TXB1SIDH                          00000F31
TXB1SIDL                          00000F32
TXB2CON                           00000F20
TXB2D0                            00000F26
TXB2D00                           00000000
TXB2D01                           00000001
TXB2D02                           00000002
TXB2D03                           00000003
TXB2D04                           00000004
TXB2D05                           00000005
TXB2D06                           00000006
TXB2D07                           00000007
TXB2D1                            00000F27
TXB2D10                           00000000
TXB2D11                           00000001
TXB2D12                           00000002
TXB2D13                           00000003
TXB2D14                           00000004
TXB2D15                           00000005
TXB2D16                           00000006
TXB2D17                           00000007
TXB2D2                            00000F28
TXB2D20                           00000000
TXB2D21                           00000001
TXB2D22                           00000002
TXB2D23                           00000003
TXB2D24                           00000004
TXB2D25                           00000005
TXB2D26                           00000006
TXB2D27                           00000007
TXB2D3                            00000F29
TXB2D30                           00000000
TXB2D31                           00000001
TXB2D32                           00000002
TXB2D33                           00000003
TXB2D34                           00000004
TXB2D35                           00000005
TXB2D36                           00000006
TXB2D37                           00000007
TXB2D4                            00000F2A
TXB2D40                           00000000
TXB2D41                           00000001
TXB2D42                           00000002
TXB2D43                           00000003
TXB2D44                           00000004
TXB2D45                           00000005
TXB2D46                           00000006
TXB2D47                           00000007
TXB2D5                            00000F2B
TXB2D50                           00000000
TXB2D51                           00000001
TXB2D52                           00000002
TXB2D53                           00000003
TXB2D54                           00000004
TXB2D55                           00000005
TXB2D56                           00000006
TXB2D57                           00000007
TXB2D6                            00000F2C
TXB2D60                           00000000
TXB2D61                           00000001
TXB2D62                           00000002
TXB2D63                           00000003
TXB2D64                           00000004
TXB2D65                           00000005
TXB2D66                           00000006
TXB2D67                           00000007
TXB2D7                            00000F2D
TXB2D70                           00000000
TXB2D71                           00000001
TXB2D72                           00000002
TXB2D73                           00000003
TXB2D74                           00000004
TXB2D75                           00000005
TXB2D76                           00000006
TXB2D77                           00000007
TXB2DLC                           00000F25
TXB2EIDH                          00000F23
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 127


SYMBOL TABLE
  LABEL                             VALUE 

TXB2EIDL                          00000F24
TXB2IE                            00000004
TXB2IF                            00000004
TXB2IP                            00000004
TXB2SIDH                          00000F21
TXB2SIDL                          00000F22
TXBIE                             00000DFC
TXBIF                             00000007
TXBIFBXB2CON                      00000007
TXBIFTXB1CON                      00000007
TXBIP                             00000004
TXBO                              00000005
TXBP                              00000004
TXBnIE                            00000004
TXBnIF                            00000004
TXBnIP                            00000004
TXCKP                             00000004
TXEN                              00000005
TXERR                             00000004
TXERRCNT                          00000F76
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXLARB                            00000005
TXPRI0                            00000000
TXPRI1                            00000001
TXREG                             00000FAD
TXREQ                             00000003
TXRTR                             00000006
TXSTA                             00000FAC
TXWARN                            00000002
UA                                00000001
VCFG0                             00000004
VCFG1                             00000005
VDIRMAG                           00000007
VREFM                             00000002
VREFP                             00000003
W                                 00000000
WAKDIS                            00000007
WAKFIL                            00000006
WAKIE                             00000006
WAKIF                             00000006
WAKIP                             00000006
WCOL                              00000007
WDTCON                            00000FD1
WIN0                              00000001
WIN0_FP1                          00000001
WIN1                              00000002
WIN1_FP2                          00000002
WIN2                              00000003
WIN2_FP3                          00000003
WR                                00000001
WREG                              00000FE8
WREN                              00000002
WRERR                             00000003
WUE                               00000001
YY_BUF_LEN                        000000C8
Z                                 00000002
_BBSIZ_1024_4L                    000000CF
_BBSIZ_2048_4L                    000000DF
_BBSIZ_4096_4L                    000000EF
_BOREN_BOACTIVE_2L                000000FD
_BOREN_BOHW_2L                    000000FF
_BOREN_OFF_2L                     000000F9
_BOREN_SBORENCTRL_2L              000000FB
_BORV_0_2L                        000000E7
_BORV_1_2L                        000000EF
_BORV_2_2L                        000000F7
_BORV_3_2L                        000000FF
_CONFIG1H                         00300001
_CONFIG2H                         00300003
_CONFIG2L                         00300002
_CONFIG3H                         00300005
_CONFIG4L                         00300006
_CONFIG5H                         00300009
_CONFIG5L                         00300008
_CONFIG6H                         0030000B
_CONFIG6L                         0030000A
_CONFIG7H                         0030000D
_CONFIG7L                         0030000C
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 128


SYMBOL TABLE
  LABEL                             VALUE 

_CP0_OFF_5L                       000000FF
_CP0_ON_5L                        000000FE
_CP1_OFF_5L                       000000FF
_CP1_ON_5L                        000000FD
_CP2_OFF_5L                       000000FF
_CP2_ON_5L                        000000FB
_CP3_OFF_5L                       000000FF
_CP3_ON_5L                        000000F7
_CP4_OFF_5L                       000000FF
_CP4_ON_5L                        000000EF
_CP5_OFF_5L                       000000FF
_CP5_ON_5L                        000000DF
_CPB_OFF_5H                       000000FF
_CPB_ON_5H                        000000BF
_CPD_OFF_5H                       000000FF
_CPD_ON_5H                        0000007F
_DEBUG_OFF_4L                     000000FF
_DEBUG_ON_4L                      0000007F
_DEVID1                           003FFFFE
_DEVID2                           003FFFFF
_EBTR0_OFF_7L                     000000FF
_EBTR0_ON_7L                      000000FE
_EBTR1_OFF_7L                     000000FF
_EBTR1_ON_7L                      000000FD
_EBTR2_OFF_7L                     000000FF
_EBTR2_ON_7L                      000000FB
_EBTR3_OFF_7L                     000000FF
_EBTR3_ON_7L                      000000F7
_EBTR4_OFF_7L                     000000FF
_EBTR4_ON_7L                      000000EF
_EBTR5_OFF_7L                     000000FF
_EBTR5_ON_7L                      000000DF
_EBTRB_OFF_7H                     000000FF
_EBTRB_ON_7H                      000000BF
_FCMEN_OFF_1H                     000000BF
_FCMEN_ON_1H                      000000FF
_IDLOC0                           00200000
_IDLOC1                           00200001
_IDLOC2                           00200002
_IDLOC3                           00200003
_IDLOC4                           00200004
_IDLOC5                           00200005
_IDLOC6                           00200006
_IDLOC7                           00200007
_IESO_OFF_1H                      0000007F
_IESO_ON_1H                       000000FF
_LPT1OSC_OFF_3H                   000000FB
_LPT1OSC_ON_3H                    000000FF
_LVP_OFF_4L                       000000FB
_LVP_ON_4L                        000000FF
_MCLRE_OFF_3H                     0000007F
_MCLRE_ON_3H                      000000FF
_OSC_ECIO_1H                      000000F5
_OSC_EC_1H                        000000F4
_OSC_HSPLL_1H                     000000F6
_OSC_HS_1H                        000000F2
_OSC_IRCIO67_1H                   000000F8
_OSC_IRCIO7_1H                    000000F9
_OSC_LP_1H                        000000F0
_OSC_RCIO_1H                      000000F7
_OSC_RC_1H                        000000F3
_OSC_XT_1H                        000000F1
_PBADEN_OFF_3H                    000000FD
_PBADEN_ON_3H                     000000FF
_PWRT_OFF_2L                      000000FF
_PWRT_ON_2L                       000000FE
_STVREN_OFF_4L                    000000FE
_STVREN_ON_4L                     000000FF
_WDTPS_1024_2H                    000000F5
_WDTPS_128_2H                     000000EF
_WDTPS_16384_2H                   000000FD
_WDTPS_16_2H                      000000E9
_WDTPS_1_2H                       000000E1
_WDTPS_2048_2H                    000000F7
_WDTPS_256_2H                     000000F1
_WDTPS_2_2H                       000000E3
_WDTPS_32768_2H                   000000FF
_WDTPS_32_2H                      000000EB
_WDTPS_4096_2H                    000000F9
_WDTPS_4_2H                       000000E5
MPASM 5.66              ../QUIZSHOW_MAIN.ASM   10-13-2016  20:27:27         PAGE 129


SYMBOL TABLE
  LABEL                             VALUE 

_WDTPS_512_2H                     000000F3
_WDTPS_64_2H                      000000ED
_WDTPS_8192_2H                    000000FB
_WDTPS_8_2H                       000000E7
_WDT_OFF_2H                       000000FE
_WDT_ON_2H                        000000FF
_WRT0_OFF_6L                      000000FF
_WRT0_ON_6L                       000000FE
_WRT1_OFF_6L                      000000FF
_WRT1_ON_6L                       000000FD
_WRT2_OFF_6L                      000000FF
_WRT2_ON_6L                       000000FB
_WRT3_OFF_6L                      000000FF
_WRT3_ON_6L                       000000F7
_WRT4_OFF_6L                      000000FF
_WRT4_ON_6L                       000000EF
_WRT5_OFF_6L                      000000FF
_WRT5_ON_6L                       000000DF
_WRTB_OFF_6H                      000000FF
_WRTB_ON_6H                       000000BF
_WRTC_OFF_6H                      000000FF
_WRTC_ON_6H                       000000DF
_WRTD_OFF_6H                      000000FF
_WRTD_ON_6H                       0000007F
_XINST_OFF_4L                     000000BF
_XINST_ON_4L                      000000FF
__18F4685                         00000001

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

