#!/usr/bin/env python
import sys, re

document_codes = {
	'a': 'lumos_dc_24_assembly',
	'i': 'lumos_dc_24_installation',
	'u': 'lumos_ssr_user_manual',
}
external_references = {}

reference_pattern = re.compile(r'^\\newlabel\{(?P<label>.+?)\}\{\{\\M@TitleReference \{(?P<section>.*?)\}\{(?P<title>.*?)\}\}\{(?P<page>\d+)\}\}$')

sys.stdout.write("Scanning References from documents...\n")
for tag, base_name in document_codes.items():
	sys.stdout.write("[{0}".format(base_name))
	local_count = 0
	with open(base_name + ".aux") as aux_file:
		for reference in aux_file:
			match = reference_pattern.match(reference)
			if match:
				key = tag + ':' + match.group('label')
				if key in external_references:
					sys.stdout.write("\nWARNING! Label {0} defined multiple times in {1}.tex!\n".format(
						match.group('label'), base_name))
				else:
					external_references[key] = match
					local_count += 1
	sys.stdout.write(":{0}]".format(local_count))
sys.stdout.write("\n[->external_refs.tex")
with open("external_refs.tex", "w") as output_file:
	for tag, match in external_references.items():
		output_file.write(r'\newlabel{{{0}}}{{{{\M@TitleReference {{{2}}}{{{3}}}}}{{{1}}}}}'.format(
			tag, match.group('page'), match.group('section'), match.group('title')) + '\n')
sys.stdout.write("]\n")
