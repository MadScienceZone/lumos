______________________________________________________________________________
Lumos 0.5 "RELEASE_NOTES"

CONTENTS
  Current Release
  Previous Versions
  Future Versions
  About Version Numbers and Release Notations

______________________________________________________________________________
CURRENT RELEASE:

  Lumos 0.6 [TBD]
        Bug Fixes:

	  * Fixed numerous small bugs and inconsistencies.  All unit tests
            now pass.

	  * Made it a non-fatal condition if the serial and/or parallel 
            drivers are missing, until the program actually tries to use them
            (so if you don't have any parallel port-driven devices, you don't
            need to have pyparallel installed.  Likewise if you're just 
            editing but not actually playing a sequence).

          * Constructors for Network objects now correctly handles non-string
            data types read from saved configuration profiles.

	New Features:

	  * Added GUI configuration profile editor.

	  * Removed GFCI attribute from PowerSource objects.  Lumos really
	    never does anything with this except try to encourage you to use
	    safety features, but that's not really Lumos' job to handle in
	    software.  Ensuring safe wiring conditions is the responsibility
	    of the person doing the wiring, and is not directly relevant to
	    the separate task of designing and playing back the sequences
	    themselves.

          * Changed "power" field to "power_source" in profile configuration
	    files for channels and controllers.
      
  KNOWN ISSUES:

  	* Most of the device drivers are still untested. 
	* Only "serial" networks have been tested yet.
 	* Subordinate power sources always re-sort to alphabetical order on
	  reloading a new configuration (only affects the aesthetics of the
	  GUI display).
______________________________________________________________________________
PREVIOUS VERSIONS:
  Lumos 0.5 [10 APR 2011]
        Bug Fixes:
          * Compensated for possible timing lag between audio playback and
            the light sequencing via addition of the --skew (-s) option to
            lplay.

  KNOWN ISSUES:
  	* Most of the device drivers are still untested. 
	* Only "serial" networks have been tested yet.
	* The unit tests need to be updated and completed, not all are passing.

  Lumos 0.5a1 [04 DEC 2011]
    **ALPHA TEST RELEASE**

	Bug Fixes:
	  * Fixed a problem where the "dimmer" flag in the show configuration
  	    was not being checked, so channels were able to be dimmed even if
	    tagged as non-dimmable.

	New Features:
	  * Power sources can now be plugged into each other as "subordinate"
 	    power sources.  This allows for main breaker panels feeding sub-
	    panels feeding power strips, and even for the case where a single
	    controller may have multiple circuits feeding channels separately
	    (as is the case with the Lumos hardware controller).  This way,
	    each device has its own power rating and tools like lcheck and
	    the power meter can flag possible overloads at every stage of
	    the power distribution system.

	  * Channels may now be assigned their own power sources, rather than
	    all channels in a particular controller being from a single
	    source.  This is important for most X-10 devices (which may each
 	    be plugged into an arbitrary power circuit) and the Lumos
	    controller (which allows multiple power circuits to be controlled).

	  * In the core libraries, the methods which change channel states
	    accept an optional boolean parameter "force".  This generally
	    defaults to False, which provides the previous behavior of these
	    methods--updates may be optimized away if the channel is already
	    at the requested (raw hardware) level.  If force is True, a
	    command is unconditionally sent to the device anyway.  This is
	    helpful if for some reason the controller/channel objects are
	    not aware of the true state of the output channel (such as when
	    a Lumos program is started but the controller is already outputting
	    various levels based on previous commands it received from another
	    source).

	  * Added the "ssrctl" command to manually adjust the output levels
	    of the show's controller units.  May be used interactively or
	    as a batch of channel updates on the command line.  This may be
	    used experimentally or as a way to script otherwise static
	    lighting cues using a shell script, batch file, or something
	    similar.

	  * Added the "lpower" command.  This is a "power meter" which 
	    estimates the power consumed by the show during a given
	    sequence, reporting out the total number of kilowatt hours
	    and event-by-event current loads for the power sources
	    supplying the show.  Graphing capability is not yet implemented
	    but expected in the future.  The data produced may be graphed
	    by an external tool such as gnuplot or a spreadsheet program.

  KNOWN ISSUES:
  	* Most of the device drivers are still untested. 
	* Only "serial" networks have been tested yet.
	* The unit tests need to be updated and completed, not all are passing.

______________________________________________________________________________
PREVIOUS VERSIONS:
  Lumos 0.4a1 [30 November 2011]
    **ALPHA TEST RELEASE**

	Additions:
	  * Introduced sequence file format V3 which is idential to V2 except
	    it adds support for audio tracks in the sequence.
	  * Vixen2lumos will recognize an audio file attached to the Vixen
	    sequence and include it in the V3 Lumos sequence file it writes.
 	  * Lumos code will read either V2 or V3 files, but always writes V3.
	  * Lplay will now play the audio track attacked to the sequence files
	    when running the sequence.
	  * The "48ssr" controller has been renamed "lumos".  The older name
	    is deprecated but still recognized (for now).
	  * Added a new bin utility, "ssrctl" which allows manual setting
	    of channel outputs, interactively or in batch (from the command 
	    line)
	  * Changed the Windows distribution to have a .py extension on the
	    executable scripts, so Windows will be able to execute them directly.
		The user would still need to have the Python script directory in their
		PATH, however.

	New Dependencies:
	  * Now requires the pygame module.

  KNOWN ISSUES:
  	* Most of the device drivers are still untested. 
	* Only "serial" networks have been tested yet.
	   -- serialbit, parallel and parbit networks have not yet been finished.

  Lumos 0.3a3 [23 January 2009]
    **ALPHA TEST RELEASE**

	Additions:
	  * Change to implementation of Lumos.Show class which makes it
	    easier for new classes to extend Lumos.Show.

  KNOWN ISSUES:
  	* Most of the device drivers are still untested. 
	* Only "serial" networks have been tested yet.
	   -- serialbit, parallel and parbit networks have not yet been finished.


  Lumos 0.3a2 [04 January 2009]
    **ALPHA TEST RELEASE**
    Bug fixes: 
	  * lcheck wasn't iterating over channels correctly for some kinds
	    of controllers.
	
	Additions:
	  * Created first draft of Lumos User's Guide document.

  KNOWN ISSUES:
  	* Most of the device drivers are still untested. 
	* Only "serial" networks have been tested yet.
	   -- serialbit, parallel and parbit networks have not yet been finished.

  Lumos 0.3a1 [30 December 2008]
    **ALPHA TEST RELEASE**
    This product is still in ACTIVE DEVELOPMENT and is released for 
	evaluation and testing purposes, not for actual production use.

    Newer design features over previous versions.  
	Final product name "Lumos" chosen and SourceForge project created.
    Added separate device drivers and the ability to easily add more kinds 
	of controllers (Lumos 0.1~0.2 was designed to drive the author's own 
	"48SSR" controller circuits.)
	Added separate network drivers, including bit- and byte-at-once 
	concepts for serial and parallel interfaces.
	Added Lumos sequence import utility.
	Much refactoring of old code, bugs fixed, more unit tests and docs.

  KNOWN ISSUES:
  	* Most of the device drivers are still untested. 
	* Only "serial" networks have been tested yet.
	   -- serialbit, parallel and parbit networks have not yet been finished.

  Lumos 0.2 [2006]
    Previously known by internal working title "Aurora 1.1"; never released
	for public use.  Incremental improvements over the 0.1 product before
	the newer architecture introduced for 0.3.

  Lumos 0.1 [2005]
    Previously known by internal working title "Aurora 1.0"; never released
	for public use.  Included some basic sequence playback functionality,
	using a CSV file format with the intent of using a spreadsheet as a scene
	editor.  (Note that the Lumos 1.0 CSV "V2" sequence file format is 
	completely redesigned and incompatible with this older "V1" format.)

______________________________________________________________________________
FUTURE VERSIONS:
  Lumos 1.0 [expected 2009]
    This will be the first product release when enough basic functionality
	has been implemented to call it a fully usable product.

______________________________________________________________________________
About Version Numbers and Release Notations:
  Lumos version numbers consist of two or three numbers separated by 
  dots (".").  These are not decimal points--the next release after 1.9 
  would be 1.10.  The first number is the MAJOR RELEASE NUMBER.  This 
  number is zero (0) during initial development, and will change to one
  (1) for the first actual product release.  Thereafter, it will increment
  every time a major change is made to the Lumos program functionality, 
  structure, architecture, etc.  The second number is the MINOR RELEASE
  NUMBER.  This is set to zero (0) every time the major release number
  changes, and increments thereafter when minor changes are made to program
  functionality.  An optional third number is the PATCH RELEASE NUMBER,
  and is incremented when a defect-fix change is made with no added features.
  Thus, you can generally assume that a release called 1.5.2 will look and
  act the same as 1.5 and 1.5.1 did, except that it should be a more correct
  implementation (i.e., corrected for defects discovered in the previous 
  versions), while 1.6 would have at least some minor change to its feature
  set. 

  In addition, version numberss are followed by a notation indicating what
  level of stability and verification it has attained:
    a1, a2, ...   -- ALPHA release #1, #2, etc.  This is a release of code
	                 under active development, and not considered stable at 
					 all.  Anything at all may change at any time during
					 the alpha stage.
	b1, b2, ...   -- BETA test release #1, #2, etc.  The product is nearing
	                 release condition, and should only change to fix bugs.
					 It has not yet been considered to be stable, nor
					 intended for use other than for testing purposes.
	pr1, pr2, ... -- PRE-RELEASE release #1, #2, etc.  Final testing to 
	                 discover any issues before officially releasing the
					 product for general use.
					 
  These are in chronological order (so a product version 1.5.2 would progress
  from 1.5.2a1 to 1.5.2a2, 1.5.2a3, ..., 1.5.2b1, ..., 1.5.2pr1, ..., and 
  finally 1.5.2), and changes (generally only defect corrections) may be 
  introduced as the code moves down this list.  Generally speaking, the code 
  should not be put into real production use until it gets to the "RELEASE" 
  stage.

  Notwithstanding our best good-faith effort to ensure the quality of this
  software, and the use of terms like "EXPERIMENTAL", "RELEASE", etc., this
  software and all accompanying materials are provided "AS-IS" with no 
  warranty of any kind whatsoever to the extent allowed by applicable law
  (see LICENSE file for full details).
