.TH VIXEN2LUMOS 1 "Lumos" "Software Alchemy" "User Commands"
.SH NAME
vixen2lumos \- Convert Vixen-format sequence file to Lumos format
.SH SYNOPSIS
.B vixen2lumos
.RB [ \-vz ]
.B \-c
.I conf
.B \-m
.I mapfile
.RB [ \-i
.IR vixenfile ]
.RB [ \-o
.IR lumosfile ]
.br
.B vixen2lumos
.RB [ \-v ]
.B \-\-info
.BI \-\-input= vixenfile
.br
.B vixen2lumos
.RB [ \-v ]
.BI \-\-genmap= mapfile
.BI \-\-input= vixenfile
.br
.B vixen2lumos 
.B \-\-help
.SH DESCRIPTION
.LP
This is a contributed utility for converting sequence files produced by the
Vixen program into Lumos sequence files, such as could be read by Lumos'
sequence editor or playback programs.  This is intended to make it easier
for Vixen users to add Lumos to their tool set and retain the use of their
existing sequences.  For example, you could decide to continue using Vixen
for creation and editing of sequences, and for playback on Windows systems,
but also use Lumos for playback on other systems.
.LP
Before you can import a Vixen sequence into your Lumos show, you need to
set up Lumos for that show.  At a minimum, you must define the show 
configuration file (which designates the collection of controllers and
which of their channels will be used, and what they will control, power
attachments, etc.), and also figure out which Lumos channel corresponds
to which Vixen channel for this sequence.
.SS "Channel Maps"
.LP
The Vixen-channel-to-Lumos-channel mapping is accomplished via a channel
map file, which you prepare.  It can be re-used for many Vixen sequences
used in the same Lumos show configuration, or separate maps may be used
for each sequence file, as appropriate.
.LP
The easiest way to get started with a channel map file is to have 
.B vixen2lumos
generate one for you.  Specifying the
.B \-\-genmap
(alternatively, 
.BR \-M )
option will accomplish this by looking at the Vixen sequence data
and creating the first half of the mapping file (i.e., a list of
all the channels mentioned in the Vixen file, with place holders
for you to change to the corresponding Lumos controller and channel
names).
.LP
The full description of the format of this file is detailed in
the manpage
.BR lumos-channel-map (5),
but in a nutshell, this is a standard comma-separated value (CSV)
format file, where each line has the form:
.RS
.IB idx , name , controller , channel
.RE
which specifies that Vixen output channel 
.RI # idx
(counting from zero), also known by the text description
.IR name ,
is to be mapped to the named Lumos
.I controller
and
.IR channel .
.LP
Either
.I idx
or
.I name
may be left blank.
.LP
This mapping file is then specified as the argument to the
.B \-\-map
(or
.BR \-m )
option when converting a Vixen sequence file.
.SS Limitations
.LP
The way Vixen and Lumos handle sequence data is different.  Vixen stores 
sequences as a set of \*(lqframes\*(rq showing the output of all channels at
each individual instant in time.  For example, if you set Vixen's sequence
interval to 100mS, the sequence file will contain the channel output levels
as they stand at each and every 100mS interval during the show.
.LP
By contrast, Lumos stores a sequence as a list of \*(lqevents\*(rq, only 
indicating when something in the show actually changes.  These events also
contain a higher-level view of what's happening in the show, so for instance
if the sequence contains an instruction to fade a particular channel from 100%
to 0% over a period of 5 seconds, that would be a single event in a Lumos
sequence file, and Lumos' sequence editor will show it as such, 
and allow you to adjust it as a single fade
event (changing its duration, etc.)  Upon playback, Lumos will emit hardware
level-change commands at whatever points in time are necessary depending on
the parameters of the event and the resolution of the hardware involved.
.LP
However, the same event in a Vixen sequence would simply be visible as
a series of different output levels for that channel, at a constant rate of 
change as determined by the Vixen interval setting (i.e., if the sequence were
generated with 100mS intervals, that 5-second fade would be recorded as a 
set of 50 output levels showing a smooth progression of what level that channel
was at every 100mS along that fade.  This means that after we convert the
sequence, Lumos will only see a series of individual level-change events
for that channel.  You will not be able to edit it as a single event on the 
Lumos side (but you can't on the Vixen side, either, although you could, in
either system, overwrite that channel's output during the same timeline with
new value(s) to change the effect there).
.LP
This isn't likely to be a 
.I huge
issue but it's good to be aware of in case you're surprised at how the Vixen
data looks inside Lumos.
.LP

.SH OPTIONS
.LP
The following options may be given to
.BR vixen2lumos .
They may be specified using either short format, e.g.:
.LP
.RS
.na
.B "vixen2lumos \-vz \-m map \-i foo.vix \-o foo.lseq \-c show.conf"
.ad
.RE
.LP
Or using the longer format, e.g.:
.LP
.RS
.na
.B "vixen2lumos \-\-verbose \-\-zero \-\-map=map \-\-input=foo.vix \-\-output=foo.lseq \-\-conf=show.conf"
.ad
.RE
.LP
Or a combination of both.
.TP 13
.BI \-c " conf"
.RB ( \-\-conf=\fIconf\fP )
Specify the show configuration file.  This describes the physical arrangement
of your show's hardware setup, including what controllers are available, and
which of their channels are used.
.TP
.B \-h
.RB ( \-\-help )
Print a basic help message and exit.
.TP
.B \-I
.RB ( \-\-info )
Print basic information about the Vixen sequence file and exit.  You might
want to use this to help generate a channel map file (but see the
.B \-\-genmap 
option.)
.TP
.BI \-i " vixenfile"
.RB ( \-\-input=\fIvixenfile\fP )
Specify the filename for the Vixen sequence file.  If this option is not
given, the sequence data will be read from the standard input.
.TP
.BI \-M " mapfile"
.RB ( \-\-genmap=\fImapfile\fP )
Generate a stub channel map file based on data gathered from the Vixen
sequence input file, and exit.  You will need to edit this to indicate
which Lumos-controlled channels each Vixen channel maps to.
.TP
.BI \-m " mapfile"
.RB ( \-\-map=\fImapfile\fP )
Specifies the name of the channel map file to use for translating Vixen
output channels to their corresponding Lumos channels.
.TP
.BI \-o " lumosfile"
.RB ( \-\-output=\fIlumosfile\fP )
Specify the output file for the Lumos sequence information.  If this option
is not given, the output is written to the standard output.
.TP
.B \-v
.RB ( \-\-verbose )
Print more detailed information about the operation of the program as
it works.  Useful for debugging problems or in case you're just curious.
.TP
.B \-\-version
Prints the version number of the program and exits.
.TP
.B \-z
.RB ( \-\-zero )
Add an initial zero-level-set event (all controllers, all channels off)
to the start of the sequence.  Without this, channels not mapped at all will
not be affected by this sequence, and channels which begin the sequence at a
non-zero value will not be turned off first.
.SH DIAGNOSTICS
.LP
Prints error messages to standard error and returns non-zero exit status
in case of errors serious enough to indicate that it was unable to complete
the requested operation.
.LP
Additionally, some warning messages are also printed to standard error but
the program will continue normally if they are not as serious (but may 
indicate a human decision about whether they are of concern.  Examples include
such issues as not all known channels being mapped across from input to 
output.
.SH "SEE ALSO"
.LP
.BR lumos (1),
.BR lumos-channel-map (5),
.BR lumos-show-conf (5).
.SH HISTORY
.LP
The
.B vixen2lumos
utility appeared in version 1.1 of Lumos.
.SH AUTHOR
.LP
Steve Willoughby, support@alchemy.com
.SH NOTE
.LP
This is an \*(lqextra\*(rq add-on utility which is not part of the core
Lumos product itself, but is provided in the hope that it will prove useful
to Lumos users.  It is considered
.B \*(lqexperimental\*(rq
quality and is not guaranteed to correctly handle every possible type
of Vixen sequence file.
