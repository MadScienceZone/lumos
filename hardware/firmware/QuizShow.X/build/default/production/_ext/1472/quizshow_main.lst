MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ; vim:set syntax=pic ts=8:
                      00002 ;
                      00003                 LIST n=90
                      00004 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00005 ;@@                                                                         @@
                      00006 ;@@  @@@   @   @  @@@@@  @@@@@                QUIZ SHOW HARDWARE CONTROLLER @@
                      00007 ;@@ @   @  @   @    @        @                FIRMWARE VERSION 4.0          @@ 
                      00008 ;@@ @   @  @   @    @       @                                               @@
                      00009 ;@@ @   @  @   @    @      @                  FOR HARDWARE REVISION 4.0     @@
                      00010 ;@@ @ @ @  @   @    @     @                   QSCC - QUIZ SHOW CONTESTANT   @@
                      00011 ;@@ @  @@  @   @    @    @                    QSRC - QUIZ SHOW REMOTE       @@
                      00012 ;@@ @@@@@   @@@   @@@@@  @@@@@                                              @@
                      00013 ;@@                                                                         @@
                      00014 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00015 ;
                      00016 ; Based on Lumos controller firmware 3.0, PWD-2 firmware (particularly 
                      00017 ; readerboard controls), and previous Quizshow hardware designs.  All of the
                      00018 ; above are copyright (c) Steven L. Willoughby, All Rights Reserved.
                      00019 ;
                      00020 ; ************                                                           /\
                      00021 ; * WARNING! *    EXPERIMENTAL DESIGN FOR EDUCATIONAL PURPOSES          /  \
                      00022 ; * WARNING! *                USE AT YOUR OWN RISK!                    / !  \
                      00023 ; ************                                                        /______\
                      00024 ; 
                      00025 ; PLEASE READ AND BE SURE YOU UNDERSTAND THE FOLLOWING SAFETY WARNINGS:
                      00026 ;
                      00027 ; THIS FIRMWARE AND THE ACCOMPANYING HARDWARE AND CONTROLLING SOFTWARE ARE
                      00028 ; EXPERIMENTAL "HOBBYIST" DESIGNS AND ARE NOT INTENDED FOR GENERAL CONSUMER USE
                      00029 ; OR FOR ANY APPLICATION WHERE THERE IS ANY POSSIBILITY OF RISK OF INJURY,
                      00030 ; PROPERTY DAMAGE, OR ANY OTHER SITUATION WHERE ANY FAILURE OF THE FIRMWARE,
                      00031 ; SOFTWARE AND/OR HARDWARE COULD RESULT IN HARM TO ANYONE OR ANYTHING.  
                      00032 ;
                      00033 ; THIS FIRMWARE, SOFTWARE, AND/OR HARDWARE ARE NOT INTENDED NOR RECOMMENDED 
                      00034 ; FOR APPLICATIONS INVOLVING LIFE SUPPORT OR SAFETY-CRITICAL SYSTEMS, RUNNING 
                      00035 ; FIREWORKS/PYROTECHNIC DISPLAYS, ETC.  
                      00036 ;
                      00037 ; BY OBTAINING AND USING THIS FIRMWARE, AND/OR ACCOMPANYING HARDWARE AND/OR 
                      00038 ; CONTROLLING SOFTWARE, YOU AGREE TO THESE CONDITIONS AND THAT TO THE FULLEST 
                      00039 ; EXTENT OF APPLICABLE LAW, THE ABOVE-LISTED ITEMS AND ALL ACCOMPANYING 
                      00040 ; DOCUMENTATION AND OTHER MATERIALS ARE PROVIDED TO YOU AS-IS, WITHOUT WARRANTY 
                      00041 ; OF ANY KIND, EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
                      00042 ; WARRANTIES OF MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE.  YOU 
                      00043 ; FURTHER AGREE TO DEFEND, INDEMNIFY, AND HOLD BLAMELESS, THE AUTHOR, STEVEN 
                      00044 ; L. Willoughby AND ANY OF HIS AGENTS AND ASSOCIATES ASSISTING WITH THIS WORK, 
                      00045 ; FROM ANY DAMAGES DIRECT OR INCIDENTAL ARISING FROM THE USE OF, OR INABILITY 
                      00046 ; TO USE, THE ABOVE-LISTED PRODUCTS.
                      00047 ; 
                      00048 ;
                      00049 ; Copyright (c) 2014 by Steven L. Willoughby, Aloha, Oregon, USA.  
                      00050 ; All Rights Reserved.  Quiz Show portions are unreleased trade secret
                      00051 ; information.
                      00052 ;
                      00053 ; Based on previous works by the same author, some of which are released
                      00054 ; under the Open Software License, version 3.0, which portions are available
                      00055 ; separately for free download.
                      00056 ;
                      00057 ; -*- -*- -* -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*-
                      00058 ;
                      00059 ; Main implementation module.
                      00060 ;
                      00061 #include "lumos_config.inc"
                      00001 ; vim:set syntax=pic ts=8:
                      00002 ;
                      00003                 LIST n=90
                      00004 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00005 ;@@                                                                         @@
                      00006 ;@@ @      @   @  @   @   @@@    @@@          LUMOS: LIGHT ORCHESTRATION    @@
                      00007 ;@@ @      @   @  @@ @@  @   @  @   @         SYSTEM FIRMWARE VERSION 3.0   @@
                      00008 ;@@ @      @   @  @ @ @  @   @  @                                           @@
                      00009 ;@@ @      @   @  @   @  @   @   @@@   @@@@@  FOR 24- AND 48-CHANNEL AC/DC  @@
                      00010 ;@@ @      @   @  @   @  @   @      @         LUMOS CONTROLLER UNITS        @@
                      00011 ;@@ @      @   @  @   @  @   @  @   @         BASED ON THE PIC18F4685 CHIP  @@
                      00012 ;@@ @@@@@   @@@   @   @   @@@    @@@                                        @@
                      00013 ;@@                                                                         @@
                      00014 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00015 ;
                      00016 ; Copyright (c) 2012, 2014 by Steven L. Willoughby, Aloha, Oregon, USA.  
                      00017 ; All Rights Reserved.  
                      00018 ; Released under the terms and conditions of the Open Software
                      00019 ; License, version 3.0.
                      00020 ;
                      00021 ; Portions based on earlier code copyright (c) 2004, 2005, 2006, 2007
                      00022 ; Steven L. Willoughby, Aloha, Oregon, USA.  All Rights Reserved.
                      00023 ;
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00024 ; -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*-
                      00025 ;
                      00026 ; Configuration options.  Set these as desired and then re-assemble the
                      00027 ; code to produce the desired version of the ROM.
                      00028 ;
                      00029 ; 
                      00030 ;==============================================================================
                      00031 ; CONFIGURATION OPTIONS
                      00032 ;==============================================================================
                      00033 #ifndef LUMOS_CONFIG_INC
                      00034 #define LUMOS_CONFIG_INC
                      00035 #define LUMOS_CHIP_MASTER       0x41    ; 48-channel master CPU
                      00036 #define LUMOS_CHIP_SLAVE        0x42    ; 48-channel slave CPU
                      00037 #define LUMOS_CHIP_STANDALONE   0x43    ; 24-channel CPU
                      00038 #define LUMOS_CHIP_4CHANNEL     0x44    ; 4-channel CPU
                      00039 #define LUMOS_CHIP_QSCC         0x45    ; Private code; custom hardware
                      00040 #define LUMOS_CHIP_QSRC         0x46    ; Private code; custom hardware
                      00041 ;
                      00042 ; Un-comment one of these to select board type for this ROM image:
                      00043 ;
                      00044 ;#define LUMOS_CHIP_TYPE                LUMOS_CHIP_MASTER
                      00045 ;#define LUMOS_CHIP_TYPE                LUMOS_CHIP_SLAVE
                      00046 ;#define LUMOS_CHIP_TYPE                LUMOS_CHIP_STANDALONE
                      00047 ;#define LUMOS_CHIP_TYPE                LUMOS_CHIP_4CHANNEL
                      00048 ;#define LUMOS_CHIP_TYPE                LUMOS_CHIP_QSCC
                      00049 #define LUMOS_CHIP_TYPE         LUMOS_CHIP_QSRC
                      00050 ;
                      00051 ;
                      00052 ;
                      00053 #define LUMOS_ZC                0x55
                      00054 #define LUMOS_INTERNAL          0x58
                      00055 
                      00056  IF LUMOS_CHIP_TYPE == LUMOS_CHIP_MASTER || LUMOS_CHIP_TYPE == LUMOS_CHIP_SLAVE
                      00057   #define LUMOS_SLICE_TIMER LUMOS_ZC
                      00058  ELSE
                      00059   IF LUMOS_CHIP_TYPE == LUMOS_CHIP_STANDALONE || LUMOS_CHIP_TYPE == LUMOS_CHIP_4CHANNEL || LUMOS_CHIP_TY
                            PE == LUMOS_CHIP_QSCC || LUMOS_CHIP_TYPE == LUMOS_CHIP_QSRC
                      00060    #define LUMOS_SLICE_TIMER LUMOS_INTERNAL
                      00061   ELSE
                      00062    ERROR "LUMOS_CHIP_TYPE must be set to MASTER, SLAVE, 4CHANNEL, or STANDALONE"
                      00063   ENDIF
                      00064  ENDIF
                      00065  
                      00066  IF LUMOS_SLICE_TIMER != LUMOS_ZC && LUMOS_SLICE_TIMER != LUMOS_INTERNAL
                      00067   ERROR "LUMOS_SLICE_TIMER must be set to ZC or INTERNAL"
                      00068  ENDIF
                      00069 
                      00070 
                      00071  IF LUMOS_CHIP_TYPE == LUMOS_CHIP_MASTER
                      00072   #define ROLE_MASTER       (1)
                      00073   #define ROLE_SLAVE        (0)
                      00074   #define ROLE_STANDALONE   (0)
                      00075   #define NUM_CHANNELS      (.48)
                      00076   #define QSCC_PORT         (0)
                      00077  ELSE
                      00078   IF LUMOS_CHIP_TYPE == LUMOS_CHIP_SLAVE
                      00079    #define ROLE_MASTER      (0)
                      00080    #define ROLE_SLAVE       (1)
                      00081    #define ROLE_STANDALONE  (0)
                      00082    #define NUM_CHANNELS     (.48)
                      00083    #define QSCC_PORT        (0)
                      00084   ELSE
                      00085    IF LUMOS_CHIP_TYPE == LUMOS_CHIP_STANDALONE
                      00086     #define ROLE_MASTER     (0)
                      00087     #define ROLE_SLAVE      (0)
                      00088     #define ROLE_STANDALONE (1)
                      00089     #define NUM_CHANNELS    (.24)
                      00090     #define QSCC_PORT       (0)
                      00091    ELSE
                      00092     IF LUMOS_CHIP_TYPE == LUMOS_CHIP_4CHANNEL
                      00093      #define ROLE_MASTER     (0)
                      00094      #define ROLE_SLAVE      (0)
                      00095      #define ROLE_STANDALONE (1)
                      00096      #define NUM_CHANNELS    (.4)
                      00097      #define QSCC_PORT       (0)
                      00098     ELSE
                      00099      IF LUMOS_CHIP_TYPE == LUMOS_CHIP_QSCC
                      00100       #define ROLE_MASTER     (0)
                      00101       #define ROLE_SLAVE      (0)
                      00102       #define ROLE_STANDALONE (1)
                      00103       #define NUM_CHANNELS    (.14)
                      00104       #define QSCC_PORT       (1)
                      00105      ELSE
                      00106       IF LUMOS_CHIP_TYPE == LUMOS_CHIP_QSRC
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00107        #define ROLE_MASTER     (0)
                      00108        #define ROLE_SLAVE      (0)
                      00109        #define ROLE_STANDALONE (1)
                      00110        #define NUM_CHANNELS    (.20)
                      00111        #define QSCC_PORT       (1)
                      00112       ELSE
                      00113        ERROR "Invalid LUMOS_CHIP_TYPE"
                      00114       ENDIF
                      00115      ENDIF
                      00116     ENDIF
                      00117    ENDIF
                      00118   ENDIF
                      00119  ENDIF
                      00120 
                      00121 #define LUMOS_ARCH_4685  (0x4685)
                      00122 #define LUMOS_ARCH_14K50 (0x1450)
                      00123 
                      00124  IF LUMOS_CHIP_TYPE == LUMOS_CHIP_MASTER || LUMOS_CHIP_TYPE == LUMOS_CHIP_SLAVE || LUMOS_CHIP_TYPE == LU
                            MOS_CHIP_STANDALONE || LUMOS_CHIP_TYPE == LUMOS_CHIP_QSCC || LUMOS_CHIP_TYPE == LUMOS_CHIP_QSRC
                      00125   #define LUMOS_ARCH LUMOS_ARCH_4685
                      00126   PROCESSOR 18F4685
                      00127   #include <p18f4685.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC18F4685 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      05130         LIST
                      00128  ELSE
                      00129   IF LUMOS_CHIP_TYPE == LUMOS_CHIP_4CHANNEL
                      00130    #define LUMOS_ARCH LUMOS_ARCH_14K50
                      00131    PROCESSOR 18F14K50
                      00132    #include <p18f14k50.inc>
                      00133   ELSE
                      00134    ERROR "Invalid LUMOS_CHIP_TYPE"
                      00135   ENDIF
                      00136  ENDIF
                      00137 
                      00138 ;
                      00139 ; The following public symbols can be used after this file is
                      00140 ; included (and this file should be included everywhere before
                      00141 ; anything else is included, and in lieu of PROCESSOR directives
                      00142 ; or #includes which bring in processor-specific bits--this file
                      00143 ; will do that for you):
                      00144 ;
                      00145 ; LUMOS_CHIP_TYPE:  Will be one of the following, to show what the intent
                      00146 ;                   of the target chip will be and what its particular 
                      00147 ;                   I/O pin assignments are, role in the overall circuit, etc.
                      00148 ;                   (use the ROLE_* values where possible, though, in your logic)
                      00149 ;
                      00150 ;       LUMOS_CHIP_MASTER       - 48-channel (2-CPU) controller, master CPU
                      00151 ;       LUMOS_CHIP_SLAVE        - 48-channel (2-CPU) controller, slave CPU
                      00152 ;       LUMOS_CHIP_STANDALONE   - 24-channel (1-CPU) controller, sole CPU
                      00153 ;       LUMOS_CHIP_4CHANNEL     - 4-channel  (1-CPU) controller, sole CPU
                      00154 ;       LUMOS_CHIP_QSCC         - private configuration for custom hardware
                      00155 ;       LUMOS_CHIP_QSRC         - private configuration for custom hardware
                      00156 ;
                      00157 ; LUMOS_SLICE_TIMER: Will be one of the following, to specify where the PWM
                      00158 ;                   slice timer sync pulse is coming from:
                      00159 ;
                      00160 ;       LUMOS_ZC        - Hardware zero-crossing detector to PIC interrupt pin
                      00161 ;       LUMOS_INTERNAL  - Internal timing system (using PIC timer module)
                      00162 ;
                      00163 ; LUMOS_ARCH:       Will be one of the following, to show what PIC device
                      00164 ;                   is targeted, strictly to determine chip-specific details,
                      00165 ;                   not how Lumos is using it.
                      00166 ;
                      00167 ;       "14K50"         - The PIC18F14K50
                      00168 ;       "4685"          - The PIC18F4685
                      00169 ;
                      00170 ; ROLE_MASTER           - (bool) true if this chip is the master in master/slave arrangement
                      00171 ; ROLE_SLAVE            - (bool) true if this chip is the slave in master/slave arrangement
                      00172 ; ROLE_STANDALONE       - (bool) true if this is the only chip, must run entire board function
                      00173 ; NUM_CHANNELS          - (int) number of output SSR channels
                      00174 #endif
                      00062 #include "lumos_set_ssr.inc"
                      00001 ; vim:set syntax=pic ts=8:
                      00002 ;
                      00003                 LIST n=90
                      00004 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00005 ;@@                                                                         @@
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00006 ;@@ @      @   @  @   @   @@@    @@@          LUMOS: LIGHT ORCHESTRATION    @@
                      00007 ;@@ @      @   @  @@ @@  @   @  @   @         SYSTEM FIRMWARE VERSION 3.0   @@
                      00008 ;@@ @      @   @  @ @ @  @   @  @                                           @@
                      00009 ;@@ @      @   @  @   @  @   @   @@@   @@@@@  FOR 24- AND 48-CHANNEL AC/DC  @@
                      00010 ;@@ @      @   @  @   @  @   @      @         LUMOS CONTROLLER UNITS        @@
                      00011 ;@@ @      @   @  @   @  @   @  @   @         BASED ON THE PIC18F4685 CHIP  @@
                      00012 ;@@ @@@@@   @@@   @   @   @@@    @@@                                        @@
                      00013 ;@@                                                                         @@
                      00014 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00015 ;
                      00016 ; Copyright (c) 2012, 2014 by Steven L. Willoughby, Aloha, Oregon, USA.  
                      00017 ; All Rights Reserved.  
                      00018 ; Released under the terms and conditions of the Open Software
                      00019 ; License, version 3.0.
                      00020 ;
                      00021 ; Portions based on earlier code copyright (c) 2004, 2005, 2006, 2007
                      00022 ; Steven L. Willoughby, Aloha, Oregon, USA.  All Rights Reserved.
                      00023 ;
                      00024 ; -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*-
                      00025 ;
                      00026 #ifndef LUMOS_SET_SSR_INC
                      00027 #define LUMOS_SET_SSR_INC
                      00028 
                      00029  IF LUMOS_ARCH == LUMOS_ARCH_4685
  00000400            00030 SSR_DATA_BANK   EQU     0x400
  00000500            00031 MAIN_DATA       EQU     0x500
  000000C8            00032 YY_BUF_LEN      EQU     .200
                      00033  ELSE
                      00034   IF LUMOS_ARCH == LUMOS_ARCH_14K50
                      00035 SSR_DATA_BANK   EQU     0x060
                      00036 MAIN_DATA       EQU     0x088
                      00037 YY_BUF_LEN      EQU     .90 
                      00038   ELSE
                      00039    ERROR "Invalid architecture switch for SSR_DATA_BANK"
                      00040   ENDIF
                      00041  ENDIF
                      00042 
                      00043 ;
                      00044 ; SSR_FLAGS words for each output show state information about those
                      00045 ; channels.
                      00046 ;
  00000007            00047 FADE_UP         EQU     7       ; 1-------  This channel is fading up
  00000006            00048 FADE_DOWN       EQU     6       ; -1------  This channel is fading down
  00000005            00049 FADE_CYCLE      EQU     5       ; --1-----  This channel is fading up<-->down
  00000004            00050 MAX_OFF_TIME    EQU     4       ; ---1----  Use maximum off-time in cycle
  00000080            00051 BIT_FADE_UP     EQU     0x80
  00000040            00052 BIT_FADE_DOWN   EQU     0x40
  00000020            00053 BIT_FADE_CYCLE  EQU     0x20
  00000010            00054 BIT_MAX_OFF_TIME EQU    0x10
                      00055 
                      00056 SET_SSR_VALUE MACRO IDX, LEVEL
                      00057         BANKSEL SSR_DATA_BANK
                      00058          MOVLW  LEVEL
                      00059          MOVWF  SSR_00_VALUE+IDX, BANKED
                      00060          CLRF   SSR_00_STEP+IDX, BANKED
                      00061          CLRF   SSR_00_SPEED+IDX, BANKED
                      00062          CLRF   SSR_00_COUNTER+IDX, BANKED
                      00063          CLRF   SSR_00_FLAGS+IDX, BANKED
                      00064         ENDM
                      00065 
                      00066 SET_SSR_PATTERN MACRO IDX, LEVEL, STEP, SPEED, FLAGS
                      00067         BANKSEL SSR_DATA_BANK
                      00068          MOVLW  LEVEL
                      00069          MOVWF  SSR_00_VALUE+IDX, BANKED
                      00070          MOVLW  STEP
                      00071          MOVWF  SSR_00_STEP+IDX, BANKED
                      00072          MOVLW  SPEED
                      00073          MOVWF  SSR_00_SPEED+IDX, BANKED
                      00074          MOVWF  SSR_00_COUNTER+IDX, BANKED
                      00075          MOVLW  FLAGS
                      00076          MOVWF  SSR_00_FLAGS+IDX, BANKED
                      00077         ENDM
                      00078 
                      00079 SET_SSR_NORMAL_MODE MACRO IDX
                      00080          SET_SSR_PATTERN IDX, 0, 1, 3, BIT_FADE_UP|BIT_FADE_CYCLE
                      00081         ENDM
                      00082 
                      00083 SET_SSR_DMX_MODE MACRO IDX
                      00084          SET_SSR_PATTERN IDX, 0, 1, 1, BIT_FADE_UP|BIT_FADE_CYCLE
                      00085         ENDM
                      00086 
                      00087 SET_SSR_RAPID_FLASH MACRO IDX
                      00088          SET_SSR_PATTERN IDX, 255, 255, 30, BIT_FADE_DOWN|BIT_FADE_CYCLE
                      00089         ENDM
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00090 
                      00091 SET_SSR_BLINK_FADE MACRO IDX
                      00092          SET_SSR_PATTERN IDX, 255,   2,  1, BIT_FADE_DOWN
                      00093         ENDM
                      00094 
                      00095 SET_SSR_SLOW_FLASH MACRO IDX
                      00096          SET_SSR_PATTERN IDX, 255, 255, 30, BIT_FADE_DOWN|BIT_FADE_CYCLE|BIT_MAX_OFF_TIME
                      00097         ENDM
                      00098 
                      00099 SET_SSR_RAPID_FADE MACRO IDX
                      00100          SET_SSR_PATTERN IDX, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
                      00101         ENDM
                      00102 
                      00103 SET_SSR_SLOW_FADE MACRO IDX
                      00104          SET_SSR_PATTERN IDX, 0, 1, 1, BIT_FADE_UP|BIT_FADE_CYCLE
                      00105         ENDM
                      00106 
                      00107 SET_SSR_STEADY MACRO IDX
                      00108          SET_SSR_VALUE IDX, 255
                      00109         ENDM
                      00110 
                      00111 SET_SSR_OFF MACRO IDX
                      00112          SET_SSR_VALUE IDX, 0
                      00113         ENDM
                      00114 #endif
                      00063 #include "quizshow_config.inc"
                      00001 ; vim:set syntax=pic ts=8:
                      00002 ;
                      00003                 LIST n=90
                      00004 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00005 ;@@                                                                         @@
                      00006 ;@@  @@@   @   @  @@@@@  @@@@@                QUIZ SHOW HARDWARE CONTROLLER @@
                      00007 ;@@ @   @  @   @    @        @                FIRMWARE VERSION 4.0          @@ 
                      00008 ;@@ @   @  @   @    @       @                                               @@
                      00009 ;@@ @   @  @   @    @      @                  FOR HARDWARE REVISION 4.0     @@
                      00010 ;@@ @ @ @  @   @    @     @                   QSCC - QUIZ SHOW CONTESTANT   @@
                      00011 ;@@ @  @@  @   @    @    @                    QSRC - QUIZ SHOW REMOTE       @@
                      00012 ;@@ @@@@@   @@@   @@@@@  @@@@@                                              @@
                      00013 ;@@                                                                         @@
                      00014 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00015 ;
                      00016 ; Copyright (c) 2014 by Steven L. Willoughby, Aloha, Oregon, USA.  
                      00017 ; All Rights Reserved.  Quiz Show portions are unreleased trade secret
                      00018 ; information.
                      00019 ;
                      00020 ; Based on previous works by the same author, some of which are released
                      00021 ; under the Open Software License, version 3.0, which portions are available
                      00022 ; separately for free download.
                      00023 ;
                      00024 ; -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*-
                      00025 ;
                      00026 ; Configuration options.  Set these as desired and then re-assemble the
                      00027 ; code to produce the desired version of the ROM.
                      00028 ;
                      00029 ; 
                      00030 ;==============================================================================
                      00031 ; CONFIGURATION OPTIONS
                      00032 ;==============================================================================
                      00033 ;
                      00034 ; Note: set LUMOS_CHIP_TYPE to LUMOS_CHIP_QSCC or _QSRC in lumos_config.inc
                      00035 ;
                      00064 #include "qscc_hook_main_pins.inc"
                      00001 ; vim:set syntax=pic ts=8:
                      00002 ;
                      00003                 LIST n=90
                      00004 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00005 ;@@                                                                         @@
                      00006 ;@@  @@@   @   @  @@@@@  @@@@@                QUIZ SHOW HARDWARE CONTROLLER @@
                      00007 ;@@ @   @  @   @    @        @                FIRMWARE VERSION 4.0          @@ 
                      00008 ;@@ @   @  @   @    @       @                                               @@
                      00009 ;@@ @   @  @   @    @      @                  FOR HARDWARE REVISION 4.0     @@
                      00010 ;@@ @ @ @  @   @    @     @                   QSCC - QUIZ SHOW CONTESTANT   @@
                      00011 ;@@ @  @@  @   @    @    @                    QSRC - QUIZ SHOW REMOTE       @@
                      00012 ;@@ @@@@@   @@@   @@@@@  @@@@@                                              @@
                      00013 ;@@                                                                         @@
                      00014 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00015 ;
                      00016 ; Copyright (c) 2014 by Steven L. Willoughby, Aloha, Oregon, USA.  
                      00017 ; All Rights Reserved.  Quiz Show portions are unreleased trade secret
                      00018 ; information.
                      00019 ;
                      00020 ; Based on previous works by the same author, some of which are released
                      00021 ; under the Open Software License, version 3.0, which portions are available
                      00022 ; separately for free download.
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00023 ;
                      00024 ; -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*-
                      00025 ;
                      00026 ; This hooks into the Lumos device initialization code which sets up I/O pins.
                      00027 ; We want them arranged differently than the Lumos controllers do, but we put
                      00028 ; the QuizShow code here to keep the Lumos product clean and separate.
                      00029 ; 
                      00030         IF LUMOS_CHIP_TYPE != LUMOS_CHIP_QSCC && LUMOS_CHIP_TYPE != LUMOS_CHIP_QSRC
                      00031          ERROR "qscc_hook_main_pins only used for QS*C systems"
                      00032         ENDIF
                      00033 
                      00034 ;
                      00035 ; QSCC
                      00036 ;
                      00037                     IF LUMOS_CHIP_TYPE == LUMOS_CHIP_QSCC
                      00038 N_BUTTONS            EQU        6       ; X L A B C D
                      00039 BTN_IDX_X0           EQU        0
                      00040 BTN_IDX_L0           EQU        1
                      00041 BTN_IDX_A0           EQU        2
                      00042 BTN_IDX_B0           EQU        3
                      00043 BTN_IDX_C0           EQU        4
                      00044 BTN_IDX_D0           EQU        5
                      00045 PORT_X0              EQU        PORTA
                      00046 PORT_L0              EQU        PORTA
                      00047 PORT_A0              EQU        PORTA
                      00048 PORT_B0              EQU        PORTA
                      00049 PORT_C0              EQU        PORTA
                      00050 PORT_D0              EQU        PORTA
                      00051 BIT_X0               EQU        1
                      00052 BIT_L0               EQU        0
                      00053 BIT_A0               EQU        5
                      00054 BIT_B0               EQU        4
                      00055 BIT_C0               EQU        3
                      00056 BIT_D0               EQU        2
                      00057 
                      00058 PORT_RX              EQU        PORTC
                      00059 BIT_RX               EQU        7
                      00060 
                      00061 HAS_T_R              EQU        1
                      00062 HAS_ACTIVE           EQU        0
                      00063 HAS_SENSORS          EQU        0
                      00064 HAS_OPTION           EQU        0
                      00065 HAS_STATUS_LEDS      EQU        0
                      00066 HAS_POWER_CTRL       EQU        0
                      00067 
                      00068 PLAT_T_R             EQU        LATC
                      00069 PORT_T_R             EQU        PORTC
                      00070 TRIS_T_R             EQU        TRISC
                      00071 BIT_T_R              EQU        3
                      00072 
                      00073 CHAN_X0R             EQU        .0
                      00074 CHAN_X0G             EQU        .1
                      00075 CHAN_X0B             EQU        .2
                      00076 CHAN_L0R             EQU        .3
                      00077 CHAN_L0Y             EQU        .4
                      00078 CHAN_L0G             EQU        .5
                      00079 CHAN_A0L             EQU        .6
                      00080 CHAN_B0L             EQU        .7
                      00081 CHAN_C0L             EQU        .8
                      00082 CHAN_D0L             EQU        .9
                      00083 CHAN_F_R             EQU        .10
                      00084 CHAN_F_G             EQU        .11
                      00085 CHAN_F_B             EQU        .12
                      00086 CHAN_F_W             EQU        .13
                      00087 
                      00088 PLAT_0               EQU        LATC    ; XR
                      00089 PLAT_1               EQU        LATC    ; XG
                      00090 PLAT_2               EQU        LATC    ; XB
                      00091 PLAT_3               EQU        LATE    ; LR
                      00092 PLAT_4               EQU        LATE    ; LY
                      00093 PLAT_5               EQU        LATE    ; LG
                      00094 PLAT_6               EQU        LATB    ; AL
                      00095 PLAT_7               EQU        LATB    ; BL
                      00096 PLAT_8               EQU        LATB    ; CL
                      00097 PLAT_9               EQU        LATB    ; DL
                      00098 PLAT_10              EQU        LATB    ; FR
                      00099 PLAT_11              EQU        LATB    ; FG
                      00100 PLAT_12              EQU        LATB    ; FB
                      00101 PLAT_13              EQU        LATB    ; FW
                      00102 SSR_MAX              EQU        13
                      00103 
                      00104 BIT_0                EQU        2       ; XR
                      00105 BIT_1                EQU        1       ; XG
                      00106 BIT_2                EQU        0       ; XB
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00107 BIT_3                EQU        2       ; LR
                      00108 BIT_4                EQU        0       ; LY
                      00109 BIT_5                EQU        1       ; LG
                      00110 BIT_6                EQU        7       ; AL
                      00111 BIT_7                EQU        6       ; BL
                      00112 BIT_8                EQU        5       ; CL
                      00113 BIT_9                EQU        4       ; DL
                      00114 BIT_10               EQU        3       ; FR
                      00115 BIT_11               EQU        2       ; FG
                      00116 BIT_12               EQU        1       ; FB
                      00117 BIT_13               EQU        0       ; FW
                      00118                     ELSE
                      00119                      IF LUMOS_CHIP_TYPE == LUMOS_CHIP_QSRC
  00000010            00120 N_BUTTONS             EQU       10      ; X0 L0 X1 L1 ... X4 L4
  00000000            00121 BTN_IDX_X0            EQU       0
  00000001            00122 BTN_IDX_L0            EQU       1
  00000002            00123 BTN_IDX_X1            EQU       2
  00000003            00124 BTN_IDX_L1            EQU       3
  00000004            00125 BTN_IDX_X2            EQU       4
  00000005            00126 BTN_IDX_L2            EQU       5
  00000006            00127 BTN_IDX_X3            EQU       6
  00000007            00128 BTN_IDX_L3            EQU       7
  00000008            00129 BTN_IDX_X4            EQU       8
  00000009            00130 BTN_IDX_L4            EQU       9
                      00131 
  00000F80            00132 PORT_X0               EQU       PORTA
  00000F80            00133 PORT_L0               EQU       PORTA
  00000F80            00134 PORT_X1               EQU       PORTA
  00000F80            00135 PORT_L1               EQU       PORTA
  00000F80            00136 PORT_X2               EQU       PORTA
  00000F80            00137 PORT_L2               EQU       PORTA
  00000F82            00138 PORT_X3               EQU       PORTC
  00000F83            00139 PORT_L3               EQU       PORTD
  00000F83            00140 PORT_X4               EQU       PORTD
  00000F82            00141 PORT_L4               EQU       PORTC
  00000003            00142 BIT_X0                EQU       3
  00000002            00143 BIT_L0                EQU       2
  00000001            00144 BIT_X1                EQU       1
  00000000            00145 BIT_L1                EQU       0
  00000004            00146 BIT_X2                EQU       4
  00000005            00147 BIT_L2                EQU       5
  00000004            00148 BIT_X3                EQU       4
  00000000            00149 BIT_L3                EQU       0
  00000004            00150 BIT_X4                EQU       4
  00000005            00151 BIT_L4                EQU       5
                      00152 
  00000F82            00153 PORT_RX               EQU       PORTC
  00000007            00154 BIT_RX                EQU       7
                      00155 
  00000001            00156 HAS_T_R               EQU       1
  00000000            00157 HAS_ACTIVE            EQU       0
  00000000            00158 HAS_SENSORS           EQU       0
  00000000            00159 HAS_OPTION            EQU       0
  00000000            00160 HAS_STATUS_LEDS       EQU       0
  00000000            00161 HAS_POWER_CTRL        EQU       0
                      00162 
  00000F8B            00163 PLAT_T_R              EQU       LATC
  00000F82            00164 PORT_T_R              EQU       PORTC
  00000F94            00165 TRIS_T_R              EQU       TRISC
  00000003            00166 BIT_T_R               EQU       3
                      00167 
  00000000            00168 CHAN_X0R              EQU       .0
  00000001            00169 CHAN_X0G              EQU       .1
  00000002            00170 CHAN_X0B              EQU       .2
  00000003            00171 CHAN_L0R              EQU       .3
  00000004            00172 CHAN_X1R              EQU       .4
  00000005            00173 CHAN_X1G              EQU       .5
  00000006            00174 CHAN_X1B              EQU       .6
  00000007            00175 CHAN_L1R              EQU       .7
  00000008            00176 CHAN_X2R              EQU       .8
  00000009            00177 CHAN_X2G              EQU       .9
  0000000A            00178 CHAN_X2B              EQU       .10
  0000000B            00179 CHAN_L2R              EQU       .11
  0000000C            00180 CHAN_X3R              EQU       .12
  0000000D            00181 CHAN_X3G              EQU       .13
  0000000E            00182 CHAN_X3B              EQU       .14
  0000000F            00183 CHAN_L3R              EQU       .15
  00000010            00184 CHAN_X4R              EQU       .16
  00000011            00185 CHAN_X4G              EQU       .17
  00000012            00186 CHAN_X4B              EQU       .18
  00000013            00187 CHAN_L4R              EQU       .19
  00000F8B            00188 PLAT_0                EQU       LATC    ; X0R
  00000F8B            00189 PLAT_1                EQU       LATC    ; X0G
  00000F8B            00190 PLAT_2                EQU       LATC    ; X0B
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000F8D            00191 PLAT_3                EQU       LATE    ; L0R
  00000F8A            00192 PLAT_4                EQU       LATB    ; X1R
  00000F8A            00193 PLAT_5                EQU       LATB    ; X1G
  00000F8A            00194 PLAT_6                EQU       LATB    ; X1B
  00000F8A            00195 PLAT_7                EQU       LATB    ; L1R
  00000F8A            00196 PLAT_8                EQU       LATB    ; X2R
  00000F8A            00197 PLAT_9                EQU       LATB    ; X2G
  00000F8A            00198 PLAT_10               EQU       LATB    ; X2B
  00000F8D            00199 PLAT_11               EQU       LATE    ; L2R
  00000F8C            00200 PLAT_12               EQU       LATD    ; X3R
  00000F8C            00201 PLAT_13               EQU       LATD    ; X3G
  00000F8C            00202 PLAT_14               EQU       LATD    ; X3B
  00000F8D            00203 PLAT_15               EQU       LATE    ; L3R
  00000F8A            00204 PLAT_16               EQU       LATB    ; X4R
  00000F8C            00205 PLAT_17               EQU       LATD    ; X4G
  00000F8C            00206 PLAT_18               EQU       LATD    ; X4B
  00000F8C            00207 PLAT_19               EQU       LATD    ; L4R
  00000019            00208 SSR_MAX               EQU       19
                      00209 
  00000002            00210 BIT_0                 EQU       2       ; X0R
  00000001            00211 BIT_1                 EQU       1       ; X0G
  00000000            00212 BIT_2                 EQU       0       ; X0B
  00000002            00213 BIT_3                 EQU       2       ; L0R
  00000007            00214 BIT_4                 EQU       7       ; X1R
  00000006            00215 BIT_5                 EQU       6       ; X1G
  00000005            00216 BIT_6                 EQU       5       ; X1B
  00000004            00217 BIT_7                 EQU       4       ; L1R
  00000003            00218 BIT_8                 EQU       3       ; X2R
  00000002            00219 BIT_9                 EQU       2       ; X2G
  00000001            00220 BIT_10                EQU       1       ; X2B
  00000000            00221 BIT_11                EQU       0       ; L2R
  00000007            00222 BIT_12                EQU       7       ; X3R
  00000006            00223 BIT_13                EQU       6       ; X3G
  00000005            00224 BIT_14                EQU       5       ; X3B
  00000001            00225 BIT_15                EQU       1       ; L3R
  00000000            00226 BIT_16                EQU       0       ; X4R
  00000003            00227 BIT_17                EQU       3       ; X4G
  00000001            00228 BIT_18                EQU       1       ; X4B
  00000002            00229 BIT_19                EQU       2       ; L4R
                      00230                      ENDIF
                      00231                     ENDIF
                      00232 
                      00065 #include "qscc_bits.inc"
                      00001 ; vim:set syntax=pic ts=8:
                      00002 ;
                      00003                 LIST n=90
                      00004 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00005 ;@@                                                                         @@
                      00006 ;@@  @@@   @   @  @@@@@  @@@@@                QUIZ SHOW HARDWARE CONTROLLER @@
                      00007 ;@@ @   @  @   @    @        @                FIRMWARE VERSION 4.0          @@ 
                      00008 ;@@ @   @  @   @    @       @                                               @@
                      00009 ;@@ @   @  @   @    @      @                  FOR HARDWARE REVISION 4.0     @@
                      00010 ;@@ @ @ @  @   @    @     @                   QSCC - QUIZ SHOW CONTESTANT   @@
                      00011 ;@@ @  @@  @   @    @    @                    QSRC - QUIZ SHOW REMOTE       @@
                      00012 ;@@ @@@@@   @@@   @@@@@  @@@@@                                              @@
                      00013 ;@@                                                                         @@
                      00014 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00015 ;
                      00016 ; Copyright (c) 2014 by Steven L. Willoughby, Aloha, Oregon, USA.  
                      00017 ; All Rights Reserved.  Quiz Show portions are unreleased trade secret
                      00018 ; information.
                      00019 ;
                      00020 ; Based on previous works by the same author, some of which are released
                      00021 ; under the Open Software License, version 3.0, which portions are available
                      00022 ; separately for free download.
                      00023 ;
                      00024 ; -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*-
                      00025 ;
                      00026 ; This defines the bits for bit-encoded flags, etc.
                      00027 ; 
                      00028 #ifndef QSCC_BITS_INC
                      00029 #define QSCC_BITS_INC
                      00030 
                      00031         IF LUMOS_CHIP_TYPE != LUMOS_CHIP_QSCC && LUMOS_CHIP_TYPE != LUMOS_CHIP_QSRC
                      00032          ERROR "qscc_bits only used for QS*C systems"
                      00033         ENDIF
                      00034                                         ; QUIZSHOW_FLAGS
  00000002            00035 QS_FLAG_DOING120 EQU    2               ; -----1--      Doing "every 1/120 sec tasks" now
  00000001            00036 QS_FLAG_ON_120_S EQU    1               ; ------1-      Need to do "every 1/120 sec tasks" now
  00000000            00037 QS_FLAG_SCANNING EQU    0               ; -------1      Scanner running
                      00038 
                      00039                                         ; BTN_??_FLAGS
  00000003            00040 BTN_FLG_ACTIVE  EQU     3               ; ----1---      Button being pressed now
  00000002            00041 BTN_FLG_LOCKED  EQU     2               ; -----1--      Button locked out
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000001            00042 BTN_FLG_MASKED  EQU     1               ; ------1-      Button ignored
  00000000            00043 BTN_FLG_PRESSED EQU     0               ; -------1      Button pressed already
                      00044 
  00000C00            00045 QUIZSHOW_DATA   EQU     0xC00
                      00046 #endif
                      00066         RADIX   DEC
  0000                00067         EXTERN  QUIZSHOW_FLAGS
  0000                00068         EXTERN  QS_BTN_TMR_T
  0000                00069         EXTERN  QS_BTN_TMR_U
  0000                00070         GLOBAL  BTN_X0_TIME_T
  0000                00071         GLOBAL  BTN_X0_TIME_U
  0000                00072         GLOBAL  BTN_X0_TIME_H
  0000                00073         GLOBAL  BTN_X0_TIME_L
  0000                00074         GLOBAL  BTN_X0_FLAGS
                      00075 ;#include "serial-io.inc"
                      00076 
                      00077 ; Works on Software Alchemy Quiz Show QSCC and QSRC boards revision 4.0.
                      00078 ;
                      00079 ; N.B. THE BOARD SELECT BITS IN LUMOS_CONFIG.INC MUST BE SELECTED
                      00080 ; FOR THE TARGET CONFIGURATION!  EACH ROM IS DIFFERENT!
                      00081 ;
                      00082 ; Target Microcontroller is PIC18F4685, Q=40MHz (100nS instruction cycle)
                      00083 ;
                      00084 ; Serial control (RS-485) at 19.2kbps by default.
                      00085 ; Configurable from 300 to 250000 baud.
                      00086 ;
                      00087 ; OPTION BUTTON:
                      00088 ; XXX The Lumos controllers have an OPTION button which starts configuration
                      00089 ; XXX mode.  QS*C boards don't have those, so instead boot the unit while
                      00090 ; XXX holding down the A and D buttons (QSCC) or the L2 and L0 buttons (QSRC)
                      00091 ; XXX to enter configuration mode.
                      00092 ; 
                      00093 ;=============================================================================
                      00094 ; IMPLEMENTATION NOTES
                      00095 ;-----------------------------------------------------------------------------
                      00096 ;
                      00097 ; The QUIZSHOW controller firmware consists of a number of somewhat 
                      00098 ; independent subsystems:
                      00099 ; 
                      00100 ; LUMOS
                      00101 ;       The QSCC and QSRC boards are also Lumos SSR controllers which implement
                      00102 ;       most of the standard Lumos commands.  The various lights used by the
                      00103 ;       quiz show are mapped to Lumos channels.  The Lumos firmware is included
                      00104 ;       into the quizshow firmware, with some special switches enabled to adapt
                      00105 ;       it to this hardware.
                      00106 ;
                      00107 ; START
                      00108 ;       Initializes the microcontroller, starts up the required peripherals,
                      00109 ;       and enters the main loop
                      00110 ;
                      00111 ; SIO
                      00112 ;       Handles all serial I/O operations in the background (interrupt-driven)
                      00113 ;       so the rest of the code only needs to be concerned with higher-level
                      00114 ;       reads and writes.  Buffers hold 256 characters each of input and output.
                      00115 ;
                      00116 ; ISR
                      00117 ;       The interrupt service routine manages a set of counters and timers:
                      00118 ;       1. We run a 120 Hz timer which provides timing for the dimmers.
                      00119 ;
                      00120 ; MAIN_LOOP
                      00121 ;       Manages the display of the readerboards.
                      00122 ;       Updates the status of the SSR lines if it's time to do so
                      00123 ;       Receives a character from the serial line if one's waiting
                      00124 ;
                      00125 ; INTERPRETER
                      00126 ;       When a byte is received on the serial line, it is processed by
                      00127 ;       a small state machine.  The current state is held in YY_STATE (named
                      00128 ;       in honor of the venerable yacc).
                      00129 ;
                      00130 ;-----------------------------------------------------------------------------
                      00131 ; Command Protocol:
                      00132 ;                     ___7______6______5______4______3______2______1______0__
                      00133 ; Command Byte:      |      |                    |                           |
                      00134 ;                    |   1  |    Command code    |   Target device address   |
                      00135 ;                    |______|______|______|______|______|______|______|______|
                      00136 ;
                      00137 ; Any byte with its MSB set is the beginning of a command.  If the target 
                      00138 ; device matches this unit's address, the state machine kicks into gear and
                      00139 ; processes the command (which may require some following data bytes, all
                      00140 ; of which must have their MSB cleared).  Otherwise, the unit ignores the
                      00141 ; byte.
                      00142 ;
                      00143 ;                     ___7______6______5______4______3______2______1______0__
                      00144 ; Extended Command:  |      |                    |                           |
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00145 ;                    |   1  |          7         |   Target device address   |
                      00146 ;                    |______|______|______|______|______|______|______|______|
                      00147 ;                    |      |                                                |
                      00148 ;                    |   0  |                  Command code                  |
                      00149 ;                    |______|______|______|______|______|______|______|______|
                      00150 ;
                      00151 ; The most common commands are given ID 0-6 so that they may be sent in as few
                      00152 ; bytes as possible (as few as a single byte), but we have more than 8 commands
                      00153 ; so we have an extended code.  If the command code is 7 (all bits set), then
                      00154 ; the following byte contains the actual command code which may be any value
                      00155 ; from 0-127.
                      00156 ;
                      00157 ;                     ___7______6______5______4______3______2______1______0__
                      00158 ; Data Byte:         |      |                                                |
                      00159 ;                    |   0  |                      Data                      |
                      00160 ;                    |______|______|______|______|______|______|______|______|
                      00161 ;
                      00162 ; Any byte with its MSB cleared is a data byte, and is ignored unless we're
                      00163 ; in the middle of interpreting a multi-byte command, in which case it's interpreted
                      00164 ; appropriately as data supporting the command being executed.  This way, other
                      00165 ; devices which share the same protocol format but not necessarily a compatible
                      00166 ; command set may safely know which bytes can be ignored without knowing the
                      00167 ; details of each other's command sets.
                      00168 ;
                      00169 ; Two special bytes are recognized:
                      00170 ;
                      00171 ;                     ___7______6______5______4______3______2______1______0__
                      00172 ; MSB Escape:        |      |                                                |
                      00173 ;                    |   0  |   1      1      1      1      1      1      0  |
                      00174 ;                    |______|______|______|______|______|______|______|______|
                      00175 ;
                      00176 ; If this ($7E) byte is received, it is ignored but the next byte received will
                      00177 ; have its MSB bit set.  This allows data bytes to have full 8-bit values without
                      00178 ; violating the communication protocol described above.  That second byte is not
                      00179 ; interpreted further.
                      00180 ;
                      00181 ;                     ___7______6______5______4______3______2______1______0__
                      00182 ; Literal Escape     |      |                                                |
                      00183 ;                    |   0  |   1      1      1      1      1      1      1  |
                      00184 ;                    |______|______|______|______|______|______|______|______|
                      00185 ;
                      00186 ; If this ($7F) byte is received, it is ignored but the next byte is accepted
                      00187 ; as-is without further interpretation.
                      00188 ;
                      00189 ; Specific Example Cases of interest:
                      00190 ;       Sequence    Resulting byte
                      00191 ;       $7E $7E     $FE
                      00192 ;       $7E $7F     $FF
                      00193 ;       $7F $7E     $7E
                      00194 ;       $7F $7F     $7F
                      00195 ;
                      00196 ; A command byte (received with MSB already set) trumps all of the above.  It is
                      00197 ; taken as the start of a command and the escape sequence in progress is canceled.
                      00198 ;
                      00199 ; Commands recognized (L indicates Lumos commands):
                      00200 ;
                      00201 ;   COMMAND  CODE  BITS
                      00202 ;L  BLACKOUT 0     1000aaaa
                      00203 ;L  ON_OFF   1     1001aaaa 0scccccc            Turn channel <c> on (<s>=1) or off (<s>=0)
                      00204 ;L  SET_LVL  2     1010aaaa 0hcccccc 0vvvvvvv    Set dimmer level <v>:<h> on channel <c>
                      00205 ;L  BULK_UPD 3     1011aaaa 0mcccccc ...                Bulk-upload multiple channel levels
                      00206 ;L  RAMP_LVL 4     1100aaaa Cdcccccc ...         Ramp channel <c> smoothly up (<d>=1) or down (<C>=1 cyc
                            le)
                      00207 ;   SCAN_ST  5     1101aaaa                      Start scanning buttons
                      00208 ;   SCAN_Q   6     1110aaaa 0000000s             Read scan results / Stop
                      00209 ;   EXTENDED 7     1111aaaa                      Extended command, decoded further in next byte
                      00210 ;L@ SLEEP    7+0   1111aaaa 00000000 01011010 01011010  Put unit to sleep
                      00211 ;L@ WAKE     7+1   1111aaaa 00000001 01011010 01011010  Take unit out of sleep mode
                      00212 ;L  SHUTDOWN 7+2   1111aaaa 00000010 01011000 01011001  Take unit completely offline
                      00213 ;L< QUERY    7+3   1111aaaa 00000011 00100100 01010100  Report device status
                      00214 ;X! DEF_SEQ  7+4   1111aaaa 00000100 0iiiiiii ...       Define sequence <i>
                      00215 ;X  EXEC_SEQ 7+5   1111aaaa 00000101 0iiiiiii           Execute sequence <i> (0=stop)
                      00216 ;X! CLR_SEQ  7+8   1111aaaa 00001000 01000011 01000001  Erase all stored sequences
                      00217 ;L  XPRIV    7+9   1111aaaa 00001001                    Forbid priviliged mode
                      00218 ;            7+10  1111aaaa 00001010                    Reserved for future use
                      00219 ;             :        :        :                           :     :     :    : 
                      00220 ;            7+28  1111aaaa 00011100                    Reserved for future use                 
                      00221 ;   OUT_SCAN 7+29  1111aaaa 00011101                    SCAN_Q reply
                      00222 ;L  OUT_NAK  7+30  1111aaaa 00011110                    QUERY NAK                               
                      00223 ;L  OUT_RPLY 7+31  1111aaaa 00011111 ...                Reply to QUERY command_________________ 
                      00224 ;   IC_***** 7+32  11110000 00100000                    Reserved (Lumos internal)
                      00225 ;             :        :        :                           :     :   :      :         ////////
                      00226 ;            7+63  11110000 00111111                    Reserved for new commands______////////
                      00227 ;*! CF_PHASE 7+64  1111aaaa 010000pp 0ppppppp 01010000 01001111   Phase offset=<p>       CONFIG
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00228 ;*! CF_ADDR  7+96  1111aaaa 0110AAAA 01001001 01000001 01000100   Change address to <A>  ||||||
                      00229 ;*  CF_NOPRV 7+112 1111aaaa 01110000                              Leave privileged mode  ||||||
                      00230 ;*  CF_CONF  7+113 1111aaaa 01110001 ...                          Configure device       ||||||
                      00231 ;*! CF_BAUD  7+114 1111aaaa 01110010 0bbbbbbb 00100110            Set baud rate to <b>   ||||||
                      00232 ;*! CF_RESET 7+115 1111aaaa 01110011 00100100 01110010            Reset factory defaults ||||||
                      00233 ;*  CF_XPRIV 7+116 1111aaaa 01110100                              Forbid priviliged mode ||||||
                      00234 ;*           7+117 1111aaaa 01110101                     Reserved for future config cmd  ||||||
                      00235 ;*                     :        :                            :     :     :      :    :   ||||||
                      00236 ;*           7+127 1111aaaa 01111111                     Reserved for future config cmd__||||||
                      00237 ;
                      00238 ; Legend:
                      00239 ;   X Not yet implemented; planned for future; subject to change
                      00240 ;   @ Unit may automatically take this action
                      00241 ;   * Privileged configuration-mode command
                      00242 ;   ! Permanent effect (written to EEPROM)
                      00243 ;   < Command generates response data (back to host)
                      00244 ;   a Device address (0-15)
                      00245 ;   b Baud rate code (0-127), but units may only define a small subset of those values
                      00246 ;   c Output channel (0-63, but unit may only support a lesser number)
                      00247 ;   d Direction: up (<d>=1) or down (<d>=0).
                      00248 ;   h High-res level bit (LSB of 8-bit value when in high-res mode)
                      00249 ;   m Mode (1=high-res, 0=low-res)
                      00250 ;   n Number of items affected
                      00251 ;   s Output state: 0=off, 1=on
                      00252 ;   v Value of dimmer (0-127) (most significant 7 bits of dimmer value)
                      00253 ;
                      00254 ; Payloads for many-byte commands
                      00255 ;
                      00256 ; BULK_UPD:  00cccccc 0nnnnnnn v0 v1 v2 ... vn 01010101
                      00257 ;       Updates <n>+1 channels starting at <c>, giving <v> values for each as per SET_LVL.
                      00258 ;
                      00259 ; RAMP_LVL:  Cdcccccc 0sssssss 0ttttttt   Channel <c> up/down in <s>+1 steps every <t>+1/120 sec
                      00260 ;
                      00261 ; DEF_SEQ:   0iiiiiii 0nnnnnnn (...)*<n+1> 01000100 01110011  Define sequence <i> of length <n+1>
                      00262 ;                                                             0 is boot sequence, 1-63 is EEPROM
                      00263 ;                                                             64-127 is RAM.
                      00264 ;
                      00265 ; CF_BAUD:   Values recognized:
                      00266 ;       00000000 ($00)      300 baud
                      00267 ;       00000001 ($01)      600
                      00268 ;       00000010 ($02)    1,200
                      00269 ;       00000011 ($03)    2,400
                      00270 ;       00000100 ($04)    4,800
                      00271 ;       00000101 ($05)    9,600
                      00272 ;       00000110 ($06)   19,200
                      00273 ;       00000111 ($07)   38,400
                      00274 ;       00001000 ($08)   57,600
                      00275 ;       00001001 ($09)  115,200
                      00276 ;       00001010 ($0A)  250,000
                      00277 ;
                      00278 ;
                      00279 ; Response packet from QUERY command (37 bytes):
                      00280 ; note the ROM version byte also serves to indicate the format of the response
                      00281 ; bytes which follow.  If the query packet format changes, the ROM version byte
                      00282 ; MUST also change.
                      00283 ;
                      00284 ;    1111aaaa 00011111 00110000 0ABCDdcc 0ccccccc 0ABCDqsf 0ABCDXpp 0ppppppp 
                      00285 ;        \__/           \_/\__/  \__/|\_________/  \__/|||  \__/|\_________/  
                      00286 ;          |             maj |     | |   |           | |||   |  |      `--phase
                      00287 ;          `--reporting    minor   | |   `--DMX      | |||   |  `--config locked?
                      00288 ;              unit addr  rom      | |      channel  | |||   `--active
                      00289 ;                         vers.    | |               | ||`--mem full?
                      00290 ;                                  | `--DMX mode?    | |`--sleeping?
                      00291 ;                                  `--configured     | `--config mode?
                      00292 ;                                                    `--masks
                      00293 ;
                      00294 ;    0eeeeeee 0eeeeeee 0MMMMMMM 0MMMMMMM 0X0iiiii 0xxxxxxx 
                      00295 ;     \______________/  \______________/  | \___/  \_____/
                      00296 ;        `--EEPROM free    `--RAM free    |   |       `--executing seq.
                      00297 ;                                         |   `--device model
                      00298 ;                                         `--seq running?
                      00299 ;
                      00300 ;    0owE0000 0IIIIIII 0iiiiiii 0PPPPPPP        Sensor trigger info for A
                      00301 ;    0owE0001 0IIIIIII 0iiiiiii 0PPPPPPP        Sensor trigger info for B
                      00302 ;    0owE0010 0IIIIIII 0iiiiiii 0PPPPPPP        Sensor trigger info for C
                      00303 ;    0owE0011 0IIIIIII 0iiiiiii 0PPPPPPP        Sensor trigger info for D
                      00304 ;
                      00305 ;    0fffffff 0fffffff 000000pp 0ppppppp ssssssss ssssssss 00110011
                      00306 ;    \______/ \______/       \_________/ \______S/N______/
                      00307 ;        |        |               `--phase (channels 24-47)
                      00308 ;        |        `--fault code (channels 24-47)
                      00309 ;        `--fault code (channels 0-23)
                      00310 ;
                      00311 ; Response to SCAN_Q query commands:
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00312 ; Note that the ROM version dictates these changes too, so if this format
                      00313 ; changes the ROM version MUST change (as reported in the QUERY response
                      00314 ; above).
                      00315 ;                               31       23       15       7      0
                      00316 ;    1111aaaa 00011101 0R0nnnnn tttttttt tttttttt tttttttt tttttttt ...
                      00317 ;        \__/           | \___/ \_________________________________/
                      00318 ;          |            |   |                    | (x n)
                      00319 ;          `--reporting | number of    0=not pressed yet
                      00320 ;              unit addr| buttons     >0=microseconds elapsed before press
                      00321 ;                       | reported
                      00322 ;                       0=scanning stopped
                      00323 ;                       1=scanner is still running
                      00324 ;                      
                      00325 ;    01010001 00101010 
                      00326 ;
                      00327 ; QSCC sends 6 buttons: X, L, A, B, C, D.
                      00328 ; QSRC sends 10 buttons: X0, L0, X1, L1, X2, L2, X3, L3, X4, L4.  
                      00329 ;
                      00330 ; Also note that the controller is allowed to send OUT_NAK packets to the
                      00331 ; host in response to QUERY commands.  This does not complete the exchange,
                      00332 ; but serves to ask the host to continue waiting if the device won't be able
                      00333 ; to reply to the QUERY for long enough that it risks a timeout.  The host
                      00334 ; is under no obligation to respect the OUT_NAK packets.
                      00335 ;
                      00336 ;   1111aaaa 00011110 
                      00337 ;
                      00338 ; A controller MUST never send data except in response to an explicit
                      00339 ; request from the host.  Controllers MUST immediately cease sending
                      00340 ; data upon receiving any bytes on the network (this indicates that
                      00341 ; the host is no longer waiting for a reply but has moved on to something
                      00342 ; else or is querying another device now).  No further data may be sent
                      00343 ; until again explicitly asked for.
                      00344 ;
                      00345 ;
                      00346 ;                     _______________________________________________________
                      00347 ; Channel ID:        |      |      |                                         |
                      00348 ;                    |  0   | ON   |               Channel ID                |
                      00349 ;                    |______|______|______|______|______|______|______|______|
                      00350 ; The ON bit <6> determines whether the channel is being turned on (1) or 
                      00351 ; off (0) for the "Set/clear single channel" command.  it is ignored when
                      00352 ; setting the channel to a specific dimmer value.
                      00353 ;
                      00354 ;=============================================================================
                      00355 ; HARDWARE DESCRIPTION
                      00356 ;-----------------------------------------------------------------------------
                      00357 ;
                      00358 ; The controllers use the PIC18F4685 microcontroller, and have identical
                      00359 ; circuit boards, although the assignment of I/O pins is very different
                      00360 ; between them.
                      00361 ;
                      00362 ;  PIC18F4685 Microcontroller I/O pin assignments:
                      00363 ;
                      00364 ; QSRC    QSCC           ________   _________         QSCC    QSRC 
                      00365 ; BOARD:  BOARD:        |o       \_/         |        BOARD:  BOARD:
                      00366 ; /RESET  /RESET -->  1 | /MCLR RE3  PGD RB7 | 40 --> /AL     /X1R   
                      00367 ; /L1     /L     -->  2 | RA0        PGC RB6 | 39 --> /BL     /X1G    
                      00368 ; /X2     /X     -->  3 | RA1        PGM RB5 | 38 --> /CL     /X1B   
                      00369 ; /L0     /D     -->  4 | RA2            RB4 | 37 --> /DL     /L1R  
                      00370 ; /X0     /C     -->  5 | RA3            RB3 | 36 --> /FR     /X2R  
                      00371 ; /X2     /B     -->  6 | RA4       INT2 RB2 | 35 --> /FG     /X2G   
                      00372 ; /L2     /A     -->  7 | RA5       INT1 RB1 | 34 --> /FB     /X2B    
                      00373 ; /L2R    /LY    <--  8 | RE0       INT0 RB0 | 33 --> /FW     /X4R     
                      00374 ; /L3R    /LG    <--  9 | RE1            VDD | 32 --- +5V       
                      00375 ; /L0R    /LR    <-- 10 | RE2            VSS | 31 --- GND      
                      00376 ;            +5V --- 11 | VDD            RD7 | 30 --> D7      /X3R  
                      00377 ;            GND --- 12 | VSS            RD6 | 29 --> D6      /X3G  
                      00378 ;           xtal --- 13 | OSC            RD5 | 28 --> D5      /X3B  
                      00379 ;             +----- 14 | OSC            RD4 | 27 --- D4 ->   /X4 <-
                      00380 ; /X0B    /XB    <-- 15 | RC0         RX RC7 | 26 <-- Serial RxD
                      00381 ; /X0G    /XG    <-- 16 | RC1         TX RC6 | 25 --> Serial TxD
                      00382 ; /X0R    /XR    <-- 17 | RC2            RC5 | 24 --- PS0 ->  /L4 <-
                      00383 ; T/R     T/R    <-- 18 | RC3            RC4 | 23 --- PS1 ->  /X3 <- 
                      00384 ; /L3 ->  D0 <-  --- 19 | RD0            RD3 | 22 --> D3      /X4G  
                      00385 ; /X4B    D1     <-- 20 | RD1            RD2 | 21 --> D2      /L4R  
                      00386 ;                       |____________________|
                      00387 ;
                      00388 ;
                      00389 ; ========================================================================
                      00390 ; PROGRAM MEMORY MAP
                      00391 ; ______________________________________________________________________________
                      00392 ;
                      00393 ; 14K50 4685    _________________ ___
                      00394 ; $00000 $00000 | RESET Vector    | V_RST
                      00395 ; $00007 $00007 |_________________|___
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00396 ; $00008 $00008 | High Int Vector | V_INT_H
                      00397 ; $00017 $00017 |_________________|___
                      00398 ; $00018 $00018 | Low Int Vector  | V_INT_L
                      00399 ; $0001F $0001F |_________________|
                      00400 ; $00020 $00020 |/////////////////|
                      00401 ; $000FF $000FF |/////////////////|___
                      00402 ; $00100 $00100 | Boot code       | _BOOT
                      00403 ;               |.................|___
                      00404 ;               | Interrupt hand- | _INT
                      00405 ;               |  lers           |      
                      00406 ;               |/////////////////|
                      00407 ; $007FF $007FF |/////////////////|___
                      00408 ; $00800 $00800 | Mainline code   | _MAIN
                      00409 ;               |.................|___
                      00410 ;           ??? | Device init     | LUMOS_CODE_INIT
                      00411 ;               |_________________|___
                      00412 ;           ??? | Serial I/O      | _SIO_CODE
                      00413 ;               | Module          |
                      00414 ;               |_________________|___
                      00415 ;               |/////////////////|
                      00416 ;               |/////////////////|
                      00417 ;               |/////////////////|
                      00418 ;               |/////////////////|
                      00419 ;               |/////////////////|___
                      00420 ; $02E00 $14000 | EEPROM defaults | _MAIN_EEPROM_TBL
                      00421 ; $02EFF $14FFF |_________________|___
                      00422 ; $02F00 $15000 |Serial I/O Mod   | _SIO_LOOKUP_TABLES
                      00423 ;               |lookup tables    |
                      00424 ;        $150FF |_________________|___
                      00425 ;        $15100 |                 |
                      00426 ;               |                 |
                      00427 ; $02FEF $16FEF |_________________|___
                      00428 ; $02FF0 $16FF0 |System Mfg Data  | _SYSTEM_MFG_DATA
                      00429 ; $02FFF $16FFF |_________________|___
                      00430 ; $03000 $17000 |                 | 
                      00431 ; $03FFF $17FFF |_________________|___
                      00432 ;               |/////////////////|
                      00433 ;               |/////////////////|
                      00434 ;$1FFFFF$1FFFFF |/////////////////|___
                      00435 ;
                      00436 ;
                      00437 ; ========================================================================
                      00438 ; DATA MEMORY MAP (4685)
                      00439 ;
                      00440 ;       _________________ ___ ___ ___ ___ ___ ___ ___ ___
                      00441 ; $000 | global state,   | _ADATA            BANK 0
                      00442 ; $05F | ISR data, etc.  |                (ACCESS AREA)
                      00443 ;      |.................|...............................
                      00444 ; $060 |                 |                   
                      00445 ;      |_________________|___ ___ ___ ___ ___ ___ ___ ___
                      00446 ; $100 | Serial I/O TxD  | _SIO_TXBUF_DATA   BANK 1
                      00447 ;      | ring buffer     |
                      00448 ;      |_________________|___ ___ ___ ___ ___ ___ ___ ___
                      00449 ; $200 | Serial I/O RxD  | _SIO_RXBUF_DATA   BANK 2
                      00450 ;      | ring buffer     |
                      00451 ;      |_________________|___ ___ ___ ___ ___ ___ ___ ___
                      00452 ; $300 | Serial I/O mod  | _SIO_VAR_DATA     BANK 3
                      00453 ;      | variable space  |
                      00454 ;      |_________________|___ ___ ___ ___ ___ ___ ___ ___
                      00455 ; $400 | SSR state data  | _SSR_DATA         BANK 4
                      00456 ;      |                 |
                      00457 ;      |_________________|___ ___ ___ ___ ___ ___ ___ ___
                      00458 ; $500 | Parser buffer   | _MAINDATA         BANK 5
                      00459 ;      |.................|
                      00460 ; $5?? |                 |
                      00461 ;      |_________________|___ ___ ___ ___ ___ ___ ___ ___
                      00462 ; $600 | Stored sequences| _SEQ_DATA         BANK 6
                      00463 ;      | (1792 bytes)    |
                      00464 ;              .
                      00465 ;              .                 
                      00466 ;              .                
                      00467 ;      |                 |
                      00468 ;      |                 |
                      00469 ;      |_________________|___ ___ ___ ___ ___ ___ ___ ___
                      00470 ; $C00 | Quizshow Data   | _QUIZSHOW_DATA    BANK C
                      00471 ;      |                 |
                      00472 ;      |_________________|___ ___ ___ ___ ___ ___ ___ ___
                      00473 ; $D00 |                 |                   BANK D
                      00474 ;      | CAN special     |
                      00475 ;      | function        |___ ___ ___ ___ ___ ___ ___ ___
                      00476 ; $E00 | registers       |                   BANK E
                      00477 ;      | (not used for   |
                      00478 ;      | Lumos)          |___ ___ ___ ___ ___ ___ ___ ___
                      00479 ; $F00 |                 |                   BANK F
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00480 ;      |                 |
                      00481 ; $F5F |.................|...............................
                      00482 ; $F60 | Special Function|                (ACCESS AREA)
                      00483 ;      | (device) regis- |
                      00484 ;      | ters            |
                      00485 ; $FFF |_________________|___ ___ ___ ___ ___ ___ ___ ___
                      00486 ;
                      00487 ; ========================================================================
                      00488 ; EEPROM MEMORY
                      00489 ;
                      00490 ;
                      00491 ;       ______________            ______________ 
                      00492 ; $000 |_0xFF_________|     $010 | Saved        |
                      00493 ; $001 |_Baud_Rate____|     $011 | Sequence     |
                      00494 ; $002 |_Device_ID____|     $012 | Storage      |
                      00495 ; $003 | Phase     MSB|     $013 |       |      |
                      00496 ; $004 |_Offset____LSB|     $014 |       |      |
                      00497 ; $005 |_DMX_Slot__MSB|     $015 |       |      |
                      00498 ; $006 |_DMX_Slot__LSB|       .          .
                      00499 ; $007 |_Sensor_cfg___|       .          .
                      00500 ; $008 |______________|       .          .
                      00501 ; $009 |______________|     $3F9 |       |      |
                      00502 ; $00A |______________|     $3FA |       |      |
                      00503 ; $00B |______________|     $3FB | (1008 |      |
                      00504 ; $00C |______________|     $3FC | bytes)|      |
                      00505 ; $00D |______________|     $3FD |       |      |
                      00506 ; $00E |______________|     $3FE |       |      |
                      00507 ; $00F |_0x42_________|     $3FF |_______V______|
                      00508 ;
                      00509 ;
                      00510 
                      00511 ; ========================================================================
                      00512 ; DEVICES USED
                      00513 ;
                      00514 ; TMR0 L  120 Hz interrupt source (for boards without zero-crossing detector)
                      00515 ; TMR1
                      00516 ; TMR2 L  Dimmer slice timer (1/260 of a 120 Hz half-cycle)
                      00517 ; TMR3 L  Break detector for DMX reception
                      00518 ; UART L  SIO module
                      00519 ;=============================================================================
                      00520 ;
                      00521 ;------------------------------------------------------------------------------
                      00522 ; Significant Registers (ACCESS BANK)
                      00523 ;------------------------------------------------------------------------------
                      00524 ;
                      00525 ;                     ___7______6______5______4______3______2______1______0__
                      00526 ; ISR_TMPL_STATUS    |                                                       |
                      00527 ;                    | Temporary storage for STATUS register in low-pri ISR  |
                      00528 ;                    |______|______|______|______|______|______|______|______|
                      00529 ; ISR_TMPL_BSR       |                                                       |
                      00530 ;                    | Temporary storage for BSR register in low-priority ISR|
                      00531 ;                    |______|______|______|______|______|______|______|______|
                      00532 ; ISR_TMPL_WREG      |                                                       |
                      00533 ;                    | Temporary storage for W register in low-priority ISR  |
                      00534 ;                    |______|______|______|______|______|______|______|______|
                      00535 ; MY_ADDRESS         |                           |                           |
                      00536 ;                    |                           |       Unit address        |
                      00537 ;                    |______|______|______|______|______|______|______|______|
                      00538 ; PHASE_OFFSETH      |                                                       |
                      00539 ;                    |               Phase offset value (MSB)                |
                      00540 ;                    |______|______|______|______|______|______|______|______|
                      00541 ; PHASE_OFFSETL      |                                                       |
                      00542 ;                    |               Phase offset value (LSB)                |
                      00543 ;                    |______|______|______|______|______|______|______|______|
                      00544 ; SSR_STATE          |      |      |SLICE |PRIV_ |SLEEP |DRAIN |PRE_  |TEST_ |
                      00545 ;                    |INCYC |PRECYC| _UPD | MODE |_MODE |_TR   |PRIV  |MODE  |
                      00546 ;                    |______|______|______|______|______|______|______|______|
                      00547 ; SSR_STATE2         |TEST_ |TEST_ |TEST_ |ALL_  |PRIV_ |INHIBI|MSB_  |LITER |
                      00548 ;                    |PAUSE |UPD   |BUTTON|OFF   |FORBID|T_OUTP|ESC   |AL_ESC|
                      00549 ;                    |______|______|______|______|______|UT____|______|______|
                      00550 ; DMX_SLOTH          |DMX_EN|DMX_  |DMX_  |                           |DMX Sl|
                      00551 ;                    |      |SPEED |FRAME |                           |ot MSB|
                      00552 ;                    |______|______|______|______|______|______|______|______|
                      00553 ; DMX_SLOTL          |                                                       |
                      00554 ;                    |       Starting DMX Slot Number - 1 (low 8 bits)       |
                      00555 ;                    |______|______|______|______|______|______|______|______|
                      00556 ; YY_STATE           |                                                       |
                      00557 ;                    |                      Parser State                     |
                      00558 ;                    |______|______|______|______|______|______|______|______|
                      00559 ; YY_COMMAND         |                                                       |
                      00560 ;                    |                      Command Code                     |
                      00561 ;                    |______|______|______|______|______|______|______|______|
                      00562 ; YY_CMD_FLAGS       |                                                       |
                      00563 ;                    |               Command-specific Flag Bits              |
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00564 ;                    |______|______|______|______|______|______|______|______|
                      00565 ; YY_DATA            |                                                       |
                      00566 ;                    |                      Command Data                     |
                      00567 ;                    |______|______|______|______|______|______|______|______|
                      00568 ; YY_LOOKAHEAD_MAX   |                                                       |
                      00569 ;                    |               Maximum length for look-ahead           |
                      00570 ;                    |______|______|______|______|______|______|______|______|
                      00571 ; YY_LOOK_FOR        |                                                       |
                      00572 ;                    |               Sentinel value to search for            |
                      00573 ;                    |______|______|______|______|______|______|______|______|
                      00574 ; YY_BUF_IDX         |                                                       |
                      00575 ;                    |     Offset in YY_BUFFER where we will write next      |
                      00576 ;                    |______|______|______|______|______|______|______|______|
                      00577 ; YY_NEXT_STATE      |                                                       |
                      00578 ;                    |     State to transition to when YY_LOOK_FOR is found  |
                      00579 ;                    |______|______|______|______|______|______|______|______|
                      00580 ; YY_YY              |                                                       |
                      00581 ;                    |     General-purpose storage for use inside commands   |
                      00582 ;                    |______|______|______|______|______|______|______|______|
                      00583 ; LAST_ERROR         |                                                       |
                      00584 ;                    |  Last error code encountered (cleared when reported)  |
                      00585 ;                    |______|______|______|______|______|______|______|______|
                      00586 ; CUR_PREH           |                                                       |
                      00587 ;                    |         Pre-cycle count-down ticks left (MSB)         |
                      00588 ;                    |______|______|______|______|______|______|______|______|
                      00589 ; CUR_PRE            |                                                       |
                      00590 ;                    |         Pre-cycle count-down ticks left (LSB)         |
                      00591 ;                    |______|______|______|______|______|______|______|______|
                      00592 ; CUR_SLICE          |                                                       |
                      00593 ;                    |      Slice number within active portion of cycle      |
                      00594 ;                    |______|______|______|______|______|______|______|______|
                      00595 ; TARGET_SSR         |NOT_MY|INVALI|                                         |
                      00596 ;                    | _SSR |D_SSR |    SSR number for current command       |
                      00597 ;                    |______|______|______|______|______|______|______|______|
                      00598 ; OPTION_DEBOUNCE    |                                                       |
                      00599 ;                    |      Counter to debounce OPTION button presses        |
                      00600 ;                    |______|______|______|______|______|______|______|______|
                      00601 ; OPTION_HOLD        |                                                       |
                      00602 ;                    |      Counter for how long OPTION button is held       |
                      00603 ;                    |______|______|______|______|______|______|______|______|
                      00604 ; TEST_CYCLE         |                                                       |
                      00605 ;                    |        Count-down of ZC cycles until next step        |
                      00606 ;                    |______|______|______|______|______|______|______|______|
                      00607 ; TEST_SSR           |             |                                         |
                      00608 ;                    |             |  current SSR being tested               |
                      00609 ;                    |______|______|______|______|______|______|______|______|
                      00610 ; AUTO_OFF_CTRH      |                                                       |
                      00611 ;                    |         countdown register until auto-power-off (MSB) |
                      00612 ;                    |______|______|______|______|______|______|______|______|
                      00613 ; AUTO_OFF_CTRL      |                                                       |
                      00614 ;                    |         countdown register until auto-power-off (LSB) |
                      00615 ;                    |______|______|______|______|______|______|______|______|
                      00616 ; I                  |                                                       |
                      00617 ;                    |      General-purpose local counter variable           |
                      00618 ;                    |______|______|______|______|______|______|______|______|
                      00619 ; J                  |                                                       |
                      00620 ;                    |      General-purpose local counter variable           |
                      00621 ;                    |______|______|______|______|______|______|______|______|
                      00622 ; K                  |                                                       |
                      00623 ;                    |      General-purpose local counter variable           |
                      00624 ;                    |______|______|______|______|______|______|______|______|
                      00625 ; KK                 |                                                       |
                      00626 ;                    |      General-purpose local counter variable           |
                      00627 ;                    |______|______|______|______|______|______|______|______|
                      00628 ; TR_I               |                                                       |
                      00629 ;                    |      T/R delay timer delay counter                    |
                      00630 ;                    |______|______|______|______|______|______|______|______|
                      00631 ;
                      00632 ;
                      00633 ;------------------------------------------------------------------------------
                      00634 ; (SSR_DATA_BANK)
                      00635 ;------------------------------------------------------------------------------
                      00636 ;
                      00637 ; *** THE FOLLOWING BLOCKS *MUST* BE THE SAME SIZE AS EACH OTHER ***
                      00638 ;
                      00639 ;                     ___7______6______5______4______3______2______1______0__
                      00640 ; SSR_00_VALUE       |                                                       |
                      00641 ;                    | Brightness value of SSR #00 (00=off, ... FF=fully on) |
                      00642 ;                    |______|______|______|______|______|______|______|______|
                      00643 ;                    |                                                       |
                      00644 ;                    | Brightness value of SSR #01 (00=off, ... FF=fully on) |
                      00645 ;                    |______|______|______|______|______|______|______|______|
                      00646 ;                                                .
                      00647 ;                                                .
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00648 ;                     ___________________________.___________________________
                      00649 ;                    |                                                       |
                      00650 ;                    | Brightness value of SSR #23 (00=off, ... FF=fully on) |
                      00651 ;                    |______|______|______|______|______|______|______|______|
                      00652 ;                    |                                                       |
                      00653 ;                    | Brightness value of Green   (00=off, ... FF=fully on) |
                      00654 ;                    |______|______|______|______|______|______|______|______|
                      00655 ;                    |                                                       |
                      00656 ;                    | Brightness value of Yellow  (00=off, ... FF=fully on) |
                      00657 ;                    |______|______|______|______|______|______|______|______|
                      00658 ;                    |                                                       |
                      00659 ;                    | Brightness value of Red     (00=off, ... FF=fully on) |
                      00660 ;                    |______|______|______|______|______|______|______|______|
                      00661 ;                    | IF MASTER/STANDALONE:                                 |
                      00662 ;                    | Brightness value of Active  (00=off, ... FF=fully on) |
                      00663 ;                    |______|______|______|______|______|______|______|______|
                      00664 ; SSR_00_FLAGS       | FADE | FADE | FADE_|MAX_OF|      |      |      |      |
                      00665 ;                    | _UP  | _DOWN| CYCLE|F_TIME|      |      |      |      |
                      00666 ;                    |______|______|______|______|______|______|______|______|
                      00667 ;                                                .
                      00668 ;                                                .
                      00669 ;                     ___________________________.___________________________
                      00670 ; SSR_00_STEP        |                                                       |
                      00671 ;                    |          Brightness increment (0..255)                |
                      00672 ;                    |______|______|______|______|______|______|______|______|
                      00673 ;                                                .
                      00674 ;                                                .
                      00675 ;                     ___________________________.___________________________
                      00676 ; SSR_00_SPEED       |                                                       |
                      00677 ;                    |          Cycles between each step (0..255)            |
                      00678 ;                    |______|______|______|______|______|______|______|______|
                      00679 ;                                                .
                      00680 ;                                                .
                      00681 ;                     ___________________________.___________________________
                      00682 ; SSR_00_COUNTER     |                                                       |
                      00683 ;                    |          Cycles until next step (0..255)              |
                      00684 ;                    |______|______|______|______|______|______|______|______|
                      00685 ;                                                .
                      00686 ;                                                .
                      00687 ;                                                .                           
                      00688 ;
  0000                00689         GLOBAL  QSCC_START
  0000                00690         GLOBAL  QSCC_MAIN
  0000                00691         GLOBAL  QSCC_CMD5_START
  0000                00692         GLOBAL  QS_STOP_SCANNER
                      00693 
                      00694 ;------------------------------------------------------------------------------
                      00695 ; QUIZSHOW_DATA BANK
                      00696 ;------------------------------------------------------------------------------
                      00697 ;
                      00698 ;                     ___7______6______5______4______3______2______1______0__
                      00699 ; BTN_X0_TIME_T      |                                                       |
                      00700 ;                    |         Button press time (uS) <31:24>                |
                      00701 ;                    |______|______|______|______|______|______|______|______|
                      00702 ; BTN_X1_TIME_T      |                                                       |
                      00703 ;                    |         Button press time (uS) <31:24>                |
                      00704 ;                    |______|______|______|______|______|______|______|______|
                      00705 ;                                                :
                      00706 ;                     ___________________________:___________________________
                      00707 ; BTN_X0_TIME_U      |                                                       |
                      00708 ;                    |         Button press time (uS) <23:16>                |
                      00709 ;                    |______|______|______|______|______|______|______|______|
                      00710 ;                                                :
                      00711 ;                     ___________________________:___________________________
                      00712 ; BTN_X0_TIME_H      |                                                       |
                      00713 ;                    |         Button press time (uS) <15:8>                 |
                      00714 ;                    |______|______|______|______|______|______|______|______|
                      00715 ;                                                :
                      00716 ;                     ___________________________:___________________________
                      00717 ; BTN_X0_TIME_L      |                                                       |
                      00718 ;                    |         Button press time (uS) <7:0>                  |
                      00719 ;                    |______|______|______|______|______|______|______|______|
                      00720 ;                                                :
                      00721 ;                     ___________________________:___________________________
                      00722 ;
                      00723 ;      .
                      00724 ;      .        Ditto for L0, X1, L1, X2, L2, X3, L3, X4, L4            (QSRC)
                      00725 ;      .        Or... for L0, A, B, C, D                                (QSCC)
                      00726 ;
  00000C00            00727 QUIZSHOW_DATA   EQU     0xC00
                      00728 _QUIZSHOW_DATA  UDATA   QUIZSHOW_DATA
000C00                00729 BTN_X0_TIME_T   RES     N_BUTTONS       ; button press times (bits 31-24)
000C10                00730 BTN_X0_TIME_U   RES     N_BUTTONS       ; button press times (bits 23-16)
000C20                00731 BTN_X0_TIME_H   RES     N_BUTTONS       ; button press times (bits 15-08)
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C30                00732 BTN_X0_TIME_L   RES     N_BUTTONS       ; button press times (bits 07-00)
000C40                00733 BTN_X0_FLAGS    RES     N_BUTTONS       ; button flags
000C50                00734 BTN_X0_LOCKTMR  RES     N_BUTTONS       ; number of 1/120 sec remaining in lock
000C60                00735 BTN_X0_DEB_TMR  RES     N_BUTTONS       ; number of polls to satisfy debounce logic
000C70                00736 QUIZSHOW_LCKTM  RES     1               ; number of 1/120 sec we lock out offenders
                      00737 _QUIZSHOW_CODE  CODE
                      00738 
                      00739 
                      00740 ;
                      00741 ; Clear all button timers and states
                      00742 ;
                      00743 CLEAR_BUTTONS MACRO FULL_RESET
                      00744 CB_IDX  SET     0
                      00745         WHILE   CB_IDX < N_BUTTONS
                      00746          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
                      00747          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
                      00748          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
                      00749          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                      00750          IF FULL_RESET
                      00751           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                      00752           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                      00753           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                      00754          ELSE
                      00755           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                      00756          ENDIF
                      00757 CB_IDX   ++
                      00758         ENDW
                      00759         ENDM
                      00760                 
                      00761 ;
                      00762 ; Startup code (on top of what LUMOS_START does), right before the main loop
                      00763 ; is launched.
                      00764 ;
000000                00765 QSCC_START:
000000 0004           00766         CLRWDT
000002 010C           00767         BANKSEL QUIZSHOW_DATA
000004 6A00           00768         CLRF    QUIZSHOW_FLAGS, ACCESS
000006 0E3C           00769         MOVLW   .60
000008 6F00           00770         MOVWF   QUIZSHOW_LCKTM, BANKED                  ; lockout time is 1/2 second
                      00771         CLEAR_BUTTONS 1
  00000000                M CB_IDX  SET     0
                          M         WHILE   CB_IDX < N_BUTTONS
00000A 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
00000C 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
00000E 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
000010 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
000012 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
000014 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
000016 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000001                M CB_IDX   ++
000018 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
00001A 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
00001C 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
00001E 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
000020 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
000022 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
000024 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000002                M CB_IDX   ++
000026 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
000028 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
00002A 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
00002C 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
00002E 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
000030 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
000032 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000003                M CB_IDX   ++
000034 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
000036 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
000038 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
00003A 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
00003C 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00003E 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
000040 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000004                M CB_IDX   ++
000042 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
000044 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
000046 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
000048 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
00004A 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
00004C 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
00004E 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000005                M CB_IDX   ++
000050 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
000052 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
000054 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
000056 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
000058 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
00005A 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
00005C 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000006                M CB_IDX   ++
00005E 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
000060 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
000062 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
000064 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
000066 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
000068 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
00006A 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000007                M CB_IDX   ++
00006C 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
00006E 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
000070 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
000072 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
000074 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
000076 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
000078 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000008                M CB_IDX   ++
00007A 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
00007C 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
00007E 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
000080 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
000082 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
000084 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
000086 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000009                M CB_IDX   ++
000088 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
00008A 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
00008C 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
00008E 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
000090 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
000092 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
000094 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  0000000A                M CB_IDX   ++
000096 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
000098 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
00009A 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
00009C 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
00009E 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000A0 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
0000A2 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  0000000B                M CB_IDX   ++
0000A4 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
0000A6 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
0000A8 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
0000AA 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
0000AC 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
0000AE 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
0000B0 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  0000000C                M CB_IDX   ++
0000B2 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
0000B4 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
0000B6 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
0000B8 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
0000BA 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
0000BC 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
0000BE 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  0000000D                M CB_IDX   ++
0000C0 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
0000C2 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
0000C4 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
0000C6 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
0000C8 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
0000CA 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
0000CC 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  0000000E                M CB_IDX   ++
0000CE 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
0000D0 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
0000D2 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
0000D4 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
0000D6 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
0000D8 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
0000DA 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  0000000F                M CB_IDX   ++
0000DC 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
0000DE 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
0000E0 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
0000E2 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
0000E4 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
0000E6 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
0000E8 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000010                M CB_IDX   ++
                          M         ENDW
0000EA 0004           00772         CLRWDT
                      00773         SET_SSR_SLOW_FADE 0     ; CHANGES BANK!
                          M          SET_SSR_PATTERN 0,   0, 1, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0000EC 0104               M         BANKSEL SSR_DATA_BANK
0000EE 0E00               M          MOVLW  0
0000F0 6F00               M          MOVWF  SSR_00_VALUE+0,   BANKED
0000F2 0E01               M          MOVLW  1
0000F4 6F00               M          MOVWF  SSR_00_STEP+0,   BANKED
0000F6 0E01               M          MOVLW  1
0000F8 6F00               M          MOVWF  SSR_00_SPEED+0,   BANKED
0000FA 6F00               M          MOVWF  SSR_00_COUNTER+0,   BANKED
0000FC 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0000FE 6F00               M          MOVWF  SSR_00_FLAGS+0,   BANKED
000100 0012           00774         RETURN
                      00775 ;
                      00776 ; Main loop code (in addition to Lumos' main loop code)
                      00777 ;
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00778         EXTERN  SSR_00_VALUE
  0000                00779         EXTERN  SSR_00_FLAGS
  0000                00780         EXTERN  SSR_00_STEP
  0000                00781         EXTERN  SSR_00_SPEED
  0000                00782         EXTERN  SSR_00_COUNTER
                      00783 
000102                00784 QSCC_MAIN:
000102 0004           00785         CLRWDT
                      00786         ;
                      00787         ; Scan all the buttons to see which trigger something.
                      00788         ; We debounce them by making them hold the same reading for 256 *consecutive*
                      00789         ; polls before figuring it changed.
                      00790         ;
  00000000            00791 SCN_DBN SET     0
                      00792 
                      00793 SCAN_DEBOUNCE MACRO BTN_IDX, BTN_PORT, BTN_BIT, LT, LCK
                      00794         ; Sense button
                      00795         BTFSC   BTN_PORT, BTN_BIT, ACCESS
                      00796         BRA     SCN_DB_ACTIVE_#v(SCN_DBN)
                      00797 
                      00798         ; Button registers as being inactive now.  How long has this been the case?
                      00799         BTFSC   BTN_X0_FLAGS+BTN_IDX, BTN_FLG_ACTIVE, BANKED
                      00800         BRA     SCN_DB_CHANGED_#v(SCN_DBN)
                      00801 
                      00802         ; Still inactive? keep counting...
                      00803         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX, F, BANKED
                      00804         BRA     SCN_DB_END_#v(SCN_DBN)
                      00805 
                      00806         ; It's still inactive after 256 polls.  Time to count it as officially off now.
                      00807         BCF     BTN_X0_FLAGS+BTN_IDX, BTN_FLG_ACTIVE, BANKED
                      00808         ;
                      00809         ; XXX Based on our current state, deal with the consequences of letting
                      00810         ; XXX go of the button now.
                      00811         ;
                      00812         ; I think actually there aren't any here.
                      00813         ;
                      00814         BRA     SCN_DB_END_#v(SCN_DBN)
                      00815 
                      00816 SCN_DB_ACTIVE_#v(SCN_DBN):
                      00817         ; Button registers as being active now.  How long has this been happening?
                      00818         BTFSS   BTN_X0_FLAGS+BTN_IDX, BTN_FLG_ACTIVE, BANKED
                      00819         BRA     SCN_DB_CHANGED_#v(SCN_DBN)
                      00820 
                      00821         ; Still active? keep counting...
                      00822         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX, F, BANKED
                      00823         BRA     SCN_DB_END_#v(SCN_DBN)
                      00824 
                      00825         ; It's still active after 256 polls.  Time to count it as officially on now.
                      00826         BSF     BTN_X0_FLAGS+BTN_IDX, BTN_FLG_ACTIVE, BANKED
                      00827         ;
                      00828         ; Based on our current state, deal with the consequences of hitting
                      00829         ; the button now.
                      00830         ;
                      00831         ; If already pressed: ignore
                      00832         ; ElseIf masked out: ignore
                      00833         ; ElseIf locked out: reset lockout timer to start [handled above]
                      00834         ; ElseIf scanning: copy timer into button stats, set pressed flag
                      00835         ; Else: set lockout state, reset lockout timer
                      00836         ;       
                      00837         BTFSS   BTN_X0_FLAGS+BTN_IDX, BTN_FLG_PRESSED, BANKED
                      00838         BTFSC   BTN_X0_FLAGS+BTN_IDX, BTN_FLG_MASKED, BANKED
                      00839         BRA     SCN_DB_END_#v(SCN_DBN)
                      00840 
                      00841         BTFSC   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
                      00842         BRA     SCN_DB_DING_#v(SCN_DBN)
                      00843 
                      00844         BSF     BTN_X0_FLAGS+BTN_IDX, BTN_FLG_LOCKED, BANKED
                      00845         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX  
                      00846         LOCAL_LIGHT_INDICATOR BTN_IDX, LT, LCK
                      00847         BRA     SCN_DB_END_#v(SCN_DBN)
                      00848 
                      00849 SCN_DB_DING_#v(SCN_DBN):
                      00850         BSF     BTN_X0_FLAGS+BTN_IDX, BTN_FLG_PRESSED, BANKED
                      00851         ; copy timer values
                      00852         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+BTN_IDX
                      00853         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+BTN_IDX
                      00854         MOVFF   TMR1L, BTN_X0_TIME_L+BTN_IDX
                      00855         MOVFF   TMR1H, BTN_X0_TIME_H+BTN_IDX
                      00856         ; update the lights
                      00857         LOCAL_LIGHT_INDICATOR BTN_IDX, LT, LCK
                      00858         BRA     SCN_DB_END_#v(SCN_DBN)
                      00859         
                      00860 SCN_DB_CHANGED_#v(SCN_DBN):
                      00861         ; Button has changed since last time: reset debounce counter and wait.
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00862         CLRF    BTN_X0_DEB_TMR+BTN_IDX, BANKED
                      00863 
                      00864 SCN_DB_END_#v(SCN_DBN):
                      00865         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
                      00866         BRA     SCN_DB_DONE_#v(SCN_DBN)
                      00867         ;
                      00868         ; Every 1/120 second do this:
                      00869         ;
                      00870         ; Check for locked-out buttons. We hold them in this state as long as
                      00871         ; they are still being pressed.  Once they let go we start counting down time
                      00872         ; before releasing.
                      00873         ;
                      00874         BTFSS   BTN_X0_FLAGS+BTN_IDX, BTN_FLG_LOCKED, BANKED
                      00875         BRA     SCN_DB_DONE_#v(SCN_DBN)
                      00876 
                      00877         BTFSS   BTN_X0_FLAGS+BTN_IDX, BTN_FLG_ACTIVE, BANKED
                      00878         BRA     SCN_DB_LCK_#v(SCN_DBN)
                      00879 
                      00880         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX  ; active+locked: reset and hold timer
                      00881         BRA     SCN_DB_DONE_#v(SCN_DBN)
                      00882 
                      00883 SCN_DB_LCK_#v(SCN_DBN):
                      00884         DECFSZ  BTN_X0_LOCKTMR+BTN_IDX, F, BANKED       ; locked: count down to unlock time
                      00885         BRA     SCN_DB_DONE_#v(SCN_DBN)
                      00886 
                      00887         BCF     BTN_X0_FLAGS+BTN_IDX, BTN_FLG_LOCKED, BANKED
                      00888         LOCAL_LIGHT_INDICATOR BTN_IDX, LT, LCK
                      00889         
                      00890 SCN_DB_DONE_#v(SCN_DBN):
                      00891 SCN_DBN ++
                      00892         ENDM
                      00893 
                      00894 ;
                      00895 ; LOCAL_LIGHT_INDICATOR <button index>, <light index>
                      00896 ;       Turns on lights to indicate button state that we manage locally here
                      00897 ;       on the console (as opposed to what the external host does)
                      00898 ;       
                      00899 ;       When the scanner starts, enabled buttons are illuminated white, disabled are off.
                      00900 ;       Anytime a button is locked, it is illuminated in flashing red.
                      00901 ; 
                      00902 ;
  00000000            00903 LLIM_N  SET     0
                      00904 LOCAL_LIGHT_INDICATOR MACRO BTN_IDX, LT, LCK
                      00905         BANKSEL QUIZSHOW_DATA
                      00906         BTFSS   BTN_X0_FLAGS+BTN_IDX, BTN_FLG_LOCKED, BANKED
                      00907         BRA     LLIM_NOT_LOCKED_#v(LLIM_N)
                      00908 
                      00909         SET_SSR_OFF LT
                      00910         SET_SSR_RAPID_FADE LCK
                      00911         BRA     LLIM_END_#v(LLIM_N)
                      00912 
                      00913 LLIM_NOT_LOCKED_#v(LLIM_N):
                      00914         BTFSS   BTN_X0_FLAGS+BTN_IDX, BTN_FLG_MASKED, BANKED
                      00915         BTFSC   BTN_X0_FLAGS+BTN_IDX, BTN_FLG_PRESSED, BANKED
                      00916         BRA     LLIM_OFF_#v(LLIM_N)
                      00917         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
                      00918         BRA     LLIM_OFF_#v(LLIM_N)
                      00919         ; We're scanning and not masked or pressed - light up button
                      00920         SET_SSR_OFF LCK
                      00921         SET_SSR_STEADY LT
                      00922         BRA     LLIM_END_#v(LLIM_N)
                      00923 
                      00924 LLIM_OFF_#v(LLIM_N):
                      00925         SET_SSR_OFF LT
                      00926         SET_SSR_OFF LCK
                      00927         
                      00928 LLIM_END_#v(LLIM_N):
                      00929         BANKSEL QUIZSHOW_DATA
                      00930 LLIM_N  ++
                      00931         ENDM
                      00932         
                      00933 
000104 010C           00934         BANKSEL QUIZSHOW_DATA
000106 A200           00935         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_ON_120_S, ACCESS
000108 D???           00936         BRA     SCAN_DEBOUNCERS
00010A 8400           00937         BSF     QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
00010C 9200           00938         BCF     QUIZSHOW_FLAGS, QS_FLAG_ON_120_S, ACCESS
                      00939 
00010E                00940 SCAN_DEBOUNCERS:
                      00941         IF LUMOS_CHIP_TYPE == LUMOS_CHIP_QSCC
                      00942          SCAN_DEBOUNCE  BTN_IDX_X0, PORT_X0, BIT_X0, CHAN_X0G, CHAN_X0R
                      00943          SCAN_DEBOUNCE  BTN_IDX_L0, PORT_L0, BIT_L0, CHAN_L0G, CHAN_L0R
                      00944          SCAN_DEBOUNCE  BTN_IDX_A0, PORT_A0, BIT_A0, CHAN_A0L, CHAN_A0L
                      00945          SCAN_DEBOUNCE  BTN_IDX_B0, PORT_B0, BIT_B0, CHAN_B0L, CHAN_B0L
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00946          SCAN_DEBOUNCE  BTN_IDX_C0, PORT_C0, BIT_C0, CHAN_C0L, CHAN_C0L
                      00947          SCAN_DEBOUNCE  BTN_IDX_D0, PORT_D0, BIT_D0, CHAN_D0L, CHAN_D0L
                      00948         ELSE
                      00949          IF LUMOS_CHIP_TYPE == LUMOS_CHIP_QSRC
                      00950           SCAN_DEBOUNCE BTN_IDX_X0, PORT_X0, BIT_X0, CHAN_X0G, CHAN_X0R
                          M         ; Sense button
00010E B680               M         BTFSC   PORT_X0,  BIT_X0,  ACCESS
000110 D???               M         BRA     SCN_DB_ACTIVE_0
                          M 
                          M         ; Button registers as being inactive now.  How long has this been the case?
000112 B700               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_ACTIVE, BANKED
000114 D???               M         BRA     SCN_DB_CHANGED_0
                          M 
                          M         ; Still inactive? keep counting...
000116 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_X0, F, BANKED
000118 D???               M         BRA     SCN_DB_END_0
                          M 
                          M         ; It's still inactive after 256 polls.  Time to count it as officially off now.
00011A 9700               M         BCF     BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; XXX Based on our current state, deal with the consequences of letting
                          M         ; XXX go of the button now.
                          M         ;
                          M         ; I think actually there aren't any here.
                          M         ;
00011C D???               M         BRA     SCN_DB_END_0
                          M 
00011E                    M SCN_DB_ACTIVE_0:
                          M         ; Button registers as being active now.  How long has this been happening?
00011E A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_ACTIVE, BANKED
000120 D???               M         BRA     SCN_DB_CHANGED_0
                          M 
                          M         ; Still active? keep counting...
000122 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_X0, F, BANKED
000124 D???               M         BRA     SCN_DB_END_0
                          M 
                          M         ; It's still active after 256 polls.  Time to count it as officially on now.
000126 8700               M         BSF     BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; Based on our current state, deal with the consequences of hitting
                          M         ; the button now.
                          M         ;
                          M         ; If already pressed: ignore
                          M         ; ElseIf masked out: ignore
                          M         ; ElseIf locked out: reset lockout timer to start [handled above]
                          M         ; ElseIf scanning: copy timer into button stats, set pressed flag
                          M         ; Else: set lockout state, reset lockout timer
                          M         ;       
000128 A100               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_PRESSED, BANKED
00012A B300               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_MASKED, BANKED
00012C D???               M         BRA     SCN_DB_END_0
                          M 
00012E B000               M         BTFSC   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000130 D???               M         BRA     SCN_DB_DING_0
                          M 
000132 8500               M         BSF     BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_LOCKED, BANKED
000134 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_X0 
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X0, CHAN_X0G, CHAN_X0R
000138 010C               M         BANKSEL QUIZSHOW_DATA
00013A A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_LOCKED, BANKED
00013C D???               M         BRA     LLIM_NOT_LOCKED_0
                          M 
                          M         SET_SSR_OFF CHAN_X0G
                          M          SET_SSR_VALUE CHAN_X0G, 0
00013E 0104               M         BANKSEL SSR_DATA_BANK
000140 0E00               M          MOVLW  0
000142 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0G, BANKED
000144 6B00               M          CLRF   SSR_00_STEP+CHAN_X0G, BANKED
000146 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0G, BANKED
000148 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0G, BANKED
00014A 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X0R
                          M          SET_SSR_PATTERN CHAN_X0R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
00014C 0104               M         BANKSEL SSR_DATA_BANK
00014E 0E00               M          MOVLW  0
000150 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
000152 0E04               M          MOVLW  4
000154 6F00               M          MOVWF  SSR_00_STEP+CHAN_X0R, BANKED
000156 0E01               M          MOVLW  1
000158 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X0R, BANKED
00015A 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X0R, BANKED
00015C 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
00015E 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X0R, BANKED
000160 D???               M         BRA     LLIM_END_0
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000162                    M LLIM_NOT_LOCKED_0:
000162 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_MASKED, BANKED
000164 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_PRESSED, BANKED
000166 D???               M         BRA     LLIM_OFF_0
000168 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
00016A D???               M         BRA     LLIM_OFF_0
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X0R
                          M          SET_SSR_VALUE CHAN_X0R, 0
00016C 0104               M         BANKSEL SSR_DATA_BANK
00016E 0E00               M          MOVLW  0
000170 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
000172 6B00               M          CLRF   SSR_00_STEP+CHAN_X0R, BANKED
000174 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0R, BANKED
000176 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0R, BANKED
000178 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0R, BANKED
                          M         SET_SSR_STEADY CHAN_X0G
                          M          SET_SSR_VALUE CHAN_X0G, 255
00017A 0104               M         BANKSEL SSR_DATA_BANK
00017C 0EFF               M          MOVLW  255
00017E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0G, BANKED
000180 6B00               M          CLRF   SSR_00_STEP+CHAN_X0G, BANKED
000182 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0G, BANKED
000184 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0G, BANKED
000186 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0G, BANKED
000188 D???               M         BRA     LLIM_END_0
                          M 
00018A                    M LLIM_OFF_0:
                          M         SET_SSR_OFF CHAN_X0G
                          M          SET_SSR_VALUE CHAN_X0G, 0
00018A 0104               M         BANKSEL SSR_DATA_BANK
00018C 0E00               M          MOVLW  0
00018E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0G, BANKED
000190 6B00               M          CLRF   SSR_00_STEP+CHAN_X0G, BANKED
000192 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0G, BANKED
000194 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0G, BANKED
000196 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0G, BANKED
                          M         SET_SSR_OFF CHAN_X0R
                          M          SET_SSR_VALUE CHAN_X0R, 0
000198 0104               M         BANKSEL SSR_DATA_BANK
00019A 0E00               M          MOVLW  0
00019C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
00019E 6B00               M          CLRF   SSR_00_STEP+CHAN_X0R, BANKED
0001A0 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0R, BANKED
0001A2 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0R, BANKED
0001A4 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0R, BANKED
                          M         
0001A6                    M LLIM_END_0:
0001A6 010C               M         BANKSEL QUIZSHOW_DATA
  00000001                M LLIM_N  ++
0001A8 D???               M         BRA     SCN_DB_END_0
                          M 
0001AA                    M SCN_DB_DING_0:
0001AA 8100               M         BSF     BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_PRESSED, BANKED
                          M         ; copy timer values
0001AC C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+BTN_IDX_X0
0001B0 C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+BTN_IDX_X0
0001B4 CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+BTN_IDX_X0
0001B8 CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+BTN_IDX_X0
                          M         ; update the lights
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X0, CHAN_X0G, CHAN_X0R
0001BC 010C               M         BANKSEL QUIZSHOW_DATA
0001BE A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_LOCKED, BANKED
0001C0 D???               M         BRA     LLIM_NOT_LOCKED_1
                          M 
                          M         SET_SSR_OFF CHAN_X0G
                          M          SET_SSR_VALUE CHAN_X0G, 0
0001C2 0104               M         BANKSEL SSR_DATA_BANK
0001C4 0E00               M          MOVLW  0
0001C6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0G, BANKED
0001C8 6B00               M          CLRF   SSR_00_STEP+CHAN_X0G, BANKED
0001CA 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0G, BANKED
0001CC 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0G, BANKED
0001CE 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X0R
                          M          SET_SSR_PATTERN CHAN_X0R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0001D0 0104               M         BANKSEL SSR_DATA_BANK
0001D2 0E00               M          MOVLW  0
0001D4 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
0001D6 0E04               M          MOVLW  4
0001D8 6F00               M          MOVWF  SSR_00_STEP+CHAN_X0R, BANKED
0001DA 0E01               M          MOVLW  1
0001DC 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X0R, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001DE 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X0R, BANKED
0001E0 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0001E2 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X0R, BANKED
0001E4 D???               M         BRA     LLIM_END_1
                          M 
0001E6                    M LLIM_NOT_LOCKED_1:
0001E6 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_MASKED, BANKED
0001E8 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_PRESSED, BANKED
0001EA D???               M         BRA     LLIM_OFF_1
0001EC A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0001EE D???               M         BRA     LLIM_OFF_1
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X0R
                          M          SET_SSR_VALUE CHAN_X0R, 0
0001F0 0104               M         BANKSEL SSR_DATA_BANK
0001F2 0E00               M          MOVLW  0
0001F4 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
0001F6 6B00               M          CLRF   SSR_00_STEP+CHAN_X0R, BANKED
0001F8 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0R, BANKED
0001FA 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0R, BANKED
0001FC 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0R, BANKED
                          M         SET_SSR_STEADY CHAN_X0G
                          M          SET_SSR_VALUE CHAN_X0G, 255
0001FE 0104               M         BANKSEL SSR_DATA_BANK
000200 0EFF               M          MOVLW  255
000202 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0G, BANKED
000204 6B00               M          CLRF   SSR_00_STEP+CHAN_X0G, BANKED
000206 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0G, BANKED
000208 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0G, BANKED
00020A 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0G, BANKED
00020C D???               M         BRA     LLIM_END_1
                          M 
00020E                    M LLIM_OFF_1:
                          M         SET_SSR_OFF CHAN_X0G
                          M          SET_SSR_VALUE CHAN_X0G, 0
00020E 0104               M         BANKSEL SSR_DATA_BANK
000210 0E00               M          MOVLW  0
000212 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0G, BANKED
000214 6B00               M          CLRF   SSR_00_STEP+CHAN_X0G, BANKED
000216 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0G, BANKED
000218 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0G, BANKED
00021A 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0G, BANKED
                          M         SET_SSR_OFF CHAN_X0R
                          M          SET_SSR_VALUE CHAN_X0R, 0
00021C 0104               M         BANKSEL SSR_DATA_BANK
00021E 0E00               M          MOVLW  0
000220 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
000222 6B00               M          CLRF   SSR_00_STEP+CHAN_X0R, BANKED
000224 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0R, BANKED
000226 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0R, BANKED
000228 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0R, BANKED
                          M         
00022A                    M LLIM_END_1:
00022A 010C               M         BANKSEL QUIZSHOW_DATA
  00000002                M LLIM_N  ++
00022C D???               M         BRA     SCN_DB_END_0
                          M         
00022E                    M SCN_DB_CHANGED_0:
                          M         ; Button has changed since last time: reset debounce counter and wait.
00022E 6B00               M         CLRF    BTN_X0_DEB_TMR+BTN_IDX_X0, BANKED
                          M 
000230                    M SCN_DB_END_0:
000230 A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
000232 D???               M         BRA     SCN_DB_DONE_0
                          M         ;
                          M         ; Every 1/120 second do this:
                          M         ;
                          M         ; Check for locked-out buttons. We hold them in this state as long as
                          M         ; they are still being pressed.  Once they let go we start counting down time
                          M         ; before releasing.
                          M         ;
000234 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_LOCKED, BANKED
000236 D???               M         BRA     SCN_DB_DONE_0
                          M 
000238 A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_ACTIVE, BANKED
00023A D???               M         BRA     SCN_DB_LCK_0
                          M 
00023C C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_X0 ; active+locked: reset and hold timer
000240 D???               M         BRA     SCN_DB_DONE_0
                          M 
000242                    M SCN_DB_LCK_0:
000242 2F00               M         DECFSZ  BTN_X0_LOCKTMR+BTN_IDX_X0, F, BANKED    ; locked: count down to unlock time
000244 D???               M         BRA     SCN_DB_DONE_0
                          M 
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000246 9500               M         BCF     BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_LOCKED, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X0, CHAN_X0G, CHAN_X0R
000248 010C               M         BANKSEL QUIZSHOW_DATA
00024A A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_LOCKED, BANKED
00024C D???               M         BRA     LLIM_NOT_LOCKED_2
                          M 
                          M         SET_SSR_OFF CHAN_X0G
                          M          SET_SSR_VALUE CHAN_X0G, 0
00024E 0104               M         BANKSEL SSR_DATA_BANK
000250 0E00               M          MOVLW  0
000252 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0G, BANKED
000254 6B00               M          CLRF   SSR_00_STEP+CHAN_X0G, BANKED
000256 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0G, BANKED
000258 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0G, BANKED
00025A 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X0R
                          M          SET_SSR_PATTERN CHAN_X0R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
00025C 0104               M         BANKSEL SSR_DATA_BANK
00025E 0E00               M          MOVLW  0
000260 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
000262 0E04               M          MOVLW  4
000264 6F00               M          MOVWF  SSR_00_STEP+CHAN_X0R, BANKED
000266 0E01               M          MOVLW  1
000268 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X0R, BANKED
00026A 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X0R, BANKED
00026C 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
00026E 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X0R, BANKED
000270 D???               M         BRA     LLIM_END_2
                          M 
000272                    M LLIM_NOT_LOCKED_2:
000272 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_MASKED, BANKED
000274 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_PRESSED, BANKED
000276 D???               M         BRA     LLIM_OFF_2
000278 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
00027A D???               M         BRA     LLIM_OFF_2
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X0R
                          M          SET_SSR_VALUE CHAN_X0R, 0
00027C 0104               M         BANKSEL SSR_DATA_BANK
00027E 0E00               M          MOVLW  0
000280 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
000282 6B00               M          CLRF   SSR_00_STEP+CHAN_X0R, BANKED
000284 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0R, BANKED
000286 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0R, BANKED
000288 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0R, BANKED
                          M         SET_SSR_STEADY CHAN_X0G
                          M          SET_SSR_VALUE CHAN_X0G, 255
00028A 0104               M         BANKSEL SSR_DATA_BANK
00028C 0EFF               M          MOVLW  255
00028E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0G, BANKED
000290 6B00               M          CLRF   SSR_00_STEP+CHAN_X0G, BANKED
000292 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0G, BANKED
000294 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0G, BANKED
000296 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0G, BANKED
000298 D???               M         BRA     LLIM_END_2
                          M 
00029A                    M LLIM_OFF_2:
                          M         SET_SSR_OFF CHAN_X0G
                          M          SET_SSR_VALUE CHAN_X0G, 0
00029A 0104               M         BANKSEL SSR_DATA_BANK
00029C 0E00               M          MOVLW  0
00029E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0G, BANKED
0002A0 6B00               M          CLRF   SSR_00_STEP+CHAN_X0G, BANKED
0002A2 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0G, BANKED
0002A4 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0G, BANKED
0002A6 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0G, BANKED
                          M         SET_SSR_OFF CHAN_X0R
                          M          SET_SSR_VALUE CHAN_X0R, 0
0002A8 0104               M         BANKSEL SSR_DATA_BANK
0002AA 0E00               M          MOVLW  0
0002AC 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
0002AE 6B00               M          CLRF   SSR_00_STEP+CHAN_X0R, BANKED
0002B0 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0R, BANKED
0002B2 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0R, BANKED
0002B4 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0R, BANKED
                          M         
0002B6                    M LLIM_END_2:
0002B6 010C               M         BANKSEL QUIZSHOW_DATA
  00000003                M LLIM_N  ++
                          M         
0002B8                    M SCN_DB_DONE_0:
  00000001                M SCN_DBN ++
                      00951           SCAN_DEBOUNCE BTN_IDX_L0, PORT_L0, BIT_L0, CHAN_L0R, CHAN_L0R
                          M         ; Sense button
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002B8 B480               M         BTFSC   PORT_L0,  BIT_L0,  ACCESS
0002BA D???               M         BRA     SCN_DB_ACTIVE_1
                          M 
                          M         ; Button registers as being inactive now.  How long has this been the case?
0002BC B700               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_ACTIVE, BANKED
0002BE D???               M         BRA     SCN_DB_CHANGED_1
                          M 
                          M         ; Still inactive? keep counting...
0002C0 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_L0, F, BANKED
0002C2 D???               M         BRA     SCN_DB_END_1
                          M 
                          M         ; It's still inactive after 256 polls.  Time to count it as officially off now.
0002C4 9700               M         BCF     BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; XXX Based on our current state, deal with the consequences of letting
                          M         ; XXX go of the button now.
                          M         ;
                          M         ; I think actually there aren't any here.
                          M         ;
0002C6 D???               M         BRA     SCN_DB_END_1
                          M 
0002C8                    M SCN_DB_ACTIVE_1:
                          M         ; Button registers as being active now.  How long has this been happening?
0002C8 A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_ACTIVE, BANKED
0002CA D???               M         BRA     SCN_DB_CHANGED_1
                          M 
                          M         ; Still active? keep counting...
0002CC 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_L0, F, BANKED
0002CE D???               M         BRA     SCN_DB_END_1
                          M 
                          M         ; It's still active after 256 polls.  Time to count it as officially on now.
0002D0 8700               M         BSF     BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; Based on our current state, deal with the consequences of hitting
                          M         ; the button now.
                          M         ;
                          M         ; If already pressed: ignore
                          M         ; ElseIf masked out: ignore
                          M         ; ElseIf locked out: reset lockout timer to start [handled above]
                          M         ; ElseIf scanning: copy timer into button stats, set pressed flag
                          M         ; Else: set lockout state, reset lockout timer
                          M         ;       
0002D2 A100               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_PRESSED, BANKED
0002D4 B300               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_MASKED, BANKED
0002D6 D???               M         BRA     SCN_DB_END_1
                          M 
0002D8 B000               M         BTFSC   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0002DA D???               M         BRA     SCN_DB_DING_1
                          M 
0002DC 8500               M         BSF     BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_LOCKED, BANKED
0002DE C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_L0 
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L0, CHAN_L0R, CHAN_L0R
0002E2 010C               M         BANKSEL QUIZSHOW_DATA
0002E4 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_LOCKED, BANKED
0002E6 D???               M         BRA     LLIM_NOT_LOCKED_3
                          M 
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
0002E8 0104               M         BANKSEL SSR_DATA_BANK
0002EA 0E00               M          MOVLW  0
0002EC 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
0002EE 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
0002F0 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
0002F2 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
0002F4 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L0R
                          M          SET_SSR_PATTERN CHAN_L0R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0002F6 0104               M         BANKSEL SSR_DATA_BANK
0002F8 0E00               M          MOVLW  0
0002FA 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
0002FC 0E04               M          MOVLW  4
0002FE 6F00               M          MOVWF  SSR_00_STEP+CHAN_L0R, BANKED
000300 0E01               M          MOVLW  1
000302 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L0R, BANKED
000304 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L0R, BANKED
000306 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000308 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L0R, BANKED
00030A D???               M         BRA     LLIM_END_3
                          M 
00030C                    M LLIM_NOT_LOCKED_3:
00030C A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_MASKED, BANKED
00030E B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_PRESSED, BANKED
000310 D???               M         BRA     LLIM_OFF_3
000312 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000314 D???               M         BRA     LLIM_OFF_3
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
000316 0104               M         BANKSEL SSR_DATA_BANK
000318 0E00               M          MOVLW  0
00031A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
00031C 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
00031E 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
000320 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
000322 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         SET_SSR_STEADY CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 255
000324 0104               M         BANKSEL SSR_DATA_BANK
000326 0EFF               M          MOVLW  255
000328 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
00032A 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
00032C 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
00032E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
000330 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
000332 D???               M         BRA     LLIM_END_3
                          M 
000334                    M LLIM_OFF_3:
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
000334 0104               M         BANKSEL SSR_DATA_BANK
000336 0E00               M          MOVLW  0
000338 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
00033A 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
00033C 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
00033E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
000340 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
000342 0104               M         BANKSEL SSR_DATA_BANK
000344 0E00               M          MOVLW  0
000346 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
000348 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
00034A 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
00034C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
00034E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         
000350                    M LLIM_END_3:
000350 010C               M         BANKSEL QUIZSHOW_DATA
  00000004                M LLIM_N  ++
000352 D???               M         BRA     SCN_DB_END_1
                          M 
000354                    M SCN_DB_DING_1:
000354 8100               M         BSF     BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_PRESSED, BANKED
                          M         ; copy timer values
000356 C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+BTN_IDX_L0
00035A C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+BTN_IDX_L0
00035E CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+BTN_IDX_L0
000362 CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+BTN_IDX_L0
                          M         ; update the lights
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L0, CHAN_L0R, CHAN_L0R
000366 010C               M         BANKSEL QUIZSHOW_DATA
000368 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_LOCKED, BANKED
00036A D???               M         BRA     LLIM_NOT_LOCKED_4
                          M 
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
00036C 0104               M         BANKSEL SSR_DATA_BANK
00036E 0E00               M          MOVLW  0
000370 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
000372 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
000374 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
000376 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
000378 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L0R
                          M          SET_SSR_PATTERN CHAN_L0R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
00037A 0104               M         BANKSEL SSR_DATA_BANK
00037C 0E00               M          MOVLW  0
00037E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
000380 0E04               M          MOVLW  4
000382 6F00               M          MOVWF  SSR_00_STEP+CHAN_L0R, BANKED
000384 0E01               M          MOVLW  1
000386 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L0R, BANKED
000388 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L0R, BANKED
00038A 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
00038C 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L0R, BANKED
00038E D???               M         BRA     LLIM_END_4
                          M 
000390                    M LLIM_NOT_LOCKED_4:
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000390 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_MASKED, BANKED
000392 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_PRESSED, BANKED
000394 D???               M         BRA     LLIM_OFF_4
000396 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000398 D???               M         BRA     LLIM_OFF_4
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
00039A 0104               M         BANKSEL SSR_DATA_BANK
00039C 0E00               M          MOVLW  0
00039E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
0003A0 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
0003A2 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
0003A4 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
0003A6 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         SET_SSR_STEADY CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 255
0003A8 0104               M         BANKSEL SSR_DATA_BANK
0003AA 0EFF               M          MOVLW  255
0003AC 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
0003AE 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
0003B0 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
0003B2 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
0003B4 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
0003B6 D???               M         BRA     LLIM_END_4
                          M 
0003B8                    M LLIM_OFF_4:
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
0003B8 0104               M         BANKSEL SSR_DATA_BANK
0003BA 0E00               M          MOVLW  0
0003BC 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
0003BE 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
0003C0 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
0003C2 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
0003C4 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
0003C6 0104               M         BANKSEL SSR_DATA_BANK
0003C8 0E00               M          MOVLW  0
0003CA 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
0003CC 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
0003CE 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
0003D0 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
0003D2 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         
0003D4                    M LLIM_END_4:
0003D4 010C               M         BANKSEL QUIZSHOW_DATA
  00000005                M LLIM_N  ++
0003D6 D???               M         BRA     SCN_DB_END_1
                          M         
0003D8                    M SCN_DB_CHANGED_1:
                          M         ; Button has changed since last time: reset debounce counter and wait.
0003D8 6B00               M         CLRF    BTN_X0_DEB_TMR+BTN_IDX_L0, BANKED
                          M 
0003DA                    M SCN_DB_END_1:
0003DA A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
0003DC D???               M         BRA     SCN_DB_DONE_1
                          M         ;
                          M         ; Every 1/120 second do this:
                          M         ;
                          M         ; Check for locked-out buttons. We hold them in this state as long as
                          M         ; they are still being pressed.  Once they let go we start counting down time
                          M         ; before releasing.
                          M         ;
0003DE A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_LOCKED, BANKED
0003E0 D???               M         BRA     SCN_DB_DONE_1
                          M 
0003E2 A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_ACTIVE, BANKED
0003E4 D???               M         BRA     SCN_DB_LCK_1
                          M 
0003E6 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_L0 ; active+locked: reset and hold timer
0003EA D???               M         BRA     SCN_DB_DONE_1
                          M 
0003EC                    M SCN_DB_LCK_1:
0003EC 2F00               M         DECFSZ  BTN_X0_LOCKTMR+BTN_IDX_L0, F, BANKED    ; locked: count down to unlock time
0003EE D???               M         BRA     SCN_DB_DONE_1
                          M 
0003F0 9500               M         BCF     BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_LOCKED, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L0, CHAN_L0R, CHAN_L0R
0003F2 010C               M         BANKSEL QUIZSHOW_DATA
0003F4 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_LOCKED, BANKED
0003F6 D???               M         BRA     LLIM_NOT_LOCKED_5
                          M 
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
0003F8 0104               M         BANKSEL SSR_DATA_BANK
0003FA 0E00               M          MOVLW  0
0003FC 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
0003FE 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
000400 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
000402 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
000404 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L0R
                          M          SET_SSR_PATTERN CHAN_L0R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000406 0104               M         BANKSEL SSR_DATA_BANK
000408 0E00               M          MOVLW  0
00040A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
00040C 0E04               M          MOVLW  4
00040E 6F00               M          MOVWF  SSR_00_STEP+CHAN_L0R, BANKED
000410 0E01               M          MOVLW  1
000412 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L0R, BANKED
000414 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L0R, BANKED
000416 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000418 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L0R, BANKED
00041A D???               M         BRA     LLIM_END_5
                          M 
00041C                    M LLIM_NOT_LOCKED_5:
00041C A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_MASKED, BANKED
00041E B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_PRESSED, BANKED
000420 D???               M         BRA     LLIM_OFF_5
000422 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000424 D???               M         BRA     LLIM_OFF_5
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
000426 0104               M         BANKSEL SSR_DATA_BANK
000428 0E00               M          MOVLW  0
00042A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
00042C 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
00042E 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
000430 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
000432 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         SET_SSR_STEADY CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 255
000434 0104               M         BANKSEL SSR_DATA_BANK
000436 0EFF               M          MOVLW  255
000438 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
00043A 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
00043C 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
00043E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
000440 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
000442 D???               M         BRA     LLIM_END_5
                          M 
000444                    M LLIM_OFF_5:
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
000444 0104               M         BANKSEL SSR_DATA_BANK
000446 0E00               M          MOVLW  0
000448 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
00044A 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
00044C 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
00044E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
000450 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
000452 0104               M         BANKSEL SSR_DATA_BANK
000454 0E00               M          MOVLW  0
000456 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
000458 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
00045A 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
00045C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
00045E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         
000460                    M LLIM_END_5:
000460 010C               M         BANKSEL QUIZSHOW_DATA
  00000006                M LLIM_N  ++
                          M         
000462                    M SCN_DB_DONE_1:
  00000002                M SCN_DBN ++
                      00952           SCAN_DEBOUNCE BTN_IDX_X1, PORT_X1, BIT_X1, CHAN_X1G, CHAN_X1R
                          M         ; Sense button
000462 B280               M         BTFSC   PORT_X1,  BIT_X1,  ACCESS
000464 D???               M         BRA     SCN_DB_ACTIVE_2
                          M 
                          M         ; Button registers as being inactive now.  How long has this been the case?
000466 B700               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_ACTIVE, BANKED
000468 D???               M         BRA     SCN_DB_CHANGED_2
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
                          M         ; Still inactive? keep counting...
00046A 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_X1, F, BANKED
00046C D???               M         BRA     SCN_DB_END_2
                          M 
                          M         ; It's still inactive after 256 polls.  Time to count it as officially off now.
00046E 9700               M         BCF     BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; XXX Based on our current state, deal with the consequences of letting
                          M         ; XXX go of the button now.
                          M         ;
                          M         ; I think actually there aren't any here.
                          M         ;
000470 D???               M         BRA     SCN_DB_END_2
                          M 
000472                    M SCN_DB_ACTIVE_2:
                          M         ; Button registers as being active now.  How long has this been happening?
000472 A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_ACTIVE, BANKED
000474 D???               M         BRA     SCN_DB_CHANGED_2
                          M 
                          M         ; Still active? keep counting...
000476 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_X1, F, BANKED
000478 D???               M         BRA     SCN_DB_END_2
                          M 
                          M         ; It's still active after 256 polls.  Time to count it as officially on now.
00047A 8700               M         BSF     BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; Based on our current state, deal with the consequences of hitting
                          M         ; the button now.
                          M         ;
                          M         ; If already pressed: ignore
                          M         ; ElseIf masked out: ignore
                          M         ; ElseIf locked out: reset lockout timer to start [handled above]
                          M         ; ElseIf scanning: copy timer into button stats, set pressed flag
                          M         ; Else: set lockout state, reset lockout timer
                          M         ;       
00047C A100               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_PRESSED, BANKED
00047E B300               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_MASKED, BANKED
000480 D???               M         BRA     SCN_DB_END_2
                          M 
000482 B000               M         BTFSC   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000484 D???               M         BRA     SCN_DB_DING_2
                          M 
000486 8500               M         BSF     BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_LOCKED, BANKED
000488 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_X1 
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X1, CHAN_X1G, CHAN_X1R
00048C 010C               M         BANKSEL QUIZSHOW_DATA
00048E A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_LOCKED, BANKED
000490 D???               M         BRA     LLIM_NOT_LOCKED_6
                          M 
                          M         SET_SSR_OFF CHAN_X1G
                          M          SET_SSR_VALUE CHAN_X1G, 0
000492 0104               M         BANKSEL SSR_DATA_BANK
000494 0E00               M          MOVLW  0
000496 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1G, BANKED
000498 6B00               M          CLRF   SSR_00_STEP+CHAN_X1G, BANKED
00049A 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1G, BANKED
00049C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1G, BANKED
00049E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X1R
                          M          SET_SSR_PATTERN CHAN_X1R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0004A0 0104               M         BANKSEL SSR_DATA_BANK
0004A2 0E00               M          MOVLW  0
0004A4 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
0004A6 0E04               M          MOVLW  4
0004A8 6F00               M          MOVWF  SSR_00_STEP+CHAN_X1R, BANKED
0004AA 0E01               M          MOVLW  1
0004AC 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X1R, BANKED
0004AE 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X1R, BANKED
0004B0 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0004B2 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X1R, BANKED
0004B4 D???               M         BRA     LLIM_END_6
                          M 
0004B6                    M LLIM_NOT_LOCKED_6:
0004B6 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_MASKED, BANKED
0004B8 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_PRESSED, BANKED
0004BA D???               M         BRA     LLIM_OFF_6
0004BC A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0004BE D???               M         BRA     LLIM_OFF_6
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X1R
                          M          SET_SSR_VALUE CHAN_X1R, 0
0004C0 0104               M         BANKSEL SSR_DATA_BANK
0004C2 0E00               M          MOVLW  0
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004C4 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
0004C6 6B00               M          CLRF   SSR_00_STEP+CHAN_X1R, BANKED
0004C8 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1R, BANKED
0004CA 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1R, BANKED
0004CC 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1R, BANKED
                          M         SET_SSR_STEADY CHAN_X1G
                          M          SET_SSR_VALUE CHAN_X1G, 255
0004CE 0104               M         BANKSEL SSR_DATA_BANK
0004D0 0EFF               M          MOVLW  255
0004D2 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1G, BANKED
0004D4 6B00               M          CLRF   SSR_00_STEP+CHAN_X1G, BANKED
0004D6 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1G, BANKED
0004D8 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1G, BANKED
0004DA 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1G, BANKED
0004DC D???               M         BRA     LLIM_END_6
                          M 
0004DE                    M LLIM_OFF_6:
                          M         SET_SSR_OFF CHAN_X1G
                          M          SET_SSR_VALUE CHAN_X1G, 0
0004DE 0104               M         BANKSEL SSR_DATA_BANK
0004E0 0E00               M          MOVLW  0
0004E2 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1G, BANKED
0004E4 6B00               M          CLRF   SSR_00_STEP+CHAN_X1G, BANKED
0004E6 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1G, BANKED
0004E8 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1G, BANKED
0004EA 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1G, BANKED
                          M         SET_SSR_OFF CHAN_X1R
                          M          SET_SSR_VALUE CHAN_X1R, 0
0004EC 0104               M         BANKSEL SSR_DATA_BANK
0004EE 0E00               M          MOVLW  0
0004F0 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
0004F2 6B00               M          CLRF   SSR_00_STEP+CHAN_X1R, BANKED
0004F4 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1R, BANKED
0004F6 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1R, BANKED
0004F8 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1R, BANKED
                          M         
0004FA                    M LLIM_END_6:
0004FA 010C               M         BANKSEL QUIZSHOW_DATA
  00000007                M LLIM_N  ++
0004FC D???               M         BRA     SCN_DB_END_2
                          M 
0004FE                    M SCN_DB_DING_2:
0004FE 8100               M         BSF     BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_PRESSED, BANKED
                          M         ; copy timer values
000500 C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+BTN_IDX_X1
000504 C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+BTN_IDX_X1
000508 CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+BTN_IDX_X1
00050C CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+BTN_IDX_X1
                          M         ; update the lights
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X1, CHAN_X1G, CHAN_X1R
000510 010C               M         BANKSEL QUIZSHOW_DATA
000512 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_LOCKED, BANKED
000514 D???               M         BRA     LLIM_NOT_LOCKED_7
                          M 
                          M         SET_SSR_OFF CHAN_X1G
                          M          SET_SSR_VALUE CHAN_X1G, 0
000516 0104               M         BANKSEL SSR_DATA_BANK
000518 0E00               M          MOVLW  0
00051A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1G, BANKED
00051C 6B00               M          CLRF   SSR_00_STEP+CHAN_X1G, BANKED
00051E 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1G, BANKED
000520 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1G, BANKED
000522 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X1R
                          M          SET_SSR_PATTERN CHAN_X1R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000524 0104               M         BANKSEL SSR_DATA_BANK
000526 0E00               M          MOVLW  0
000528 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
00052A 0E04               M          MOVLW  4
00052C 6F00               M          MOVWF  SSR_00_STEP+CHAN_X1R, BANKED
00052E 0E01               M          MOVLW  1
000530 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X1R, BANKED
000532 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X1R, BANKED
000534 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000536 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X1R, BANKED
000538 D???               M         BRA     LLIM_END_7
                          M 
00053A                    M LLIM_NOT_LOCKED_7:
00053A A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_MASKED, BANKED
00053C B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_PRESSED, BANKED
00053E D???               M         BRA     LLIM_OFF_7
000540 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000542 D???               M         BRA     LLIM_OFF_7
                          M         ; We're scanning and not masked or pressed - light up button
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         SET_SSR_OFF CHAN_X1R
                          M          SET_SSR_VALUE CHAN_X1R, 0
000544 0104               M         BANKSEL SSR_DATA_BANK
000546 0E00               M          MOVLW  0
000548 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
00054A 6B00               M          CLRF   SSR_00_STEP+CHAN_X1R, BANKED
00054C 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1R, BANKED
00054E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1R, BANKED
000550 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1R, BANKED
                          M         SET_SSR_STEADY CHAN_X1G
                          M          SET_SSR_VALUE CHAN_X1G, 255
000552 0104               M         BANKSEL SSR_DATA_BANK
000554 0EFF               M          MOVLW  255
000556 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1G, BANKED
000558 6B00               M          CLRF   SSR_00_STEP+CHAN_X1G, BANKED
00055A 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1G, BANKED
00055C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1G, BANKED
00055E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1G, BANKED
000560 D???               M         BRA     LLIM_END_7
                          M 
000562                    M LLIM_OFF_7:
                          M         SET_SSR_OFF CHAN_X1G
                          M          SET_SSR_VALUE CHAN_X1G, 0
000562 0104               M         BANKSEL SSR_DATA_BANK
000564 0E00               M          MOVLW  0
000566 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1G, BANKED
000568 6B00               M          CLRF   SSR_00_STEP+CHAN_X1G, BANKED
00056A 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1G, BANKED
00056C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1G, BANKED
00056E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1G, BANKED
                          M         SET_SSR_OFF CHAN_X1R
                          M          SET_SSR_VALUE CHAN_X1R, 0
000570 0104               M         BANKSEL SSR_DATA_BANK
000572 0E00               M          MOVLW  0
000574 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
000576 6B00               M          CLRF   SSR_00_STEP+CHAN_X1R, BANKED
000578 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1R, BANKED
00057A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1R, BANKED
00057C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1R, BANKED
                          M         
00057E                    M LLIM_END_7:
00057E 010C               M         BANKSEL QUIZSHOW_DATA
  00000008                M LLIM_N  ++
000580 D???               M         BRA     SCN_DB_END_2
                          M         
000582                    M SCN_DB_CHANGED_2:
                          M         ; Button has changed since last time: reset debounce counter and wait.
000582 6B00               M         CLRF    BTN_X0_DEB_TMR+BTN_IDX_X1, BANKED
                          M 
000584                    M SCN_DB_END_2:
000584 A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
000586 D???               M         BRA     SCN_DB_DONE_2
                          M         ;
                          M         ; Every 1/120 second do this:
                          M         ;
                          M         ; Check for locked-out buttons. We hold them in this state as long as
                          M         ; they are still being pressed.  Once they let go we start counting down time
                          M         ; before releasing.
                          M         ;
000588 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_LOCKED, BANKED
00058A D???               M         BRA     SCN_DB_DONE_2
                          M 
00058C A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_ACTIVE, BANKED
00058E D???               M         BRA     SCN_DB_LCK_2
                          M 
000590 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_X1 ; active+locked: reset and hold timer
000594 D???               M         BRA     SCN_DB_DONE_2
                          M 
000596                    M SCN_DB_LCK_2:
000596 2F00               M         DECFSZ  BTN_X0_LOCKTMR+BTN_IDX_X1, F, BANKED    ; locked: count down to unlock time
000598 D???               M         BRA     SCN_DB_DONE_2
                          M 
00059A 9500               M         BCF     BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_LOCKED, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X1, CHAN_X1G, CHAN_X1R
00059C 010C               M         BANKSEL QUIZSHOW_DATA
00059E A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_LOCKED, BANKED
0005A0 D???               M         BRA     LLIM_NOT_LOCKED_8
                          M 
                          M         SET_SSR_OFF CHAN_X1G
                          M          SET_SSR_VALUE CHAN_X1G, 0
0005A2 0104               M         BANKSEL SSR_DATA_BANK
0005A4 0E00               M          MOVLW  0
0005A6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1G, BANKED
0005A8 6B00               M          CLRF   SSR_00_STEP+CHAN_X1G, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005AA 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1G, BANKED
0005AC 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1G, BANKED
0005AE 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X1R
                          M          SET_SSR_PATTERN CHAN_X1R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0005B0 0104               M         BANKSEL SSR_DATA_BANK
0005B2 0E00               M          MOVLW  0
0005B4 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
0005B6 0E04               M          MOVLW  4
0005B8 6F00               M          MOVWF  SSR_00_STEP+CHAN_X1R, BANKED
0005BA 0E01               M          MOVLW  1
0005BC 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X1R, BANKED
0005BE 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X1R, BANKED
0005C0 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0005C2 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X1R, BANKED
0005C4 D???               M         BRA     LLIM_END_8
                          M 
0005C6                    M LLIM_NOT_LOCKED_8:
0005C6 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_MASKED, BANKED
0005C8 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_PRESSED, BANKED
0005CA D???               M         BRA     LLIM_OFF_8
0005CC A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0005CE D???               M         BRA     LLIM_OFF_8
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X1R
                          M          SET_SSR_VALUE CHAN_X1R, 0
0005D0 0104               M         BANKSEL SSR_DATA_BANK
0005D2 0E00               M          MOVLW  0
0005D4 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
0005D6 6B00               M          CLRF   SSR_00_STEP+CHAN_X1R, BANKED
0005D8 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1R, BANKED
0005DA 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1R, BANKED
0005DC 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1R, BANKED
                          M         SET_SSR_STEADY CHAN_X1G
                          M          SET_SSR_VALUE CHAN_X1G, 255
0005DE 0104               M         BANKSEL SSR_DATA_BANK
0005E0 0EFF               M          MOVLW  255
0005E2 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1G, BANKED
0005E4 6B00               M          CLRF   SSR_00_STEP+CHAN_X1G, BANKED
0005E6 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1G, BANKED
0005E8 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1G, BANKED
0005EA 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1G, BANKED
0005EC D???               M         BRA     LLIM_END_8
                          M 
0005EE                    M LLIM_OFF_8:
                          M         SET_SSR_OFF CHAN_X1G
                          M          SET_SSR_VALUE CHAN_X1G, 0
0005EE 0104               M         BANKSEL SSR_DATA_BANK
0005F0 0E00               M          MOVLW  0
0005F2 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1G, BANKED
0005F4 6B00               M          CLRF   SSR_00_STEP+CHAN_X1G, BANKED
0005F6 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1G, BANKED
0005F8 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1G, BANKED
0005FA 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1G, BANKED
                          M         SET_SSR_OFF CHAN_X1R
                          M          SET_SSR_VALUE CHAN_X1R, 0
0005FC 0104               M         BANKSEL SSR_DATA_BANK
0005FE 0E00               M          MOVLW  0
000600 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
000602 6B00               M          CLRF   SSR_00_STEP+CHAN_X1R, BANKED
000604 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1R, BANKED
000606 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1R, BANKED
000608 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1R, BANKED
                          M         
00060A                    M LLIM_END_8:
00060A 010C               M         BANKSEL QUIZSHOW_DATA
  00000009                M LLIM_N  ++
                          M         
00060C                    M SCN_DB_DONE_2:
  00000003                M SCN_DBN ++
                      00953           SCAN_DEBOUNCE BTN_IDX_L1, PORT_L1, BIT_L1, CHAN_L1R, CHAN_L1R
                          M         ; Sense button
00060C B080               M         BTFSC   PORT_L1,  BIT_L1,  ACCESS
00060E D???               M         BRA     SCN_DB_ACTIVE_3
                          M 
                          M         ; Button registers as being inactive now.  How long has this been the case?
000610 B700               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_ACTIVE, BANKED
000612 D???               M         BRA     SCN_DB_CHANGED_3
                          M 
                          M         ; Still inactive? keep counting...
000614 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_L1, F, BANKED
000616 D???               M         BRA     SCN_DB_END_3
                          M 
                          M         ; It's still inactive after 256 polls.  Time to count it as officially off now.
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000618 9700               M         BCF     BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; XXX Based on our current state, deal with the consequences of letting
                          M         ; XXX go of the button now.
                          M         ;
                          M         ; I think actually there aren't any here.
                          M         ;
00061A D???               M         BRA     SCN_DB_END_3
                          M 
00061C                    M SCN_DB_ACTIVE_3:
                          M         ; Button registers as being active now.  How long has this been happening?
00061C A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_ACTIVE, BANKED
00061E D???               M         BRA     SCN_DB_CHANGED_3
                          M 
                          M         ; Still active? keep counting...
000620 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_L1, F, BANKED
000622 D???               M         BRA     SCN_DB_END_3
                          M 
                          M         ; It's still active after 256 polls.  Time to count it as officially on now.
000624 8700               M         BSF     BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; Based on our current state, deal with the consequences of hitting
                          M         ; the button now.
                          M         ;
                          M         ; If already pressed: ignore
                          M         ; ElseIf masked out: ignore
                          M         ; ElseIf locked out: reset lockout timer to start [handled above]
                          M         ; ElseIf scanning: copy timer into button stats, set pressed flag
                          M         ; Else: set lockout state, reset lockout timer
                          M         ;       
000626 A100               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_PRESSED, BANKED
000628 B300               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_MASKED, BANKED
00062A D???               M         BRA     SCN_DB_END_3
                          M 
00062C B000               M         BTFSC   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
00062E D???               M         BRA     SCN_DB_DING_3
                          M 
000630 8500               M         BSF     BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_LOCKED, BANKED
000632 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_L1 
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L1, CHAN_L1R, CHAN_L1R
000636 010C               M         BANKSEL QUIZSHOW_DATA
000638 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_LOCKED, BANKED
00063A D???               M         BRA     LLIM_NOT_LOCKED_9
                          M 
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
00063C 0104               M         BANKSEL SSR_DATA_BANK
00063E 0E00               M          MOVLW  0
000640 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
000642 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
000644 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
000646 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
000648 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L1R
                          M          SET_SSR_PATTERN CHAN_L1R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
00064A 0104               M         BANKSEL SSR_DATA_BANK
00064C 0E00               M          MOVLW  0
00064E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
000650 0E04               M          MOVLW  4
000652 6F00               M          MOVWF  SSR_00_STEP+CHAN_L1R, BANKED
000654 0E01               M          MOVLW  1
000656 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L1R, BANKED
000658 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L1R, BANKED
00065A 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
00065C 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L1R, BANKED
00065E D???               M         BRA     LLIM_END_9
                          M 
000660                    M LLIM_NOT_LOCKED_9:
000660 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_MASKED, BANKED
000662 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_PRESSED, BANKED
000664 D???               M         BRA     LLIM_OFF_9
000666 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000668 D???               M         BRA     LLIM_OFF_9
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
00066A 0104               M         BANKSEL SSR_DATA_BANK
00066C 0E00               M          MOVLW  0
00066E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
000670 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
000672 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
000674 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
000676 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         SET_SSR_STEADY CHAN_L1R
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M          SET_SSR_VALUE CHAN_L1R, 255
000678 0104               M         BANKSEL SSR_DATA_BANK
00067A 0EFF               M          MOVLW  255
00067C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
00067E 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
000680 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
000682 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
000684 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
000686 D???               M         BRA     LLIM_END_9
                          M 
000688                    M LLIM_OFF_9:
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
000688 0104               M         BANKSEL SSR_DATA_BANK
00068A 0E00               M          MOVLW  0
00068C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
00068E 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
000690 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
000692 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
000694 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
000696 0104               M         BANKSEL SSR_DATA_BANK
000698 0E00               M          MOVLW  0
00069A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
00069C 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
00069E 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
0006A0 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
0006A2 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         
0006A4                    M LLIM_END_9:
0006A4 010C               M         BANKSEL QUIZSHOW_DATA
  0000000A                M LLIM_N  ++
0006A6 D???               M         BRA     SCN_DB_END_3
                          M 
0006A8                    M SCN_DB_DING_3:
0006A8 8100               M         BSF     BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_PRESSED, BANKED
                          M         ; copy timer values
0006AA C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+BTN_IDX_L1
0006AE C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+BTN_IDX_L1
0006B2 CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+BTN_IDX_L1
0006B6 CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+BTN_IDX_L1
                          M         ; update the lights
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L1, CHAN_L1R, CHAN_L1R
0006BA 010C               M         BANKSEL QUIZSHOW_DATA
0006BC A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_LOCKED, BANKED
0006BE D???               M         BRA     LLIM_NOT_LOCKED_10
                          M 
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
0006C0 0104               M         BANKSEL SSR_DATA_BANK
0006C2 0E00               M          MOVLW  0
0006C4 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
0006C6 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
0006C8 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
0006CA 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
0006CC 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L1R
                          M          SET_SSR_PATTERN CHAN_L1R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0006CE 0104               M         BANKSEL SSR_DATA_BANK
0006D0 0E00               M          MOVLW  0
0006D2 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
0006D4 0E04               M          MOVLW  4
0006D6 6F00               M          MOVWF  SSR_00_STEP+CHAN_L1R, BANKED
0006D8 0E01               M          MOVLW  1
0006DA 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L1R, BANKED
0006DC 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L1R, BANKED
0006DE 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0006E0 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L1R, BANKED
0006E2 D???               M         BRA     LLIM_END_10
                          M 
0006E4                    M LLIM_NOT_LOCKED_10:
0006E4 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_MASKED, BANKED
0006E6 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_PRESSED, BANKED
0006E8 D???               M         BRA     LLIM_OFF_10
0006EA A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0006EC D???               M         BRA     LLIM_OFF_10
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
0006EE 0104               M         BANKSEL SSR_DATA_BANK
0006F0 0E00               M          MOVLW  0
0006F2 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
0006F4 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006F6 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
0006F8 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
0006FA 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         SET_SSR_STEADY CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 255
0006FC 0104               M         BANKSEL SSR_DATA_BANK
0006FE 0EFF               M          MOVLW  255
000700 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
000702 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
000704 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
000706 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
000708 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
00070A D???               M         BRA     LLIM_END_10
                          M 
00070C                    M LLIM_OFF_10:
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
00070C 0104               M         BANKSEL SSR_DATA_BANK
00070E 0E00               M          MOVLW  0
000710 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
000712 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
000714 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
000716 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
000718 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
00071A 0104               M         BANKSEL SSR_DATA_BANK
00071C 0E00               M          MOVLW  0
00071E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
000720 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
000722 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
000724 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
000726 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         
000728                    M LLIM_END_10:
000728 010C               M         BANKSEL QUIZSHOW_DATA
  0000000B                M LLIM_N  ++
00072A D???               M         BRA     SCN_DB_END_3
                          M         
00072C                    M SCN_DB_CHANGED_3:
                          M         ; Button has changed since last time: reset debounce counter and wait.
00072C 6B00               M         CLRF    BTN_X0_DEB_TMR+BTN_IDX_L1, BANKED
                          M 
00072E                    M SCN_DB_END_3:
00072E A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
000730 D???               M         BRA     SCN_DB_DONE_3
                          M         ;
                          M         ; Every 1/120 second do this:
                          M         ;
                          M         ; Check for locked-out buttons. We hold them in this state as long as
                          M         ; they are still being pressed.  Once they let go we start counting down time
                          M         ; before releasing.
                          M         ;
000732 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_LOCKED, BANKED
000734 D???               M         BRA     SCN_DB_DONE_3
                          M 
000736 A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_ACTIVE, BANKED
000738 D???               M         BRA     SCN_DB_LCK_3
                          M 
00073A C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_L1 ; active+locked: reset and hold timer
00073E D???               M         BRA     SCN_DB_DONE_3
                          M 
000740                    M SCN_DB_LCK_3:
000740 2F00               M         DECFSZ  BTN_X0_LOCKTMR+BTN_IDX_L1, F, BANKED    ; locked: count down to unlock time
000742 D???               M         BRA     SCN_DB_DONE_3
                          M 
000744 9500               M         BCF     BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_LOCKED, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L1, CHAN_L1R, CHAN_L1R
000746 010C               M         BANKSEL QUIZSHOW_DATA
000748 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_LOCKED, BANKED
00074A D???               M         BRA     LLIM_NOT_LOCKED_11
                          M 
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
00074C 0104               M         BANKSEL SSR_DATA_BANK
00074E 0E00               M          MOVLW  0
000750 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
000752 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
000754 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
000756 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
000758 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L1R
                          M          SET_SSR_PATTERN CHAN_L1R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
00075A 0104               M         BANKSEL SSR_DATA_BANK
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00075C 0E00               M          MOVLW  0
00075E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
000760 0E04               M          MOVLW  4
000762 6F00               M          MOVWF  SSR_00_STEP+CHAN_L1R, BANKED
000764 0E01               M          MOVLW  1
000766 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L1R, BANKED
000768 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L1R, BANKED
00076A 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
00076C 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L1R, BANKED
00076E D???               M         BRA     LLIM_END_11
                          M 
000770                    M LLIM_NOT_LOCKED_11:
000770 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_MASKED, BANKED
000772 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_PRESSED, BANKED
000774 D???               M         BRA     LLIM_OFF_11
000776 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000778 D???               M         BRA     LLIM_OFF_11
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
00077A 0104               M         BANKSEL SSR_DATA_BANK
00077C 0E00               M          MOVLW  0
00077E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
000780 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
000782 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
000784 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
000786 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         SET_SSR_STEADY CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 255
000788 0104               M         BANKSEL SSR_DATA_BANK
00078A 0EFF               M          MOVLW  255
00078C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
00078E 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
000790 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
000792 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
000794 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
000796 D???               M         BRA     LLIM_END_11
                          M 
000798                    M LLIM_OFF_11:
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
000798 0104               M         BANKSEL SSR_DATA_BANK
00079A 0E00               M          MOVLW  0
00079C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
00079E 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
0007A0 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
0007A2 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
0007A4 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
0007A6 0104               M         BANKSEL SSR_DATA_BANK
0007A8 0E00               M          MOVLW  0
0007AA 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
0007AC 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
0007AE 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
0007B0 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
0007B2 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         
0007B4                    M LLIM_END_11:
0007B4 010C               M         BANKSEL QUIZSHOW_DATA
  0000000C                M LLIM_N  ++
                          M         
0007B6                    M SCN_DB_DONE_3:
  00000004                M SCN_DBN ++
                      00954           SCAN_DEBOUNCE BTN_IDX_X2, PORT_X2, BIT_X2, CHAN_X2G, CHAN_X2R
                          M         ; Sense button
0007B6 B880               M         BTFSC   PORT_X2,  BIT_X2,  ACCESS
0007B8 D???               M         BRA     SCN_DB_ACTIVE_4
                          M 
                          M         ; Button registers as being inactive now.  How long has this been the case?
0007BA B700               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_ACTIVE, BANKED
0007BC D???               M         BRA     SCN_DB_CHANGED_4
                          M 
                          M         ; Still inactive? keep counting...
0007BE 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_X2, F, BANKED
0007C0 D???               M         BRA     SCN_DB_END_4
                          M 
                          M         ; It's still inactive after 256 polls.  Time to count it as officially off now.
0007C2 9700               M         BCF     BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; XXX Based on our current state, deal with the consequences of letting
                          M         ; XXX go of the button now.
                          M         ;
                          M         ; I think actually there aren't any here.
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ;
0007C4 D???               M         BRA     SCN_DB_END_4
                          M 
0007C6                    M SCN_DB_ACTIVE_4:
                          M         ; Button registers as being active now.  How long has this been happening?
0007C6 A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_ACTIVE, BANKED
0007C8 D???               M         BRA     SCN_DB_CHANGED_4
                          M 
                          M         ; Still active? keep counting...
0007CA 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_X2, F, BANKED
0007CC D???               M         BRA     SCN_DB_END_4
                          M 
                          M         ; It's still active after 256 polls.  Time to count it as officially on now.
0007CE 8700               M         BSF     BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; Based on our current state, deal with the consequences of hitting
                          M         ; the button now.
                          M         ;
                          M         ; If already pressed: ignore
                          M         ; ElseIf masked out: ignore
                          M         ; ElseIf locked out: reset lockout timer to start [handled above]
                          M         ; ElseIf scanning: copy timer into button stats, set pressed flag
                          M         ; Else: set lockout state, reset lockout timer
                          M         ;       
0007D0 A100               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_PRESSED, BANKED
0007D2 B300               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_MASKED, BANKED
0007D4 D???               M         BRA     SCN_DB_END_4
                          M 
0007D6 B000               M         BTFSC   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0007D8 D???               M         BRA     SCN_DB_DING_4
                          M 
0007DA 8500               M         BSF     BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_LOCKED, BANKED
0007DC C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_X2 
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X2, CHAN_X2G, CHAN_X2R
0007E0 010C               M         BANKSEL QUIZSHOW_DATA
0007E2 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_LOCKED, BANKED
0007E4 D???               M         BRA     LLIM_NOT_LOCKED_12
                          M 
                          M         SET_SSR_OFF CHAN_X2G
                          M          SET_SSR_VALUE CHAN_X2G, 0
0007E6 0104               M         BANKSEL SSR_DATA_BANK
0007E8 0E00               M          MOVLW  0
0007EA 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2G, BANKED
0007EC 6B00               M          CLRF   SSR_00_STEP+CHAN_X2G, BANKED
0007EE 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2G, BANKED
0007F0 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2G, BANKED
0007F2 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X2R
                          M          SET_SSR_PATTERN CHAN_X2R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0007F4 0104               M         BANKSEL SSR_DATA_BANK
0007F6 0E00               M          MOVLW  0
0007F8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
0007FA 0E04               M          MOVLW  4
0007FC 6F00               M          MOVWF  SSR_00_STEP+CHAN_X2R, BANKED
0007FE 0E01               M          MOVLW  1
000800 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X2R, BANKED
000802 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X2R, BANKED
000804 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000806 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X2R, BANKED
000808 D???               M         BRA     LLIM_END_12
                          M 
00080A                    M LLIM_NOT_LOCKED_12:
00080A A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_MASKED, BANKED
00080C B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_PRESSED, BANKED
00080E D???               M         BRA     LLIM_OFF_12
000810 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000812 D???               M         BRA     LLIM_OFF_12
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X2R
                          M          SET_SSR_VALUE CHAN_X2R, 0
000814 0104               M         BANKSEL SSR_DATA_BANK
000816 0E00               M          MOVLW  0
000818 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
00081A 6B00               M          CLRF   SSR_00_STEP+CHAN_X2R, BANKED
00081C 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2R, BANKED
00081E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2R, BANKED
000820 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2R, BANKED
                          M         SET_SSR_STEADY CHAN_X2G
                          M          SET_SSR_VALUE CHAN_X2G, 255
000822 0104               M         BANKSEL SSR_DATA_BANK
000824 0EFF               M          MOVLW  255
000826 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2G, BANKED
000828 6B00               M          CLRF   SSR_00_STEP+CHAN_X2G, BANKED
00082A 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2G, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00082C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2G, BANKED
00082E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2G, BANKED
000830 D???               M         BRA     LLIM_END_12
                          M 
000832                    M LLIM_OFF_12:
                          M         SET_SSR_OFF CHAN_X2G
                          M          SET_SSR_VALUE CHAN_X2G, 0
000832 0104               M         BANKSEL SSR_DATA_BANK
000834 0E00               M          MOVLW  0
000836 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2G, BANKED
000838 6B00               M          CLRF   SSR_00_STEP+CHAN_X2G, BANKED
00083A 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2G, BANKED
00083C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2G, BANKED
00083E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2G, BANKED
                          M         SET_SSR_OFF CHAN_X2R
                          M          SET_SSR_VALUE CHAN_X2R, 0
000840 0104               M         BANKSEL SSR_DATA_BANK
000842 0E00               M          MOVLW  0
000844 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
000846 6B00               M          CLRF   SSR_00_STEP+CHAN_X2R, BANKED
000848 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2R, BANKED
00084A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2R, BANKED
00084C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2R, BANKED
                          M         
00084E                    M LLIM_END_12:
00084E 010C               M         BANKSEL QUIZSHOW_DATA
  0000000D                M LLIM_N  ++
000850 D???               M         BRA     SCN_DB_END_4
                          M 
000852                    M SCN_DB_DING_4:
000852 8100               M         BSF     BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_PRESSED, BANKED
                          M         ; copy timer values
000854 C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+BTN_IDX_X2
000858 C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+BTN_IDX_X2
00085C CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+BTN_IDX_X2
000860 CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+BTN_IDX_X2
                          M         ; update the lights
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X2, CHAN_X2G, CHAN_X2R
000864 010C               M         BANKSEL QUIZSHOW_DATA
000866 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_LOCKED, BANKED
000868 D???               M         BRA     LLIM_NOT_LOCKED_13
                          M 
                          M         SET_SSR_OFF CHAN_X2G
                          M          SET_SSR_VALUE CHAN_X2G, 0
00086A 0104               M         BANKSEL SSR_DATA_BANK
00086C 0E00               M          MOVLW  0
00086E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2G, BANKED
000870 6B00               M          CLRF   SSR_00_STEP+CHAN_X2G, BANKED
000872 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2G, BANKED
000874 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2G, BANKED
000876 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X2R
                          M          SET_SSR_PATTERN CHAN_X2R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000878 0104               M         BANKSEL SSR_DATA_BANK
00087A 0E00               M          MOVLW  0
00087C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
00087E 0E04               M          MOVLW  4
000880 6F00               M          MOVWF  SSR_00_STEP+CHAN_X2R, BANKED
000882 0E01               M          MOVLW  1
000884 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X2R, BANKED
000886 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X2R, BANKED
000888 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
00088A 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X2R, BANKED
00088C D???               M         BRA     LLIM_END_13
                          M 
00088E                    M LLIM_NOT_LOCKED_13:
00088E A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_MASKED, BANKED
000890 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_PRESSED, BANKED
000892 D???               M         BRA     LLIM_OFF_13
000894 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000896 D???               M         BRA     LLIM_OFF_13
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X2R
                          M          SET_SSR_VALUE CHAN_X2R, 0
000898 0104               M         BANKSEL SSR_DATA_BANK
00089A 0E00               M          MOVLW  0
00089C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
00089E 6B00               M          CLRF   SSR_00_STEP+CHAN_X2R, BANKED
0008A0 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2R, BANKED
0008A2 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2R, BANKED
0008A4 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2R, BANKED
                          M         SET_SSR_STEADY CHAN_X2G
                          M          SET_SSR_VALUE CHAN_X2G, 255
0008A6 0104               M         BANKSEL SSR_DATA_BANK
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008A8 0EFF               M          MOVLW  255
0008AA 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2G, BANKED
0008AC 6B00               M          CLRF   SSR_00_STEP+CHAN_X2G, BANKED
0008AE 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2G, BANKED
0008B0 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2G, BANKED
0008B2 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2G, BANKED
0008B4 D???               M         BRA     LLIM_END_13
                          M 
0008B6                    M LLIM_OFF_13:
                          M         SET_SSR_OFF CHAN_X2G
                          M          SET_SSR_VALUE CHAN_X2G, 0
0008B6 0104               M         BANKSEL SSR_DATA_BANK
0008B8 0E00               M          MOVLW  0
0008BA 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2G, BANKED
0008BC 6B00               M          CLRF   SSR_00_STEP+CHAN_X2G, BANKED
0008BE 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2G, BANKED
0008C0 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2G, BANKED
0008C2 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2G, BANKED
                          M         SET_SSR_OFF CHAN_X2R
                          M          SET_SSR_VALUE CHAN_X2R, 0
0008C4 0104               M         BANKSEL SSR_DATA_BANK
0008C6 0E00               M          MOVLW  0
0008C8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
0008CA 6B00               M          CLRF   SSR_00_STEP+CHAN_X2R, BANKED
0008CC 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2R, BANKED
0008CE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2R, BANKED
0008D0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2R, BANKED
                          M         
0008D2                    M LLIM_END_13:
0008D2 010C               M         BANKSEL QUIZSHOW_DATA
  0000000E                M LLIM_N  ++
0008D4 D???               M         BRA     SCN_DB_END_4
                          M         
0008D6                    M SCN_DB_CHANGED_4:
                          M         ; Button has changed since last time: reset debounce counter and wait.
0008D6 6B00               M         CLRF    BTN_X0_DEB_TMR+BTN_IDX_X2, BANKED
                          M 
0008D8                    M SCN_DB_END_4:
0008D8 A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
0008DA D???               M         BRA     SCN_DB_DONE_4
                          M         ;
                          M         ; Every 1/120 second do this:
                          M         ;
                          M         ; Check for locked-out buttons. We hold them in this state as long as
                          M         ; they are still being pressed.  Once they let go we start counting down time
                          M         ; before releasing.
                          M         ;
0008DC A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_LOCKED, BANKED
0008DE D???               M         BRA     SCN_DB_DONE_4
                          M 
0008E0 A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_ACTIVE, BANKED
0008E2 D???               M         BRA     SCN_DB_LCK_4
                          M 
0008E4 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_X2 ; active+locked: reset and hold timer
0008E8 D???               M         BRA     SCN_DB_DONE_4
                          M 
0008EA                    M SCN_DB_LCK_4:
0008EA 2F00               M         DECFSZ  BTN_X0_LOCKTMR+BTN_IDX_X2, F, BANKED    ; locked: count down to unlock time
0008EC D???               M         BRA     SCN_DB_DONE_4
                          M 
0008EE 9500               M         BCF     BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_LOCKED, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X2, CHAN_X2G, CHAN_X2R
0008F0 010C               M         BANKSEL QUIZSHOW_DATA
0008F2 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_LOCKED, BANKED
0008F4 D???               M         BRA     LLIM_NOT_LOCKED_14
                          M 
                          M         SET_SSR_OFF CHAN_X2G
                          M          SET_SSR_VALUE CHAN_X2G, 0
0008F6 0104               M         BANKSEL SSR_DATA_BANK
0008F8 0E00               M          MOVLW  0
0008FA 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2G, BANKED
0008FC 6B00               M          CLRF   SSR_00_STEP+CHAN_X2G, BANKED
0008FE 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2G, BANKED
000900 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2G, BANKED
000902 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X2R
                          M          SET_SSR_PATTERN CHAN_X2R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000904 0104               M         BANKSEL SSR_DATA_BANK
000906 0E00               M          MOVLW  0
000908 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
00090A 0E04               M          MOVLW  4
00090C 6F00               M          MOVWF  SSR_00_STEP+CHAN_X2R, BANKED
00090E 0E01               M          MOVLW  1
000910 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X2R, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000912 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X2R, BANKED
000914 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000916 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X2R, BANKED
000918 D???               M         BRA     LLIM_END_14
                          M 
00091A                    M LLIM_NOT_LOCKED_14:
00091A A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_MASKED, BANKED
00091C B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_PRESSED, BANKED
00091E D???               M         BRA     LLIM_OFF_14
000920 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000922 D???               M         BRA     LLIM_OFF_14
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X2R
                          M          SET_SSR_VALUE CHAN_X2R, 0
000924 0104               M         BANKSEL SSR_DATA_BANK
000926 0E00               M          MOVLW  0
000928 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
00092A 6B00               M          CLRF   SSR_00_STEP+CHAN_X2R, BANKED
00092C 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2R, BANKED
00092E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2R, BANKED
000930 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2R, BANKED
                          M         SET_SSR_STEADY CHAN_X2G
                          M          SET_SSR_VALUE CHAN_X2G, 255
000932 0104               M         BANKSEL SSR_DATA_BANK
000934 0EFF               M          MOVLW  255
000936 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2G, BANKED
000938 6B00               M          CLRF   SSR_00_STEP+CHAN_X2G, BANKED
00093A 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2G, BANKED
00093C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2G, BANKED
00093E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2G, BANKED
000940 D???               M         BRA     LLIM_END_14
                          M 
000942                    M LLIM_OFF_14:
                          M         SET_SSR_OFF CHAN_X2G
                          M          SET_SSR_VALUE CHAN_X2G, 0
000942 0104               M         BANKSEL SSR_DATA_BANK
000944 0E00               M          MOVLW  0
000946 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2G, BANKED
000948 6B00               M          CLRF   SSR_00_STEP+CHAN_X2G, BANKED
00094A 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2G, BANKED
00094C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2G, BANKED
00094E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2G, BANKED
                          M         SET_SSR_OFF CHAN_X2R
                          M          SET_SSR_VALUE CHAN_X2R, 0
000950 0104               M         BANKSEL SSR_DATA_BANK
000952 0E00               M          MOVLW  0
000954 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
000956 6B00               M          CLRF   SSR_00_STEP+CHAN_X2R, BANKED
000958 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2R, BANKED
00095A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2R, BANKED
00095C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2R, BANKED
                          M         
00095E                    M LLIM_END_14:
00095E 010C               M         BANKSEL QUIZSHOW_DATA
  0000000F                M LLIM_N  ++
                          M         
000960                    M SCN_DB_DONE_4:
  00000005                M SCN_DBN ++
                      00955           SCAN_DEBOUNCE BTN_IDX_L2, PORT_L2, BIT_L2, CHAN_L2R, CHAN_L2R
                          M         ; Sense button
000960 BA80               M         BTFSC   PORT_L2,  BIT_L2,  ACCESS
000962 D???               M         BRA     SCN_DB_ACTIVE_5
                          M 
                          M         ; Button registers as being inactive now.  How long has this been the case?
000964 B700               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_ACTIVE, BANKED
000966 D???               M         BRA     SCN_DB_CHANGED_5
                          M 
                          M         ; Still inactive? keep counting...
000968 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_L2, F, BANKED
00096A D???               M         BRA     SCN_DB_END_5
                          M 
                          M         ; It's still inactive after 256 polls.  Time to count it as officially off now.
00096C 9700               M         BCF     BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; XXX Based on our current state, deal with the consequences of letting
                          M         ; XXX go of the button now.
                          M         ;
                          M         ; I think actually there aren't any here.
                          M         ;
00096E D???               M         BRA     SCN_DB_END_5
                          M 
000970                    M SCN_DB_ACTIVE_5:
                          M         ; Button registers as being active now.  How long has this been happening?
000970 A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_ACTIVE, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000972 D???               M         BRA     SCN_DB_CHANGED_5
                          M 
                          M         ; Still active? keep counting...
000974 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_L2, F, BANKED
000976 D???               M         BRA     SCN_DB_END_5
                          M 
                          M         ; It's still active after 256 polls.  Time to count it as officially on now.
000978 8700               M         BSF     BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; Based on our current state, deal with the consequences of hitting
                          M         ; the button now.
                          M         ;
                          M         ; If already pressed: ignore
                          M         ; ElseIf masked out: ignore
                          M         ; ElseIf locked out: reset lockout timer to start [handled above]
                          M         ; ElseIf scanning: copy timer into button stats, set pressed flag
                          M         ; Else: set lockout state, reset lockout timer
                          M         ;       
00097A A100               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_PRESSED, BANKED
00097C B300               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_MASKED, BANKED
00097E D???               M         BRA     SCN_DB_END_5
                          M 
000980 B000               M         BTFSC   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000982 D???               M         BRA     SCN_DB_DING_5
                          M 
000984 8500               M         BSF     BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_LOCKED, BANKED
000986 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_L2 
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L2, CHAN_L2R, CHAN_L2R
00098A 010C               M         BANKSEL QUIZSHOW_DATA
00098C A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_LOCKED, BANKED
00098E D???               M         BRA     LLIM_NOT_LOCKED_15
                          M 
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
000990 0104               M         BANKSEL SSR_DATA_BANK
000992 0E00               M          MOVLW  0
000994 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000996 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
000998 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
00099A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
00099C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L2R
                          M          SET_SSR_PATTERN CHAN_L2R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
00099E 0104               M         BANKSEL SSR_DATA_BANK
0009A0 0E00               M          MOVLW  0
0009A2 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
0009A4 0E04               M          MOVLW  4
0009A6 6F00               M          MOVWF  SSR_00_STEP+CHAN_L2R, BANKED
0009A8 0E01               M          MOVLW  1
0009AA 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L2R, BANKED
0009AC 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L2R, BANKED
0009AE 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0009B0 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L2R, BANKED
0009B2 D???               M         BRA     LLIM_END_15
                          M 
0009B4                    M LLIM_NOT_LOCKED_15:
0009B4 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_MASKED, BANKED
0009B6 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_PRESSED, BANKED
0009B8 D???               M         BRA     LLIM_OFF_15
0009BA A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0009BC D???               M         BRA     LLIM_OFF_15
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
0009BE 0104               M         BANKSEL SSR_DATA_BANK
0009C0 0E00               M          MOVLW  0
0009C2 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
0009C4 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
0009C6 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
0009C8 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
0009CA 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         SET_SSR_STEADY CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 255
0009CC 0104               M         BANKSEL SSR_DATA_BANK
0009CE 0EFF               M          MOVLW  255
0009D0 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
0009D2 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
0009D4 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
0009D6 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
0009D8 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
0009DA D???               M         BRA     LLIM_END_15
                          M 
0009DC                    M LLIM_OFF_15:
                          M         SET_SSR_OFF CHAN_L2R
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M          SET_SSR_VALUE CHAN_L2R, 0
0009DC 0104               M         BANKSEL SSR_DATA_BANK
0009DE 0E00               M          MOVLW  0
0009E0 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
0009E2 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
0009E4 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
0009E6 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
0009E8 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
0009EA 0104               M         BANKSEL SSR_DATA_BANK
0009EC 0E00               M          MOVLW  0
0009EE 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
0009F0 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
0009F2 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
0009F4 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
0009F6 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         
0009F8                    M LLIM_END_15:
0009F8 010C               M         BANKSEL QUIZSHOW_DATA
  00000010                M LLIM_N  ++
0009FA D???               M         BRA     SCN_DB_END_5
                          M 
0009FC                    M SCN_DB_DING_5:
0009FC 8100               M         BSF     BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_PRESSED, BANKED
                          M         ; copy timer values
0009FE C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+BTN_IDX_L2
000A02 C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+BTN_IDX_L2
000A06 CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+BTN_IDX_L2
000A0A CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+BTN_IDX_L2
                          M         ; update the lights
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L2, CHAN_L2R, CHAN_L2R
000A0E 010C               M         BANKSEL QUIZSHOW_DATA
000A10 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_LOCKED, BANKED
000A12 D???               M         BRA     LLIM_NOT_LOCKED_16
                          M 
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
000A14 0104               M         BANKSEL SSR_DATA_BANK
000A16 0E00               M          MOVLW  0
000A18 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000A1A 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
000A1C 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
000A1E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
000A20 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L2R
                          M          SET_SSR_PATTERN CHAN_L2R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000A22 0104               M         BANKSEL SSR_DATA_BANK
000A24 0E00               M          MOVLW  0
000A26 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000A28 0E04               M          MOVLW  4
000A2A 6F00               M          MOVWF  SSR_00_STEP+CHAN_L2R, BANKED
000A2C 0E01               M          MOVLW  1
000A2E 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L2R, BANKED
000A30 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L2R, BANKED
000A32 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000A34 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L2R, BANKED
000A36 D???               M         BRA     LLIM_END_16
                          M 
000A38                    M LLIM_NOT_LOCKED_16:
000A38 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_MASKED, BANKED
000A3A B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_PRESSED, BANKED
000A3C D???               M         BRA     LLIM_OFF_16
000A3E A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000A40 D???               M         BRA     LLIM_OFF_16
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
000A42 0104               M         BANKSEL SSR_DATA_BANK
000A44 0E00               M          MOVLW  0
000A46 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000A48 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
000A4A 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
000A4C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
000A4E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         SET_SSR_STEADY CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 255
000A50 0104               M         BANKSEL SSR_DATA_BANK
000A52 0EFF               M          MOVLW  255
000A54 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000A56 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
000A58 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
000A5A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
000A5C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A5E D???               M         BRA     LLIM_END_16
                          M 
000A60                    M LLIM_OFF_16:
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
000A60 0104               M         BANKSEL SSR_DATA_BANK
000A62 0E00               M          MOVLW  0
000A64 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000A66 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
000A68 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
000A6A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
000A6C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
000A6E 0104               M         BANKSEL SSR_DATA_BANK
000A70 0E00               M          MOVLW  0
000A72 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000A74 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
000A76 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
000A78 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
000A7A 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         
000A7C                    M LLIM_END_16:
000A7C 010C               M         BANKSEL QUIZSHOW_DATA
  00000011                M LLIM_N  ++
000A7E D???               M         BRA     SCN_DB_END_5
                          M         
000A80                    M SCN_DB_CHANGED_5:
                          M         ; Button has changed since last time: reset debounce counter and wait.
000A80 6B00               M         CLRF    BTN_X0_DEB_TMR+BTN_IDX_L2, BANKED
                          M 
000A82                    M SCN_DB_END_5:
000A82 A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
000A84 D???               M         BRA     SCN_DB_DONE_5
                          M         ;
                          M         ; Every 1/120 second do this:
                          M         ;
                          M         ; Check for locked-out buttons. We hold them in this state as long as
                          M         ; they are still being pressed.  Once they let go we start counting down time
                          M         ; before releasing.
                          M         ;
000A86 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_LOCKED, BANKED
000A88 D???               M         BRA     SCN_DB_DONE_5
                          M 
000A8A A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_ACTIVE, BANKED
000A8C D???               M         BRA     SCN_DB_LCK_5
                          M 
000A8E C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_L2 ; active+locked: reset and hold timer
000A92 D???               M         BRA     SCN_DB_DONE_5
                          M 
000A94                    M SCN_DB_LCK_5:
000A94 2F00               M         DECFSZ  BTN_X0_LOCKTMR+BTN_IDX_L2, F, BANKED    ; locked: count down to unlock time
000A96 D???               M         BRA     SCN_DB_DONE_5
                          M 
000A98 9500               M         BCF     BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_LOCKED, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L2, CHAN_L2R, CHAN_L2R
000A9A 010C               M         BANKSEL QUIZSHOW_DATA
000A9C A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_LOCKED, BANKED
000A9E D???               M         BRA     LLIM_NOT_LOCKED_17
                          M 
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
000AA0 0104               M         BANKSEL SSR_DATA_BANK
000AA2 0E00               M          MOVLW  0
000AA4 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000AA6 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
000AA8 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
000AAA 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
000AAC 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L2R
                          M          SET_SSR_PATTERN CHAN_L2R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000AAE 0104               M         BANKSEL SSR_DATA_BANK
000AB0 0E00               M          MOVLW  0
000AB2 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000AB4 0E04               M          MOVLW  4
000AB6 6F00               M          MOVWF  SSR_00_STEP+CHAN_L2R, BANKED
000AB8 0E01               M          MOVLW  1
000ABA 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L2R, BANKED
000ABC 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L2R, BANKED
000ABE 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000AC0 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L2R, BANKED
000AC2 D???               M         BRA     LLIM_END_17
                          M 
000AC4                    M LLIM_NOT_LOCKED_17:
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000AC4 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_MASKED, BANKED
000AC6 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_PRESSED, BANKED
000AC8 D???               M         BRA     LLIM_OFF_17
000ACA A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000ACC D???               M         BRA     LLIM_OFF_17
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
000ACE 0104               M         BANKSEL SSR_DATA_BANK
000AD0 0E00               M          MOVLW  0
000AD2 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000AD4 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
000AD6 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
000AD8 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
000ADA 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         SET_SSR_STEADY CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 255
000ADC 0104               M         BANKSEL SSR_DATA_BANK
000ADE 0EFF               M          MOVLW  255
000AE0 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000AE2 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
000AE4 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
000AE6 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
000AE8 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
000AEA D???               M         BRA     LLIM_END_17
                          M 
000AEC                    M LLIM_OFF_17:
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
000AEC 0104               M         BANKSEL SSR_DATA_BANK
000AEE 0E00               M          MOVLW  0
000AF0 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000AF2 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
000AF4 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
000AF6 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
000AF8 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
000AFA 0104               M         BANKSEL SSR_DATA_BANK
000AFC 0E00               M          MOVLW  0
000AFE 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000B00 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
000B02 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
000B04 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
000B06 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         
000B08                    M LLIM_END_17:
000B08 010C               M         BANKSEL QUIZSHOW_DATA
  00000012                M LLIM_N  ++
                          M         
000B0A                    M SCN_DB_DONE_5:
  00000006                M SCN_DBN ++
                      00956           SCAN_DEBOUNCE BTN_IDX_X3, PORT_X3, BIT_X3, CHAN_X3G, CHAN_X3R
                          M         ; Sense button
000B0A B882               M         BTFSC   PORT_X3,  BIT_X3,  ACCESS
000B0C D???               M         BRA     SCN_DB_ACTIVE_6
                          M 
                          M         ; Button registers as being inactive now.  How long has this been the case?
000B0E B700               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_ACTIVE, BANKED
000B10 D???               M         BRA     SCN_DB_CHANGED_6
                          M 
                          M         ; Still inactive? keep counting...
000B12 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_X3, F, BANKED
000B14 D???               M         BRA     SCN_DB_END_6
                          M 
                          M         ; It's still inactive after 256 polls.  Time to count it as officially off now.
000B16 9700               M         BCF     BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; XXX Based on our current state, deal with the consequences of letting
                          M         ; XXX go of the button now.
                          M         ;
                          M         ; I think actually there aren't any here.
                          M         ;
000B18 D???               M         BRA     SCN_DB_END_6
                          M 
000B1A                    M SCN_DB_ACTIVE_6:
                          M         ; Button registers as being active now.  How long has this been happening?
000B1A A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_ACTIVE, BANKED
000B1C D???               M         BRA     SCN_DB_CHANGED_6
                          M 
                          M         ; Still active? keep counting...
000B1E 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_X3, F, BANKED
000B20 D???               M         BRA     SCN_DB_END_6
                          M 
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ; It's still active after 256 polls.  Time to count it as officially on now.
000B22 8700               M         BSF     BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; Based on our current state, deal with the consequences of hitting
                          M         ; the button now.
                          M         ;
                          M         ; If already pressed: ignore
                          M         ; ElseIf masked out: ignore
                          M         ; ElseIf locked out: reset lockout timer to start [handled above]
                          M         ; ElseIf scanning: copy timer into button stats, set pressed flag
                          M         ; Else: set lockout state, reset lockout timer
                          M         ;       
000B24 A100               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_PRESSED, BANKED
000B26 B300               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_MASKED, BANKED
000B28 D???               M         BRA     SCN_DB_END_6
                          M 
000B2A B000               M         BTFSC   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000B2C D???               M         BRA     SCN_DB_DING_6
                          M 
000B2E 8500               M         BSF     BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_LOCKED, BANKED
000B30 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_X3 
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X3, CHAN_X3G, CHAN_X3R
000B34 010C               M         BANKSEL QUIZSHOW_DATA
000B36 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_LOCKED, BANKED
000B38 D???               M         BRA     LLIM_NOT_LOCKED_18
                          M 
                          M         SET_SSR_OFF CHAN_X3G
                          M          SET_SSR_VALUE CHAN_X3G, 0
000B3A 0104               M         BANKSEL SSR_DATA_BANK
000B3C 0E00               M          MOVLW  0
000B3E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3G, BANKED
000B40 6B00               M          CLRF   SSR_00_STEP+CHAN_X3G, BANKED
000B42 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3G, BANKED
000B44 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3G, BANKED
000B46 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X3R
                          M          SET_SSR_PATTERN CHAN_X3R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000B48 0104               M         BANKSEL SSR_DATA_BANK
000B4A 0E00               M          MOVLW  0
000B4C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
000B4E 0E04               M          MOVLW  4
000B50 6F00               M          MOVWF  SSR_00_STEP+CHAN_X3R, BANKED
000B52 0E01               M          MOVLW  1
000B54 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X3R, BANKED
000B56 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X3R, BANKED
000B58 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000B5A 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X3R, BANKED
000B5C D???               M         BRA     LLIM_END_18
                          M 
000B5E                    M LLIM_NOT_LOCKED_18:
000B5E A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_MASKED, BANKED
000B60 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_PRESSED, BANKED
000B62 D???               M         BRA     LLIM_OFF_18
000B64 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000B66 D???               M         BRA     LLIM_OFF_18
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X3R
                          M          SET_SSR_VALUE CHAN_X3R, 0
000B68 0104               M         BANKSEL SSR_DATA_BANK
000B6A 0E00               M          MOVLW  0
000B6C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
000B6E 6B00               M          CLRF   SSR_00_STEP+CHAN_X3R, BANKED
000B70 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3R, BANKED
000B72 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3R, BANKED
000B74 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3R, BANKED
                          M         SET_SSR_STEADY CHAN_X3G
                          M          SET_SSR_VALUE CHAN_X3G, 255
000B76 0104               M         BANKSEL SSR_DATA_BANK
000B78 0EFF               M          MOVLW  255
000B7A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3G, BANKED
000B7C 6B00               M          CLRF   SSR_00_STEP+CHAN_X3G, BANKED
000B7E 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3G, BANKED
000B80 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3G, BANKED
000B82 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3G, BANKED
000B84 D???               M         BRA     LLIM_END_18
                          M 
000B86                    M LLIM_OFF_18:
                          M         SET_SSR_OFF CHAN_X3G
                          M          SET_SSR_VALUE CHAN_X3G, 0
000B86 0104               M         BANKSEL SSR_DATA_BANK
000B88 0E00               M          MOVLW  0
000B8A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3G, BANKED
000B8C 6B00               M          CLRF   SSR_00_STEP+CHAN_X3G, BANKED
000B8E 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3G, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B90 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3G, BANKED
000B92 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3G, BANKED
                          M         SET_SSR_OFF CHAN_X3R
                          M          SET_SSR_VALUE CHAN_X3R, 0
000B94 0104               M         BANKSEL SSR_DATA_BANK
000B96 0E00               M          MOVLW  0
000B98 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
000B9A 6B00               M          CLRF   SSR_00_STEP+CHAN_X3R, BANKED
000B9C 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3R, BANKED
000B9E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3R, BANKED
000BA0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3R, BANKED
                          M         
000BA2                    M LLIM_END_18:
000BA2 010C               M         BANKSEL QUIZSHOW_DATA
  00000013                M LLIM_N  ++
000BA4 D???               M         BRA     SCN_DB_END_6
                          M 
000BA6                    M SCN_DB_DING_6:
000BA6 8100               M         BSF     BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_PRESSED, BANKED
                          M         ; copy timer values
000BA8 C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+BTN_IDX_X3
000BAC C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+BTN_IDX_X3
000BB0 CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+BTN_IDX_X3
000BB4 CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+BTN_IDX_X3
                          M         ; update the lights
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X3, CHAN_X3G, CHAN_X3R
000BB8 010C               M         BANKSEL QUIZSHOW_DATA
000BBA A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_LOCKED, BANKED
000BBC D???               M         BRA     LLIM_NOT_LOCKED_19
                          M 
                          M         SET_SSR_OFF CHAN_X3G
                          M          SET_SSR_VALUE CHAN_X3G, 0
000BBE 0104               M         BANKSEL SSR_DATA_BANK
000BC0 0E00               M          MOVLW  0
000BC2 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3G, BANKED
000BC4 6B00               M          CLRF   SSR_00_STEP+CHAN_X3G, BANKED
000BC6 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3G, BANKED
000BC8 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3G, BANKED
000BCA 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X3R
                          M          SET_SSR_PATTERN CHAN_X3R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000BCC 0104               M         BANKSEL SSR_DATA_BANK
000BCE 0E00               M          MOVLW  0
000BD0 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
000BD2 0E04               M          MOVLW  4
000BD4 6F00               M          MOVWF  SSR_00_STEP+CHAN_X3R, BANKED
000BD6 0E01               M          MOVLW  1
000BD8 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X3R, BANKED
000BDA 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X3R, BANKED
000BDC 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000BDE 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X3R, BANKED
000BE0 D???               M         BRA     LLIM_END_19
                          M 
000BE2                    M LLIM_NOT_LOCKED_19:
000BE2 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_MASKED, BANKED
000BE4 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_PRESSED, BANKED
000BE6 D???               M         BRA     LLIM_OFF_19
000BE8 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000BEA D???               M         BRA     LLIM_OFF_19
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X3R
                          M          SET_SSR_VALUE CHAN_X3R, 0
000BEC 0104               M         BANKSEL SSR_DATA_BANK
000BEE 0E00               M          MOVLW  0
000BF0 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
000BF2 6B00               M          CLRF   SSR_00_STEP+CHAN_X3R, BANKED
000BF4 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3R, BANKED
000BF6 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3R, BANKED
000BF8 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3R, BANKED
                          M         SET_SSR_STEADY CHAN_X3G
                          M          SET_SSR_VALUE CHAN_X3G, 255
000BFA 0104               M         BANKSEL SSR_DATA_BANK
000BFC 0EFF               M          MOVLW  255
000BFE 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3G, BANKED
000C00 6B00               M          CLRF   SSR_00_STEP+CHAN_X3G, BANKED
000C02 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3G, BANKED
000C04 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3G, BANKED
000C06 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3G, BANKED
000C08 D???               M         BRA     LLIM_END_19
                          M 
000C0A                    M LLIM_OFF_19:
                          M         SET_SSR_OFF CHAN_X3G
                          M          SET_SSR_VALUE CHAN_X3G, 0
000C0A 0104               M         BANKSEL SSR_DATA_BANK
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C0C 0E00               M          MOVLW  0
000C0E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3G, BANKED
000C10 6B00               M          CLRF   SSR_00_STEP+CHAN_X3G, BANKED
000C12 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3G, BANKED
000C14 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3G, BANKED
000C16 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3G, BANKED
                          M         SET_SSR_OFF CHAN_X3R
                          M          SET_SSR_VALUE CHAN_X3R, 0
000C18 0104               M         BANKSEL SSR_DATA_BANK
000C1A 0E00               M          MOVLW  0
000C1C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
000C1E 6B00               M          CLRF   SSR_00_STEP+CHAN_X3R, BANKED
000C20 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3R, BANKED
000C22 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3R, BANKED
000C24 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3R, BANKED
                          M         
000C26                    M LLIM_END_19:
000C26 010C               M         BANKSEL QUIZSHOW_DATA
  00000014                M LLIM_N  ++
000C28 D???               M         BRA     SCN_DB_END_6
                          M         
000C2A                    M SCN_DB_CHANGED_6:
                          M         ; Button has changed since last time: reset debounce counter and wait.
000C2A 6B00               M         CLRF    BTN_X0_DEB_TMR+BTN_IDX_X3, BANKED
                          M 
000C2C                    M SCN_DB_END_6:
000C2C A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
000C2E D???               M         BRA     SCN_DB_DONE_6
                          M         ;
                          M         ; Every 1/120 second do this:
                          M         ;
                          M         ; Check for locked-out buttons. We hold them in this state as long as
                          M         ; they are still being pressed.  Once they let go we start counting down time
                          M         ; before releasing.
                          M         ;
000C30 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_LOCKED, BANKED
000C32 D???               M         BRA     SCN_DB_DONE_6
                          M 
000C34 A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_ACTIVE, BANKED
000C36 D???               M         BRA     SCN_DB_LCK_6
                          M 
000C38 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_X3 ; active+locked: reset and hold timer
000C3C D???               M         BRA     SCN_DB_DONE_6
                          M 
000C3E                    M SCN_DB_LCK_6:
000C3E 2F00               M         DECFSZ  BTN_X0_LOCKTMR+BTN_IDX_X3, F, BANKED    ; locked: count down to unlock time
000C40 D???               M         BRA     SCN_DB_DONE_6
                          M 
000C42 9500               M         BCF     BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_LOCKED, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X3, CHAN_X3G, CHAN_X3R
000C44 010C               M         BANKSEL QUIZSHOW_DATA
000C46 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_LOCKED, BANKED
000C48 D???               M         BRA     LLIM_NOT_LOCKED_20
                          M 
                          M         SET_SSR_OFF CHAN_X3G
                          M          SET_SSR_VALUE CHAN_X3G, 0
000C4A 0104               M         BANKSEL SSR_DATA_BANK
000C4C 0E00               M          MOVLW  0
000C4E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3G, BANKED
000C50 6B00               M          CLRF   SSR_00_STEP+CHAN_X3G, BANKED
000C52 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3G, BANKED
000C54 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3G, BANKED
000C56 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X3R
                          M          SET_SSR_PATTERN CHAN_X3R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000C58 0104               M         BANKSEL SSR_DATA_BANK
000C5A 0E00               M          MOVLW  0
000C5C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
000C5E 0E04               M          MOVLW  4
000C60 6F00               M          MOVWF  SSR_00_STEP+CHAN_X3R, BANKED
000C62 0E01               M          MOVLW  1
000C64 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X3R, BANKED
000C66 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X3R, BANKED
000C68 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000C6A 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X3R, BANKED
000C6C D???               M         BRA     LLIM_END_20
                          M 
000C6E                    M LLIM_NOT_LOCKED_20:
000C6E A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_MASKED, BANKED
000C70 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_PRESSED, BANKED
000C72 D???               M         BRA     LLIM_OFF_20
000C74 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000C76 D???               M         BRA     LLIM_OFF_20
                          M         ; We're scanning and not masked or pressed - light up button
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         SET_SSR_OFF CHAN_X3R
                          M          SET_SSR_VALUE CHAN_X3R, 0
000C78 0104               M         BANKSEL SSR_DATA_BANK
000C7A 0E00               M          MOVLW  0
000C7C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
000C7E 6B00               M          CLRF   SSR_00_STEP+CHAN_X3R, BANKED
000C80 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3R, BANKED
000C82 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3R, BANKED
000C84 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3R, BANKED
                          M         SET_SSR_STEADY CHAN_X3G
                          M          SET_SSR_VALUE CHAN_X3G, 255
000C86 0104               M         BANKSEL SSR_DATA_BANK
000C88 0EFF               M          MOVLW  255
000C8A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3G, BANKED
000C8C 6B00               M          CLRF   SSR_00_STEP+CHAN_X3G, BANKED
000C8E 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3G, BANKED
000C90 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3G, BANKED
000C92 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3G, BANKED
000C94 D???               M         BRA     LLIM_END_20
                          M 
000C96                    M LLIM_OFF_20:
                          M         SET_SSR_OFF CHAN_X3G
                          M          SET_SSR_VALUE CHAN_X3G, 0
000C96 0104               M         BANKSEL SSR_DATA_BANK
000C98 0E00               M          MOVLW  0
000C9A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3G, BANKED
000C9C 6B00               M          CLRF   SSR_00_STEP+CHAN_X3G, BANKED
000C9E 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3G, BANKED
000CA0 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3G, BANKED
000CA2 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3G, BANKED
                          M         SET_SSR_OFF CHAN_X3R
                          M          SET_SSR_VALUE CHAN_X3R, 0
000CA4 0104               M         BANKSEL SSR_DATA_BANK
000CA6 0E00               M          MOVLW  0
000CA8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
000CAA 6B00               M          CLRF   SSR_00_STEP+CHAN_X3R, BANKED
000CAC 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3R, BANKED
000CAE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3R, BANKED
000CB0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3R, BANKED
                          M         
000CB2                    M LLIM_END_20:
000CB2 010C               M         BANKSEL QUIZSHOW_DATA
  00000015                M LLIM_N  ++
                          M         
000CB4                    M SCN_DB_DONE_6:
  00000007                M SCN_DBN ++
                      00957           SCAN_DEBOUNCE BTN_IDX_L3, PORT_L3, BIT_L3, CHAN_L3R, CHAN_L3R
                          M         ; Sense button
000CB4 B083               M         BTFSC   PORT_L3,  BIT_L3,  ACCESS
000CB6 D???               M         BRA     SCN_DB_ACTIVE_7
                          M 
                          M         ; Button registers as being inactive now.  How long has this been the case?
000CB8 B700               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_ACTIVE, BANKED
000CBA D???               M         BRA     SCN_DB_CHANGED_7
                          M 
                          M         ; Still inactive? keep counting...
000CBC 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_L3, F, BANKED
000CBE D???               M         BRA     SCN_DB_END_7
                          M 
                          M         ; It's still inactive after 256 polls.  Time to count it as officially off now.
000CC0 9700               M         BCF     BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; XXX Based on our current state, deal with the consequences of letting
                          M         ; XXX go of the button now.
                          M         ;
                          M         ; I think actually there aren't any here.
                          M         ;
000CC2 D???               M         BRA     SCN_DB_END_7
                          M 
000CC4                    M SCN_DB_ACTIVE_7:
                          M         ; Button registers as being active now.  How long has this been happening?
000CC4 A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_ACTIVE, BANKED
000CC6 D???               M         BRA     SCN_DB_CHANGED_7
                          M 
                          M         ; Still active? keep counting...
000CC8 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_L3, F, BANKED
000CCA D???               M         BRA     SCN_DB_END_7
                          M 
                          M         ; It's still active after 256 polls.  Time to count it as officially on now.
000CCC 8700               M         BSF     BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; Based on our current state, deal with the consequences of hitting
                          M         ; the button now.
                          M         ;
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ; If already pressed: ignore
                          M         ; ElseIf masked out: ignore
                          M         ; ElseIf locked out: reset lockout timer to start [handled above]
                          M         ; ElseIf scanning: copy timer into button stats, set pressed flag
                          M         ; Else: set lockout state, reset lockout timer
                          M         ;       
000CCE A100               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_PRESSED, BANKED
000CD0 B300               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_MASKED, BANKED
000CD2 D???               M         BRA     SCN_DB_END_7
                          M 
000CD4 B000               M         BTFSC   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000CD6 D???               M         BRA     SCN_DB_DING_7
                          M 
000CD8 8500               M         BSF     BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_LOCKED, BANKED
000CDA C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_L3 
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L3, CHAN_L3R, CHAN_L3R
000CDE 010C               M         BANKSEL QUIZSHOW_DATA
000CE0 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_LOCKED, BANKED
000CE2 D???               M         BRA     LLIM_NOT_LOCKED_21
                          M 
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
000CE4 0104               M         BANKSEL SSR_DATA_BANK
000CE6 0E00               M          MOVLW  0
000CE8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000CEA 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000CEC 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000CEE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000CF0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L3R
                          M          SET_SSR_PATTERN CHAN_L3R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000CF2 0104               M         BANKSEL SSR_DATA_BANK
000CF4 0E00               M          MOVLW  0
000CF6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000CF8 0E04               M          MOVLW  4
000CFA 6F00               M          MOVWF  SSR_00_STEP+CHAN_L3R, BANKED
000CFC 0E01               M          MOVLW  1
000CFE 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L3R, BANKED
000D00 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L3R, BANKED
000D02 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000D04 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L3R, BANKED
000D06 D???               M         BRA     LLIM_END_21
                          M 
000D08                    M LLIM_NOT_LOCKED_21:
000D08 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_MASKED, BANKED
000D0A B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_PRESSED, BANKED
000D0C D???               M         BRA     LLIM_OFF_21
000D0E A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000D10 D???               M         BRA     LLIM_OFF_21
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
000D12 0104               M         BANKSEL SSR_DATA_BANK
000D14 0E00               M          MOVLW  0
000D16 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000D18 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000D1A 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000D1C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000D1E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         SET_SSR_STEADY CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 255
000D20 0104               M         BANKSEL SSR_DATA_BANK
000D22 0EFF               M          MOVLW  255
000D24 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000D26 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000D28 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000D2A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000D2C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
000D2E D???               M         BRA     LLIM_END_21
                          M 
000D30                    M LLIM_OFF_21:
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
000D30 0104               M         BANKSEL SSR_DATA_BANK
000D32 0E00               M          MOVLW  0
000D34 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000D36 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000D38 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000D3A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000D3C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
000D3E 0104               M         BANKSEL SSR_DATA_BANK
000D40 0E00               M          MOVLW  0
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D42 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000D44 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000D46 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000D48 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000D4A 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         
000D4C                    M LLIM_END_21:
000D4C 010C               M         BANKSEL QUIZSHOW_DATA
  00000016                M LLIM_N  ++
000D4E D???               M         BRA     SCN_DB_END_7
                          M 
000D50                    M SCN_DB_DING_7:
000D50 8100               M         BSF     BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_PRESSED, BANKED
                          M         ; copy timer values
000D52 C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+BTN_IDX_L3
000D56 C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+BTN_IDX_L3
000D5A CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+BTN_IDX_L3
000D5E CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+BTN_IDX_L3
                          M         ; update the lights
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L3, CHAN_L3R, CHAN_L3R
000D62 010C               M         BANKSEL QUIZSHOW_DATA
000D64 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_LOCKED, BANKED
000D66 D???               M         BRA     LLIM_NOT_LOCKED_22
                          M 
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
000D68 0104               M         BANKSEL SSR_DATA_BANK
000D6A 0E00               M          MOVLW  0
000D6C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000D6E 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000D70 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000D72 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000D74 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L3R
                          M          SET_SSR_PATTERN CHAN_L3R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000D76 0104               M         BANKSEL SSR_DATA_BANK
000D78 0E00               M          MOVLW  0
000D7A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000D7C 0E04               M          MOVLW  4
000D7E 6F00               M          MOVWF  SSR_00_STEP+CHAN_L3R, BANKED
000D80 0E01               M          MOVLW  1
000D82 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L3R, BANKED
000D84 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L3R, BANKED
000D86 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000D88 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L3R, BANKED
000D8A D???               M         BRA     LLIM_END_22
                          M 
000D8C                    M LLIM_NOT_LOCKED_22:
000D8C A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_MASKED, BANKED
000D8E B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_PRESSED, BANKED
000D90 D???               M         BRA     LLIM_OFF_22
000D92 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000D94 D???               M         BRA     LLIM_OFF_22
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
000D96 0104               M         BANKSEL SSR_DATA_BANK
000D98 0E00               M          MOVLW  0
000D9A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000D9C 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000D9E 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000DA0 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000DA2 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         SET_SSR_STEADY CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 255
000DA4 0104               M         BANKSEL SSR_DATA_BANK
000DA6 0EFF               M          MOVLW  255
000DA8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000DAA 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000DAC 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000DAE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000DB0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
000DB2 D???               M         BRA     LLIM_END_22
                          M 
000DB4                    M LLIM_OFF_22:
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
000DB4 0104               M         BANKSEL SSR_DATA_BANK
000DB6 0E00               M          MOVLW  0
000DB8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000DBA 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000DBC 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000DBE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000DC0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
000DC2 0104               M         BANKSEL SSR_DATA_BANK
000DC4 0E00               M          MOVLW  0
000DC6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000DC8 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000DCA 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000DCC 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000DCE 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         
000DD0                    M LLIM_END_22:
000DD0 010C               M         BANKSEL QUIZSHOW_DATA
  00000017                M LLIM_N  ++
000DD2 D???               M         BRA     SCN_DB_END_7
                          M         
000DD4                    M SCN_DB_CHANGED_7:
                          M         ; Button has changed since last time: reset debounce counter and wait.
000DD4 6B00               M         CLRF    BTN_X0_DEB_TMR+BTN_IDX_L3, BANKED
                          M 
000DD6                    M SCN_DB_END_7:
000DD6 A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
000DD8 D???               M         BRA     SCN_DB_DONE_7
                          M         ;
                          M         ; Every 1/120 second do this:
                          M         ;
                          M         ; Check for locked-out buttons. We hold them in this state as long as
                          M         ; they are still being pressed.  Once they let go we start counting down time
                          M         ; before releasing.
                          M         ;
000DDA A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_LOCKED, BANKED
000DDC D???               M         BRA     SCN_DB_DONE_7
                          M 
000DDE A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_ACTIVE, BANKED
000DE0 D???               M         BRA     SCN_DB_LCK_7
                          M 
000DE2 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_L3 ; active+locked: reset and hold timer
000DE6 D???               M         BRA     SCN_DB_DONE_7
                          M 
000DE8                    M SCN_DB_LCK_7:
000DE8 2F00               M         DECFSZ  BTN_X0_LOCKTMR+BTN_IDX_L3, F, BANKED    ; locked: count down to unlock time
000DEA D???               M         BRA     SCN_DB_DONE_7
                          M 
000DEC 9500               M         BCF     BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_LOCKED, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L3, CHAN_L3R, CHAN_L3R
000DEE 010C               M         BANKSEL QUIZSHOW_DATA
000DF0 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_LOCKED, BANKED
000DF2 D???               M         BRA     LLIM_NOT_LOCKED_23
                          M 
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
000DF4 0104               M         BANKSEL SSR_DATA_BANK
000DF6 0E00               M          MOVLW  0
000DF8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000DFA 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000DFC 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000DFE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000E00 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L3R
                          M          SET_SSR_PATTERN CHAN_L3R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000E02 0104               M         BANKSEL SSR_DATA_BANK
000E04 0E00               M          MOVLW  0
000E06 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000E08 0E04               M          MOVLW  4
000E0A 6F00               M          MOVWF  SSR_00_STEP+CHAN_L3R, BANKED
000E0C 0E01               M          MOVLW  1
000E0E 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L3R, BANKED
000E10 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L3R, BANKED
000E12 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000E14 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L3R, BANKED
000E16 D???               M         BRA     LLIM_END_23
                          M 
000E18                    M LLIM_NOT_LOCKED_23:
000E18 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_MASKED, BANKED
000E1A B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_PRESSED, BANKED
000E1C D???               M         BRA     LLIM_OFF_23
000E1E A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000E20 D???               M         BRA     LLIM_OFF_23
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
000E22 0104               M         BANKSEL SSR_DATA_BANK
000E24 0E00               M          MOVLW  0
000E26 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000E28 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000E2A 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000E2C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000E2E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         SET_SSR_STEADY CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 255
000E30 0104               M         BANKSEL SSR_DATA_BANK
000E32 0EFF               M          MOVLW  255
000E34 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000E36 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000E38 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000E3A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000E3C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
000E3E D???               M         BRA     LLIM_END_23
                          M 
000E40                    M LLIM_OFF_23:
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
000E40 0104               M         BANKSEL SSR_DATA_BANK
000E42 0E00               M          MOVLW  0
000E44 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000E46 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000E48 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000E4A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000E4C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
000E4E 0104               M         BANKSEL SSR_DATA_BANK
000E50 0E00               M          MOVLW  0
000E52 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000E54 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000E56 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000E58 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000E5A 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         
000E5C                    M LLIM_END_23:
000E5C 010C               M         BANKSEL QUIZSHOW_DATA
  00000018                M LLIM_N  ++
                          M         
000E5E                    M SCN_DB_DONE_7:
  00000008                M SCN_DBN ++
                      00958           SCAN_DEBOUNCE BTN_IDX_X4, PORT_X4, BIT_X4, CHAN_X4G, CHAN_X4R
                          M         ; Sense button
000E5E B883               M         BTFSC   PORT_X4,  BIT_X4,  ACCESS
000E60 D???               M         BRA     SCN_DB_ACTIVE_8
                          M 
                          M         ; Button registers as being inactive now.  How long has this been the case?
000E62 B700               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_ACTIVE, BANKED
000E64 D???               M         BRA     SCN_DB_CHANGED_8
                          M 
                          M         ; Still inactive? keep counting...
000E66 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_X4, F, BANKED
000E68 D???               M         BRA     SCN_DB_END_8
                          M 
                          M         ; It's still inactive after 256 polls.  Time to count it as officially off now.
000E6A 9700               M         BCF     BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; XXX Based on our current state, deal with the consequences of letting
                          M         ; XXX go of the button now.
                          M         ;
                          M         ; I think actually there aren't any here.
                          M         ;
000E6C D???               M         BRA     SCN_DB_END_8
                          M 
000E6E                    M SCN_DB_ACTIVE_8:
                          M         ; Button registers as being active now.  How long has this been happening?
000E6E A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_ACTIVE, BANKED
000E70 D???               M         BRA     SCN_DB_CHANGED_8
                          M 
                          M         ; Still active? keep counting...
000E72 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_X4, F, BANKED
000E74 D???               M         BRA     SCN_DB_END_8
                          M 
                          M         ; It's still active after 256 polls.  Time to count it as officially on now.
000E76 8700               M         BSF     BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; Based on our current state, deal with the consequences of hitting
                          M         ; the button now.
                          M         ;
                          M         ; If already pressed: ignore
                          M         ; ElseIf masked out: ignore
                          M         ; ElseIf locked out: reset lockout timer to start [handled above]
                          M         ; ElseIf scanning: copy timer into button stats, set pressed flag
                          M         ; Else: set lockout state, reset lockout timer
                          M         ;       
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000E78 A100               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_PRESSED, BANKED
000E7A B300               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_MASKED, BANKED
000E7C D???               M         BRA     SCN_DB_END_8
                          M 
000E7E B000               M         BTFSC   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000E80 D???               M         BRA     SCN_DB_DING_8
                          M 
000E82 8500               M         BSF     BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_LOCKED, BANKED
000E84 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_X4 
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X4, CHAN_X4G, CHAN_X4R
000E88 010C               M         BANKSEL QUIZSHOW_DATA
000E8A A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_LOCKED, BANKED
000E8C D???               M         BRA     LLIM_NOT_LOCKED_24
                          M 
                          M         SET_SSR_OFF CHAN_X4G
                          M          SET_SSR_VALUE CHAN_X4G, 0
000E8E 0104               M         BANKSEL SSR_DATA_BANK
000E90 0E00               M          MOVLW  0
000E92 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4G, BANKED
000E94 6B00               M          CLRF   SSR_00_STEP+CHAN_X4G, BANKED
000E96 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4G, BANKED
000E98 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4G, BANKED
000E9A 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X4R
                          M          SET_SSR_PATTERN CHAN_X4R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000E9C 0104               M         BANKSEL SSR_DATA_BANK
000E9E 0E00               M          MOVLW  0
000EA0 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
000EA2 0E04               M          MOVLW  4
000EA4 6F00               M          MOVWF  SSR_00_STEP+CHAN_X4R, BANKED
000EA6 0E01               M          MOVLW  1
000EA8 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X4R, BANKED
000EAA 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X4R, BANKED
000EAC 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000EAE 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X4R, BANKED
000EB0 D???               M         BRA     LLIM_END_24
                          M 
000EB2                    M LLIM_NOT_LOCKED_24:
000EB2 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_MASKED, BANKED
000EB4 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_PRESSED, BANKED
000EB6 D???               M         BRA     LLIM_OFF_24
000EB8 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000EBA D???               M         BRA     LLIM_OFF_24
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X4R
                          M          SET_SSR_VALUE CHAN_X4R, 0
000EBC 0104               M         BANKSEL SSR_DATA_BANK
000EBE 0E00               M          MOVLW  0
000EC0 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
000EC2 6B00               M          CLRF   SSR_00_STEP+CHAN_X4R, BANKED
000EC4 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4R, BANKED
000EC6 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4R, BANKED
000EC8 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4R, BANKED
                          M         SET_SSR_STEADY CHAN_X4G
                          M          SET_SSR_VALUE CHAN_X4G, 255
000ECA 0104               M         BANKSEL SSR_DATA_BANK
000ECC 0EFF               M          MOVLW  255
000ECE 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4G, BANKED
000ED0 6B00               M          CLRF   SSR_00_STEP+CHAN_X4G, BANKED
000ED2 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4G, BANKED
000ED4 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4G, BANKED
000ED6 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4G, BANKED
000ED8 D???               M         BRA     LLIM_END_24
                          M 
000EDA                    M LLIM_OFF_24:
                          M         SET_SSR_OFF CHAN_X4G
                          M          SET_SSR_VALUE CHAN_X4G, 0
000EDA 0104               M         BANKSEL SSR_DATA_BANK
000EDC 0E00               M          MOVLW  0
000EDE 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4G, BANKED
000EE0 6B00               M          CLRF   SSR_00_STEP+CHAN_X4G, BANKED
000EE2 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4G, BANKED
000EE4 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4G, BANKED
000EE6 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4G, BANKED
                          M         SET_SSR_OFF CHAN_X4R
                          M          SET_SSR_VALUE CHAN_X4R, 0
000EE8 0104               M         BANKSEL SSR_DATA_BANK
000EEA 0E00               M          MOVLW  0
000EEC 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
000EEE 6B00               M          CLRF   SSR_00_STEP+CHAN_X4R, BANKED
000EF0 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4R, BANKED
000EF2 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4R, BANKED
000EF4 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4R, BANKED
                          M         
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000EF6                    M LLIM_END_24:
000EF6 010C               M         BANKSEL QUIZSHOW_DATA
  00000019                M LLIM_N  ++
000EF8 D???               M         BRA     SCN_DB_END_8
                          M 
000EFA                    M SCN_DB_DING_8:
000EFA 8100               M         BSF     BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_PRESSED, BANKED
                          M         ; copy timer values
000EFC C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+BTN_IDX_X4
000F00 C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+BTN_IDX_X4
000F04 CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+BTN_IDX_X4
000F08 CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+BTN_IDX_X4
                          M         ; update the lights
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X4, CHAN_X4G, CHAN_X4R
000F0C 010C               M         BANKSEL QUIZSHOW_DATA
000F0E A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_LOCKED, BANKED
000F10 D???               M         BRA     LLIM_NOT_LOCKED_25
                          M 
                          M         SET_SSR_OFF CHAN_X4G
                          M          SET_SSR_VALUE CHAN_X4G, 0
000F12 0104               M         BANKSEL SSR_DATA_BANK
000F14 0E00               M          MOVLW  0
000F16 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4G, BANKED
000F18 6B00               M          CLRF   SSR_00_STEP+CHAN_X4G, BANKED
000F1A 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4G, BANKED
000F1C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4G, BANKED
000F1E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X4R
                          M          SET_SSR_PATTERN CHAN_X4R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000F20 0104               M         BANKSEL SSR_DATA_BANK
000F22 0E00               M          MOVLW  0
000F24 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
000F26 0E04               M          MOVLW  4
000F28 6F00               M          MOVWF  SSR_00_STEP+CHAN_X4R, BANKED
000F2A 0E01               M          MOVLW  1
000F2C 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X4R, BANKED
000F2E 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X4R, BANKED
000F30 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000F32 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X4R, BANKED
000F34 D???               M         BRA     LLIM_END_25
                          M 
000F36                    M LLIM_NOT_LOCKED_25:
000F36 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_MASKED, BANKED
000F38 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_PRESSED, BANKED
000F3A D???               M         BRA     LLIM_OFF_25
000F3C A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000F3E D???               M         BRA     LLIM_OFF_25
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X4R
                          M          SET_SSR_VALUE CHAN_X4R, 0
000F40 0104               M         BANKSEL SSR_DATA_BANK
000F42 0E00               M          MOVLW  0
000F44 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
000F46 6B00               M          CLRF   SSR_00_STEP+CHAN_X4R, BANKED
000F48 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4R, BANKED
000F4A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4R, BANKED
000F4C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4R, BANKED
                          M         SET_SSR_STEADY CHAN_X4G
                          M          SET_SSR_VALUE CHAN_X4G, 255
000F4E 0104               M         BANKSEL SSR_DATA_BANK
000F50 0EFF               M          MOVLW  255
000F52 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4G, BANKED
000F54 6B00               M          CLRF   SSR_00_STEP+CHAN_X4G, BANKED
000F56 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4G, BANKED
000F58 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4G, BANKED
000F5A 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4G, BANKED
000F5C D???               M         BRA     LLIM_END_25
                          M 
000F5E                    M LLIM_OFF_25:
                          M         SET_SSR_OFF CHAN_X4G
                          M          SET_SSR_VALUE CHAN_X4G, 0
000F5E 0104               M         BANKSEL SSR_DATA_BANK
000F60 0E00               M          MOVLW  0
000F62 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4G, BANKED
000F64 6B00               M          CLRF   SSR_00_STEP+CHAN_X4G, BANKED
000F66 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4G, BANKED
000F68 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4G, BANKED
000F6A 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4G, BANKED
                          M         SET_SSR_OFF CHAN_X4R
                          M          SET_SSR_VALUE CHAN_X4R, 0
000F6C 0104               M         BANKSEL SSR_DATA_BANK
000F6E 0E00               M          MOVLW  0
000F70 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
000F72 6B00               M          CLRF   SSR_00_STEP+CHAN_X4R, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000F74 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4R, BANKED
000F76 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4R, BANKED
000F78 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4R, BANKED
                          M         
000F7A                    M LLIM_END_25:
000F7A 010C               M         BANKSEL QUIZSHOW_DATA
  0000001A                M LLIM_N  ++
000F7C D???               M         BRA     SCN_DB_END_8
                          M         
000F7E                    M SCN_DB_CHANGED_8:
                          M         ; Button has changed since last time: reset debounce counter and wait.
000F7E 6B00               M         CLRF    BTN_X0_DEB_TMR+BTN_IDX_X4, BANKED
                          M 
000F80                    M SCN_DB_END_8:
000F80 A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
000F82 D???               M         BRA     SCN_DB_DONE_8
                          M         ;
                          M         ; Every 1/120 second do this:
                          M         ;
                          M         ; Check for locked-out buttons. We hold them in this state as long as
                          M         ; they are still being pressed.  Once they let go we start counting down time
                          M         ; before releasing.
                          M         ;
000F84 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_LOCKED, BANKED
000F86 D???               M         BRA     SCN_DB_DONE_8
                          M 
000F88 A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_ACTIVE, BANKED
000F8A D???               M         BRA     SCN_DB_LCK_8
                          M 
000F8C C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_X4 ; active+locked: reset and hold timer
000F90 D???               M         BRA     SCN_DB_DONE_8
                          M 
000F92                    M SCN_DB_LCK_8:
000F92 2F00               M         DECFSZ  BTN_X0_LOCKTMR+BTN_IDX_X4, F, BANKED    ; locked: count down to unlock time
000F94 D???               M         BRA     SCN_DB_DONE_8
                          M 
000F96 9500               M         BCF     BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_LOCKED, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X4, CHAN_X4G, CHAN_X4R
000F98 010C               M         BANKSEL QUIZSHOW_DATA
000F9A A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_LOCKED, BANKED
000F9C D???               M         BRA     LLIM_NOT_LOCKED_26
                          M 
                          M         SET_SSR_OFF CHAN_X4G
                          M          SET_SSR_VALUE CHAN_X4G, 0
000F9E 0104               M         BANKSEL SSR_DATA_BANK
000FA0 0E00               M          MOVLW  0
000FA2 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4G, BANKED
000FA4 6B00               M          CLRF   SSR_00_STEP+CHAN_X4G, BANKED
000FA6 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4G, BANKED
000FA8 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4G, BANKED
000FAA 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X4R
                          M          SET_SSR_PATTERN CHAN_X4R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000FAC 0104               M         BANKSEL SSR_DATA_BANK
000FAE 0E00               M          MOVLW  0
000FB0 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
000FB2 0E04               M          MOVLW  4
000FB4 6F00               M          MOVWF  SSR_00_STEP+CHAN_X4R, BANKED
000FB6 0E01               M          MOVLW  1
000FB8 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X4R, BANKED
000FBA 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X4R, BANKED
000FBC 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000FBE 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X4R, BANKED
000FC0 D???               M         BRA     LLIM_END_26
                          M 
000FC2                    M LLIM_NOT_LOCKED_26:
000FC2 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_MASKED, BANKED
000FC4 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_PRESSED, BANKED
000FC6 D???               M         BRA     LLIM_OFF_26
000FC8 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000FCA D???               M         BRA     LLIM_OFF_26
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X4R
                          M          SET_SSR_VALUE CHAN_X4R, 0
000FCC 0104               M         BANKSEL SSR_DATA_BANK
000FCE 0E00               M          MOVLW  0
000FD0 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
000FD2 6B00               M          CLRF   SSR_00_STEP+CHAN_X4R, BANKED
000FD4 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4R, BANKED
000FD6 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4R, BANKED
000FD8 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4R, BANKED
                          M         SET_SSR_STEADY CHAN_X4G
                          M          SET_SSR_VALUE CHAN_X4G, 255
000FDA 0104               M         BANKSEL SSR_DATA_BANK
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000FDC 0EFF               M          MOVLW  255
000FDE 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4G, BANKED
000FE0 6B00               M          CLRF   SSR_00_STEP+CHAN_X4G, BANKED
000FE2 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4G, BANKED
000FE4 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4G, BANKED
000FE6 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4G, BANKED
000FE8 D???               M         BRA     LLIM_END_26
                          M 
000FEA                    M LLIM_OFF_26:
                          M         SET_SSR_OFF CHAN_X4G
                          M          SET_SSR_VALUE CHAN_X4G, 0
000FEA 0104               M         BANKSEL SSR_DATA_BANK
000FEC 0E00               M          MOVLW  0
000FEE 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4G, BANKED
000FF0 6B00               M          CLRF   SSR_00_STEP+CHAN_X4G, BANKED
000FF2 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4G, BANKED
000FF4 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4G, BANKED
000FF6 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4G, BANKED
                          M         SET_SSR_OFF CHAN_X4R
                          M          SET_SSR_VALUE CHAN_X4R, 0
000FF8 0104               M         BANKSEL SSR_DATA_BANK
000FFA 0E00               M          MOVLW  0
000FFC 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
000FFE 6B00               M          CLRF   SSR_00_STEP+CHAN_X4R, BANKED
001000 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4R, BANKED
001002 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4R, BANKED
001004 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4R, BANKED
                          M         
001006                    M LLIM_END_26:
001006 010C               M         BANKSEL QUIZSHOW_DATA
  0000001B                M LLIM_N  ++
                          M         
001008                    M SCN_DB_DONE_8:
  00000009                M SCN_DBN ++
                      00959           SCAN_DEBOUNCE BTN_IDX_L4, PORT_L4, BIT_L4, CHAN_L4R, CHAN_L4R
                          M         ; Sense button
001008 BA82               M         BTFSC   PORT_L4,  BIT_L4,  ACCESS
00100A D???               M         BRA     SCN_DB_ACTIVE_9
                          M 
                          M         ; Button registers as being inactive now.  How long has this been the case?
00100C B700               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_ACTIVE, BANKED
00100E D???               M         BRA     SCN_DB_CHANGED_9
                          M 
                          M         ; Still inactive? keep counting...
001010 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_L4, F, BANKED
001012 D???               M         BRA     SCN_DB_END_9
                          M 
                          M         ; It's still inactive after 256 polls.  Time to count it as officially off now.
001014 9700               M         BCF     BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; XXX Based on our current state, deal with the consequences of letting
                          M         ; XXX go of the button now.
                          M         ;
                          M         ; I think actually there aren't any here.
                          M         ;
001016 D???               M         BRA     SCN_DB_END_9
                          M 
001018                    M SCN_DB_ACTIVE_9:
                          M         ; Button registers as being active now.  How long has this been happening?
001018 A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_ACTIVE, BANKED
00101A D???               M         BRA     SCN_DB_CHANGED_9
                          M 
                          M         ; Still active? keep counting...
00101C 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_L4, F, BANKED
00101E D???               M         BRA     SCN_DB_END_9
                          M 
                          M         ; It's still active after 256 polls.  Time to count it as officially on now.
001020 8700               M         BSF     BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; Based on our current state, deal with the consequences of hitting
                          M         ; the button now.
                          M         ;
                          M         ; If already pressed: ignore
                          M         ; ElseIf masked out: ignore
                          M         ; ElseIf locked out: reset lockout timer to start [handled above]
                          M         ; ElseIf scanning: copy timer into button stats, set pressed flag
                          M         ; Else: set lockout state, reset lockout timer
                          M         ;       
001022 A100               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_PRESSED, BANKED
001024 B300               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_MASKED, BANKED
001026 D???               M         BRA     SCN_DB_END_9
                          M 
001028 B000               M         BTFSC   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
00102A D???               M         BRA     SCN_DB_DING_9
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
00102C 8500               M         BSF     BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_LOCKED, BANKED
00102E C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_L4 
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L4, CHAN_L4R, CHAN_L4R
001032 010C               M         BANKSEL QUIZSHOW_DATA
001034 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_LOCKED, BANKED
001036 D???               M         BRA     LLIM_NOT_LOCKED_27
                          M 
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
001038 0104               M         BANKSEL SSR_DATA_BANK
00103A 0E00               M          MOVLW  0
00103C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
00103E 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
001040 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
001042 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
001044 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L4R
                          M          SET_SSR_PATTERN CHAN_L4R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
001046 0104               M         BANKSEL SSR_DATA_BANK
001048 0E00               M          MOVLW  0
00104A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
00104C 0E04               M          MOVLW  4
00104E 6F00               M          MOVWF  SSR_00_STEP+CHAN_L4R, BANKED
001050 0E01               M          MOVLW  1
001052 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L4R, BANKED
001054 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L4R, BANKED
001056 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
001058 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L4R, BANKED
00105A D???               M         BRA     LLIM_END_27
                          M 
00105C                    M LLIM_NOT_LOCKED_27:
00105C A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_MASKED, BANKED
00105E B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_PRESSED, BANKED
001060 D???               M         BRA     LLIM_OFF_27
001062 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
001064 D???               M         BRA     LLIM_OFF_27
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
001066 0104               M         BANKSEL SSR_DATA_BANK
001068 0E00               M          MOVLW  0
00106A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
00106C 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
00106E 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
001070 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
001072 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         SET_SSR_STEADY CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 255
001074 0104               M         BANKSEL SSR_DATA_BANK
001076 0EFF               M          MOVLW  255
001078 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
00107A 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
00107C 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
00107E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
001080 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
001082 D???               M         BRA     LLIM_END_27
                          M 
001084                    M LLIM_OFF_27:
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
001084 0104               M         BANKSEL SSR_DATA_BANK
001086 0E00               M          MOVLW  0
001088 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
00108A 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
00108C 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
00108E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
001090 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
001092 0104               M         BANKSEL SSR_DATA_BANK
001094 0E00               M          MOVLW  0
001096 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
001098 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
00109A 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
00109C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
00109E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         
0010A0                    M LLIM_END_27:
0010A0 010C               M         BANKSEL QUIZSHOW_DATA
  0000001C                M LLIM_N  ++
0010A2 D???               M         BRA     SCN_DB_END_9
                          M 
0010A4                    M SCN_DB_DING_9:
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0010A4 8100               M         BSF     BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_PRESSED, BANKED
                          M         ; copy timer values
0010A6 C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+BTN_IDX_L4
0010AA C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+BTN_IDX_L4
0010AE CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+BTN_IDX_L4
0010B2 CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+BTN_IDX_L4
                          M         ; update the lights
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L4, CHAN_L4R, CHAN_L4R
0010B6 010C               M         BANKSEL QUIZSHOW_DATA
0010B8 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_LOCKED, BANKED
0010BA D???               M         BRA     LLIM_NOT_LOCKED_28
                          M 
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
0010BC 0104               M         BANKSEL SSR_DATA_BANK
0010BE 0E00               M          MOVLW  0
0010C0 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
0010C2 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
0010C4 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
0010C6 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
0010C8 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L4R
                          M          SET_SSR_PATTERN CHAN_L4R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0010CA 0104               M         BANKSEL SSR_DATA_BANK
0010CC 0E00               M          MOVLW  0
0010CE 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
0010D0 0E04               M          MOVLW  4
0010D2 6F00               M          MOVWF  SSR_00_STEP+CHAN_L4R, BANKED
0010D4 0E01               M          MOVLW  1
0010D6 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L4R, BANKED
0010D8 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L4R, BANKED
0010DA 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0010DC 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L4R, BANKED
0010DE D???               M         BRA     LLIM_END_28
                          M 
0010E0                    M LLIM_NOT_LOCKED_28:
0010E0 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_MASKED, BANKED
0010E2 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_PRESSED, BANKED
0010E4 D???               M         BRA     LLIM_OFF_28
0010E6 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0010E8 D???               M         BRA     LLIM_OFF_28
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
0010EA 0104               M         BANKSEL SSR_DATA_BANK
0010EC 0E00               M          MOVLW  0
0010EE 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
0010F0 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
0010F2 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
0010F4 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
0010F6 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         SET_SSR_STEADY CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 255
0010F8 0104               M         BANKSEL SSR_DATA_BANK
0010FA 0EFF               M          MOVLW  255
0010FC 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
0010FE 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
001100 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
001102 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
001104 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
001106 D???               M         BRA     LLIM_END_28
                          M 
001108                    M LLIM_OFF_28:
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
001108 0104               M         BANKSEL SSR_DATA_BANK
00110A 0E00               M          MOVLW  0
00110C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
00110E 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
001110 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
001112 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
001114 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
001116 0104               M         BANKSEL SSR_DATA_BANK
001118 0E00               M          MOVLW  0
00111A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
00111C 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
00111E 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
001120 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
001122 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         
001124                    M LLIM_END_28:
001124 010C               M         BANKSEL QUIZSHOW_DATA
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000001D                M LLIM_N  ++
001126 D???               M         BRA     SCN_DB_END_9
                          M         
001128                    M SCN_DB_CHANGED_9:
                          M         ; Button has changed since last time: reset debounce counter and wait.
001128 6B00               M         CLRF    BTN_X0_DEB_TMR+BTN_IDX_L4, BANKED
                          M 
00112A                    M SCN_DB_END_9:
00112A A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
00112C D???               M         BRA     SCN_DB_DONE_9
                          M         ;
                          M         ; Every 1/120 second do this:
                          M         ;
                          M         ; Check for locked-out buttons. We hold them in this state as long as
                          M         ; they are still being pressed.  Once they let go we start counting down time
                          M         ; before releasing.
                          M         ;
00112E A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_LOCKED, BANKED
001130 D???               M         BRA     SCN_DB_DONE_9
                          M 
001132 A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_ACTIVE, BANKED
001134 D???               M         BRA     SCN_DB_LCK_9
                          M 
001136 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_L4 ; active+locked: reset and hold timer
00113A D???               M         BRA     SCN_DB_DONE_9
                          M 
00113C                    M SCN_DB_LCK_9:
00113C 2F00               M         DECFSZ  BTN_X0_LOCKTMR+BTN_IDX_L4, F, BANKED    ; locked: count down to unlock time
00113E D???               M         BRA     SCN_DB_DONE_9
                          M 
001140 9500               M         BCF     BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_LOCKED, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L4, CHAN_L4R, CHAN_L4R
001142 010C               M         BANKSEL QUIZSHOW_DATA
001144 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_LOCKED, BANKED
001146 D???               M         BRA     LLIM_NOT_LOCKED_29
                          M 
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
001148 0104               M         BANKSEL SSR_DATA_BANK
00114A 0E00               M          MOVLW  0
00114C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
00114E 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
001150 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
001152 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
001154 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L4R
                          M          SET_SSR_PATTERN CHAN_L4R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
001156 0104               M         BANKSEL SSR_DATA_BANK
001158 0E00               M          MOVLW  0
00115A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
00115C 0E04               M          MOVLW  4
00115E 6F00               M          MOVWF  SSR_00_STEP+CHAN_L4R, BANKED
001160 0E01               M          MOVLW  1
001162 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L4R, BANKED
001164 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L4R, BANKED
001166 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
001168 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L4R, BANKED
00116A D???               M         BRA     LLIM_END_29
                          M 
00116C                    M LLIM_NOT_LOCKED_29:
00116C A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_MASKED, BANKED
00116E B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_PRESSED, BANKED
001170 D???               M         BRA     LLIM_OFF_29
001172 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
001174 D???               M         BRA     LLIM_OFF_29
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
001176 0104               M         BANKSEL SSR_DATA_BANK
001178 0E00               M          MOVLW  0
00117A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
00117C 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
00117E 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
001180 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
001182 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         SET_SSR_STEADY CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 255
001184 0104               M         BANKSEL SSR_DATA_BANK
001186 0EFF               M          MOVLW  255
001188 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
00118A 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
00118C 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
00118E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
001190 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001192 D???               M         BRA     LLIM_END_29
                          M 
001194                    M LLIM_OFF_29:
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
001194 0104               M         BANKSEL SSR_DATA_BANK
001196 0E00               M          MOVLW  0
001198 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
00119A 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
00119C 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
00119E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
0011A0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
0011A2 0104               M         BANKSEL SSR_DATA_BANK
0011A4 0E00               M          MOVLW  0
0011A6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
0011A8 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
0011AA 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
0011AC 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
0011AE 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         
0011B0                    M LLIM_END_29:
0011B0 010C               M         BANKSEL QUIZSHOW_DATA
  0000001E                M LLIM_N  ++
                          M         
0011B2                    M SCN_DB_DONE_9:
  0000000A                M SCN_DBN ++
                      00960          ELSE
                      00961           ERROR "Improper LUMOS_CHIP_TYPE setting!"
                      00962          ENDIF
                      00963         ENDIF
0011B2 9400           00964         BCF     QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
0011B4 0012           00965         RETURN
                      00966 
                      00967 
                      00968 ; if standalone mode:
                      00969 ;       if L4 pressed:
                      00970 ;               reset all buttons and lights, stop scanner
                      00971 ;       if X4 pressed:
                      00972 ;               start scanning
                      00973 ;       if anything else pressed:
                      00974 ;               light up X4 to indicate player who was in first
                      00975 ;               set flag to ignore further results (or, I suppose, keep re-comparing them :)
                      00976 ;       
                      00977 
                      00978 
                      00979 
                      00980 
                      00981 ;
                      00982 ; Start scanning for button presses
                      00983 ;
                      00984 ; Resets all button timers and debounce circuits, starts scanning
                      00985 ; This is stopped via the QS_QUERY command.
                      00986 ; This is a global command, only recognized when sent to address 15.
                      00987 ;
0011B6                00988 QSCC_CMD5_START:
0011B6 0004           00989         CLRWDT
                      00990         CLEAR_BUTTONS 0
  00000000                M CB_IDX  SET     0
                          M         WHILE   CB_IDX < N_BUTTONS
0011B8 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
0011BA 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
0011BC 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
0011BE 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
0011C0 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000001                M CB_IDX   ++
0011C2 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
0011C4 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
0011C6 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
0011C8 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
0011CA 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000002                M CB_IDX   ++
0011CC 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
0011CE 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
0011D0 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
0011D2 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
0011D4 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000003                M CB_IDX   ++
0011D6 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
0011D8 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
0011DA 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
0011DC 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
0011DE 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000004                M CB_IDX   ++
0011E0 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
0011E2 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
0011E4 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
0011E6 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
0011E8 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000005                M CB_IDX   ++
0011EA 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
0011EC 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
0011EE 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
0011F0 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
0011F2 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000006                M CB_IDX   ++
0011F4 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
0011F6 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
0011F8 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
0011FA 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
0011FC 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000007                M CB_IDX   ++
0011FE 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
001200 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
001202 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
001204 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
001206 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000008                M CB_IDX   ++
001208 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
00120A 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
00120C 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
00120E 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
001210 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000009                M CB_IDX   ++
001212 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
001214 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
001216 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
001218 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
00121A 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  0000000A                M CB_IDX   ++
00121C 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
00121E 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
001220 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
001222 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
001224 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  0000000B                M CB_IDX   ++
001226 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
001228 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
00122A 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
00122C 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
00122E 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  0000000C                M CB_IDX   ++
001230 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
001232 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
001234 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
001236 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
001238 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  0000000D                M CB_IDX   ++
00123A 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
00123C 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
00123E 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
001240 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
001242 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  0000000E                M CB_IDX   ++
001244 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
001246 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
001248 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
00124A 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
00124C 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  0000000F                M CB_IDX   ++
00124E 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
001250 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
001252 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
001254 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
001256 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000010                M CB_IDX   ++
                          M         ENDW
001258 8000           00991         BSF     QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
                      00992         ; start timer
00125A 6A00           00993         CLRF    QS_BTN_TMR_T, ACCESS
00125C 6A00           00994         CLRF    QS_BTN_TMR_U, ACCESS
00125E 6ACF           00995         CLRF    TMR1H, ACCESS
001260 6ACE           00996         CLRF    TMR1L, ACCESS
001262 909E           00997         BCF     PIR1, TMR1IF, ACCESS
001264 809F           00998         BSF     IPR1, TMR1IP, ACCESS
001266 809D           00999         BSF     PIE1, TMR1IE, ACCESS
001268 80CD           01000         BSF     T1CON, TMR1ON, ACCESS
                      01001         ; light up non-masked buttons
00126A D???           01002         RCALL   SET_ALL_BUTTON_LIGHTS
00126C 0012           01003         RETURN
                      01004 
00126E                01005 SET_ALL_BUTTON_LIGHTS:
00126E 0004           01006         CLRWDT
001270 010C           01007         BANKSEL QUIZSHOW_DATA
                      01008         IF LUMOS_CHIP_TYPE == LUMOS_CHIP_QSCC
                      01009          LOCAL_LIGHT_INDICATOR BTN_IDX_X0, CHAN_X0G, CHAN_X0R
                      01010          LOCAL_LIGHT_INDICATOR BTN_IDX_L0, CHAN_L0G, CHAN_L0R
                      01011          LOCAL_LIGHT_INDICATOR BTN_IDX_A0, CHAN_A0L, CHAN_A0L
                      01012          LOCAL_LIGHT_INDICATOR BTN_IDX_B0, CHAN_B0L, CHAN_B0L
                      01013          LOCAL_LIGHT_INDICATOR BTN_IDX_C0, CHAN_C0L, CHAN_C0L
                      01014          LOCAL_LIGHT_INDICATOR BTN_IDX_D0, CHAN_D0L, CHAN_D0L
                      01015         ELSE
                      01016          IF LUMOS_CHIP_TYPE == LUMOS_CHIP_QSRC
                      01017           LOCAL_LIGHT_INDICATOR BTN_IDX_X0, CHAN_X0G, CHAN_X0R
001272 010C               M         BANKSEL QUIZSHOW_DATA
001274 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_LOCKED, BANKED
001276 D???               M         BRA     LLIM_NOT_LOCKED_30
                          M 
                          M         SET_SSR_OFF CHAN_X0G
                          M          SET_SSR_VALUE CHAN_X0G, 0
001278 0104               M         BANKSEL SSR_DATA_BANK
00127A 0E00               M          MOVLW  0
00127C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0G, BANKED
00127E 6B00               M          CLRF   SSR_00_STEP+CHAN_X0G, BANKED
001280 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0G, BANKED
001282 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0G, BANKED
001284 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X0R
                          M          SET_SSR_PATTERN CHAN_X0R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
001286 0104               M         BANKSEL SSR_DATA_BANK
001288 0E00               M          MOVLW  0
00128A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
00128C 0E04               M          MOVLW  4
00128E 6F00               M          MOVWF  SSR_00_STEP+CHAN_X0R, BANKED
001290 0E01               M          MOVLW  1
001292 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X0R, BANKED
001294 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X0R, BANKED
001296 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
001298 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X0R, BANKED
00129A D???               M         BRA     LLIM_END_30
                          M 
00129C                    M LLIM_NOT_LOCKED_30:
00129C A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_MASKED, BANKED
00129E B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_PRESSED, BANKED
0012A0 D???               M         BRA     LLIM_OFF_30
0012A2 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0012A4 D???               M         BRA     LLIM_OFF_30
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X0R
                          M          SET_SSR_VALUE CHAN_X0R, 0
0012A6 0104               M         BANKSEL SSR_DATA_BANK
0012A8 0E00               M          MOVLW  0
0012AA 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
0012AC 6B00               M          CLRF   SSR_00_STEP+CHAN_X0R, BANKED
0012AE 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0R, BANKED
0012B0 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0R, BANKED
0012B2 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0R, BANKED
                          M         SET_SSR_STEADY CHAN_X0G
                          M          SET_SSR_VALUE CHAN_X0G, 255
0012B4 0104               M         BANKSEL SSR_DATA_BANK
0012B6 0EFF               M          MOVLW  255
0012B8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0G, BANKED
0012BA 6B00               M          CLRF   SSR_00_STEP+CHAN_X0G, BANKED
0012BC 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0G, BANKED
0012BE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0G, BANKED
0012C0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0G, BANKED
0012C2 D???               M         BRA     LLIM_END_30
                          M 
0012C4                    M LLIM_OFF_30:
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         SET_SSR_OFF CHAN_X0G
                          M          SET_SSR_VALUE CHAN_X0G, 0
0012C4 0104               M         BANKSEL SSR_DATA_BANK
0012C6 0E00               M          MOVLW  0
0012C8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0G, BANKED
0012CA 6B00               M          CLRF   SSR_00_STEP+CHAN_X0G, BANKED
0012CC 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0G, BANKED
0012CE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0G, BANKED
0012D0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0G, BANKED
                          M         SET_SSR_OFF CHAN_X0R
                          M          SET_SSR_VALUE CHAN_X0R, 0
0012D2 0104               M         BANKSEL SSR_DATA_BANK
0012D4 0E00               M          MOVLW  0
0012D6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
0012D8 6B00               M          CLRF   SSR_00_STEP+CHAN_X0R, BANKED
0012DA 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0R, BANKED
0012DC 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0R, BANKED
0012DE 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0R, BANKED
                          M         
0012E0                    M LLIM_END_30:
0012E0 010C               M         BANKSEL QUIZSHOW_DATA
  0000001F                M LLIM_N  ++
                      01018           LOCAL_LIGHT_INDICATOR BTN_IDX_L0, CHAN_L0R, CHAN_L0R
0012E2 010C               M         BANKSEL QUIZSHOW_DATA
0012E4 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_LOCKED, BANKED
0012E6 D???               M         BRA     LLIM_NOT_LOCKED_31
                          M 
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
0012E8 0104               M         BANKSEL SSR_DATA_BANK
0012EA 0E00               M          MOVLW  0
0012EC 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
0012EE 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
0012F0 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
0012F2 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
0012F4 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L0R
                          M          SET_SSR_PATTERN CHAN_L0R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0012F6 0104               M         BANKSEL SSR_DATA_BANK
0012F8 0E00               M          MOVLW  0
0012FA 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
0012FC 0E04               M          MOVLW  4
0012FE 6F00               M          MOVWF  SSR_00_STEP+CHAN_L0R, BANKED
001300 0E01               M          MOVLW  1
001302 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L0R, BANKED
001304 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L0R, BANKED
001306 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
001308 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L0R, BANKED
00130A D???               M         BRA     LLIM_END_31
                          M 
00130C                    M LLIM_NOT_LOCKED_31:
00130C A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_MASKED, BANKED
00130E B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_PRESSED, BANKED
001310 D???               M         BRA     LLIM_OFF_31
001312 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
001314 D???               M         BRA     LLIM_OFF_31
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
001316 0104               M         BANKSEL SSR_DATA_BANK
001318 0E00               M          MOVLW  0
00131A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
00131C 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
00131E 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
001320 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
001322 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         SET_SSR_STEADY CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 255
001324 0104               M         BANKSEL SSR_DATA_BANK
001326 0EFF               M          MOVLW  255
001328 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
00132A 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
00132C 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
00132E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
001330 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
001332 D???               M         BRA     LLIM_END_31
                          M 
001334                    M LLIM_OFF_31:
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
001334 0104               M         BANKSEL SSR_DATA_BANK
001336 0E00               M          MOVLW  0
001338 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
00133A 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00133C 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
00133E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
001340 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
001342 0104               M         BANKSEL SSR_DATA_BANK
001344 0E00               M          MOVLW  0
001346 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
001348 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
00134A 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
00134C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
00134E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         
001350                    M LLIM_END_31:
001350 010C               M         BANKSEL QUIZSHOW_DATA
  00000020                M LLIM_N  ++
                      01019           LOCAL_LIGHT_INDICATOR BTN_IDX_X1, CHAN_X1G, CHAN_X1R
001352 010C               M         BANKSEL QUIZSHOW_DATA
001354 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_LOCKED, BANKED
001356 D???               M         BRA     LLIM_NOT_LOCKED_32
                          M 
                          M         SET_SSR_OFF CHAN_X1G
                          M          SET_SSR_VALUE CHAN_X1G, 0
001358 0104               M         BANKSEL SSR_DATA_BANK
00135A 0E00               M          MOVLW  0
00135C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1G, BANKED
00135E 6B00               M          CLRF   SSR_00_STEP+CHAN_X1G, BANKED
001360 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1G, BANKED
001362 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1G, BANKED
001364 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X1R
                          M          SET_SSR_PATTERN CHAN_X1R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
001366 0104               M         BANKSEL SSR_DATA_BANK
001368 0E00               M          MOVLW  0
00136A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
00136C 0E04               M          MOVLW  4
00136E 6F00               M          MOVWF  SSR_00_STEP+CHAN_X1R, BANKED
001370 0E01               M          MOVLW  1
001372 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X1R, BANKED
001374 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X1R, BANKED
001376 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
001378 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X1R, BANKED
00137A D???               M         BRA     LLIM_END_32
                          M 
00137C                    M LLIM_NOT_LOCKED_32:
00137C A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_MASKED, BANKED
00137E B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_PRESSED, BANKED
001380 D???               M         BRA     LLIM_OFF_32
001382 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
001384 D???               M         BRA     LLIM_OFF_32
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X1R
                          M          SET_SSR_VALUE CHAN_X1R, 0
001386 0104               M         BANKSEL SSR_DATA_BANK
001388 0E00               M          MOVLW  0
00138A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
00138C 6B00               M          CLRF   SSR_00_STEP+CHAN_X1R, BANKED
00138E 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1R, BANKED
001390 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1R, BANKED
001392 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1R, BANKED
                          M         SET_SSR_STEADY CHAN_X1G
                          M          SET_SSR_VALUE CHAN_X1G, 255
001394 0104               M         BANKSEL SSR_DATA_BANK
001396 0EFF               M          MOVLW  255
001398 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1G, BANKED
00139A 6B00               M          CLRF   SSR_00_STEP+CHAN_X1G, BANKED
00139C 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1G, BANKED
00139E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1G, BANKED
0013A0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1G, BANKED
0013A2 D???               M         BRA     LLIM_END_32
                          M 
0013A4                    M LLIM_OFF_32:
                          M         SET_SSR_OFF CHAN_X1G
                          M          SET_SSR_VALUE CHAN_X1G, 0
0013A4 0104               M         BANKSEL SSR_DATA_BANK
0013A6 0E00               M          MOVLW  0
0013A8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1G, BANKED
0013AA 6B00               M          CLRF   SSR_00_STEP+CHAN_X1G, BANKED
0013AC 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1G, BANKED
0013AE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1G, BANKED
0013B0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1G, BANKED
                          M         SET_SSR_OFF CHAN_X1R
                          M          SET_SSR_VALUE CHAN_X1R, 0
0013B2 0104               M         BANKSEL SSR_DATA_BANK
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0013B4 0E00               M          MOVLW  0
0013B6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
0013B8 6B00               M          CLRF   SSR_00_STEP+CHAN_X1R, BANKED
0013BA 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1R, BANKED
0013BC 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1R, BANKED
0013BE 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1R, BANKED
                          M         
0013C0                    M LLIM_END_32:
0013C0 010C               M         BANKSEL QUIZSHOW_DATA
  00000021                M LLIM_N  ++
                      01020           LOCAL_LIGHT_INDICATOR BTN_IDX_L1, CHAN_L1R, CHAN_L1R
0013C2 010C               M         BANKSEL QUIZSHOW_DATA
0013C4 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_LOCKED, BANKED
0013C6 D???               M         BRA     LLIM_NOT_LOCKED_33
                          M 
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
0013C8 0104               M         BANKSEL SSR_DATA_BANK
0013CA 0E00               M          MOVLW  0
0013CC 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
0013CE 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
0013D0 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
0013D2 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
0013D4 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L1R
                          M          SET_SSR_PATTERN CHAN_L1R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0013D6 0104               M         BANKSEL SSR_DATA_BANK
0013D8 0E00               M          MOVLW  0
0013DA 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
0013DC 0E04               M          MOVLW  4
0013DE 6F00               M          MOVWF  SSR_00_STEP+CHAN_L1R, BANKED
0013E0 0E01               M          MOVLW  1
0013E2 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L1R, BANKED
0013E4 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L1R, BANKED
0013E6 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0013E8 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L1R, BANKED
0013EA D???               M         BRA     LLIM_END_33
                          M 
0013EC                    M LLIM_NOT_LOCKED_33:
0013EC A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_MASKED, BANKED
0013EE B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_PRESSED, BANKED
0013F0 D???               M         BRA     LLIM_OFF_33
0013F2 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0013F4 D???               M         BRA     LLIM_OFF_33
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
0013F6 0104               M         BANKSEL SSR_DATA_BANK
0013F8 0E00               M          MOVLW  0
0013FA 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
0013FC 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
0013FE 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
001400 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
001402 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         SET_SSR_STEADY CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 255
001404 0104               M         BANKSEL SSR_DATA_BANK
001406 0EFF               M          MOVLW  255
001408 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
00140A 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
00140C 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
00140E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
001410 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
001412 D???               M         BRA     LLIM_END_33
                          M 
001414                    M LLIM_OFF_33:
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
001414 0104               M         BANKSEL SSR_DATA_BANK
001416 0E00               M          MOVLW  0
001418 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
00141A 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
00141C 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
00141E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
001420 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
001422 0104               M         BANKSEL SSR_DATA_BANK
001424 0E00               M          MOVLW  0
001426 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
001428 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
00142A 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
00142C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
00142E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         
001430                    M LLIM_END_33:
001430 010C               M         BANKSEL QUIZSHOW_DATA
  00000022                M LLIM_N  ++
                      01021           LOCAL_LIGHT_INDICATOR BTN_IDX_X2, CHAN_X2G, CHAN_X2R
001432 010C               M         BANKSEL QUIZSHOW_DATA
001434 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_LOCKED, BANKED
001436 D???               M         BRA     LLIM_NOT_LOCKED_34
                          M 
                          M         SET_SSR_OFF CHAN_X2G
                          M          SET_SSR_VALUE CHAN_X2G, 0
001438 0104               M         BANKSEL SSR_DATA_BANK
00143A 0E00               M          MOVLW  0
00143C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2G, BANKED
00143E 6B00               M          CLRF   SSR_00_STEP+CHAN_X2G, BANKED
001440 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2G, BANKED
001442 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2G, BANKED
001444 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X2R
                          M          SET_SSR_PATTERN CHAN_X2R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
001446 0104               M         BANKSEL SSR_DATA_BANK
001448 0E00               M          MOVLW  0
00144A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
00144C 0E04               M          MOVLW  4
00144E 6F00               M          MOVWF  SSR_00_STEP+CHAN_X2R, BANKED
001450 0E01               M          MOVLW  1
001452 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X2R, BANKED
001454 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X2R, BANKED
001456 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
001458 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X2R, BANKED
00145A D???               M         BRA     LLIM_END_34
                          M 
00145C                    M LLIM_NOT_LOCKED_34:
00145C A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_MASKED, BANKED
00145E B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_PRESSED, BANKED
001460 D???               M         BRA     LLIM_OFF_34
001462 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
001464 D???               M         BRA     LLIM_OFF_34
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X2R
                          M          SET_SSR_VALUE CHAN_X2R, 0
001466 0104               M         BANKSEL SSR_DATA_BANK
001468 0E00               M          MOVLW  0
00146A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
00146C 6B00               M          CLRF   SSR_00_STEP+CHAN_X2R, BANKED
00146E 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2R, BANKED
001470 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2R, BANKED
001472 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2R, BANKED
                          M         SET_SSR_STEADY CHAN_X2G
                          M          SET_SSR_VALUE CHAN_X2G, 255
001474 0104               M         BANKSEL SSR_DATA_BANK
001476 0EFF               M          MOVLW  255
001478 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2G, BANKED
00147A 6B00               M          CLRF   SSR_00_STEP+CHAN_X2G, BANKED
00147C 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2G, BANKED
00147E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2G, BANKED
001480 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2G, BANKED
001482 D???               M         BRA     LLIM_END_34
                          M 
001484                    M LLIM_OFF_34:
                          M         SET_SSR_OFF CHAN_X2G
                          M          SET_SSR_VALUE CHAN_X2G, 0
001484 0104               M         BANKSEL SSR_DATA_BANK
001486 0E00               M          MOVLW  0
001488 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2G, BANKED
00148A 6B00               M          CLRF   SSR_00_STEP+CHAN_X2G, BANKED
00148C 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2G, BANKED
00148E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2G, BANKED
001490 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2G, BANKED
                          M         SET_SSR_OFF CHAN_X2R
                          M          SET_SSR_VALUE CHAN_X2R, 0
001492 0104               M         BANKSEL SSR_DATA_BANK
001494 0E00               M          MOVLW  0
001496 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
001498 6B00               M          CLRF   SSR_00_STEP+CHAN_X2R, BANKED
00149A 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2R, BANKED
00149C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2R, BANKED
00149E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2R, BANKED
                          M         
0014A0                    M LLIM_END_34:
0014A0 010C               M         BANKSEL QUIZSHOW_DATA
  00000023                M LLIM_N  ++
                      01022           LOCAL_LIGHT_INDICATOR BTN_IDX_L2, CHAN_L2R, CHAN_L2R
0014A2 010C               M         BANKSEL QUIZSHOW_DATA
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0014A4 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_LOCKED, BANKED
0014A6 D???               M         BRA     LLIM_NOT_LOCKED_35
                          M 
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
0014A8 0104               M         BANKSEL SSR_DATA_BANK
0014AA 0E00               M          MOVLW  0
0014AC 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
0014AE 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
0014B0 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
0014B2 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
0014B4 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L2R
                          M          SET_SSR_PATTERN CHAN_L2R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0014B6 0104               M         BANKSEL SSR_DATA_BANK
0014B8 0E00               M          MOVLW  0
0014BA 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
0014BC 0E04               M          MOVLW  4
0014BE 6F00               M          MOVWF  SSR_00_STEP+CHAN_L2R, BANKED
0014C0 0E01               M          MOVLW  1
0014C2 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L2R, BANKED
0014C4 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L2R, BANKED
0014C6 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0014C8 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L2R, BANKED
0014CA D???               M         BRA     LLIM_END_35
                          M 
0014CC                    M LLIM_NOT_LOCKED_35:
0014CC A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_MASKED, BANKED
0014CE B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_PRESSED, BANKED
0014D0 D???               M         BRA     LLIM_OFF_35
0014D2 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0014D4 D???               M         BRA     LLIM_OFF_35
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
0014D6 0104               M         BANKSEL SSR_DATA_BANK
0014D8 0E00               M          MOVLW  0
0014DA 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
0014DC 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
0014DE 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
0014E0 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
0014E2 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         SET_SSR_STEADY CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 255
0014E4 0104               M         BANKSEL SSR_DATA_BANK
0014E6 0EFF               M          MOVLW  255
0014E8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
0014EA 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
0014EC 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
0014EE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
0014F0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
0014F2 D???               M         BRA     LLIM_END_35
                          M 
0014F4                    M LLIM_OFF_35:
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
0014F4 0104               M         BANKSEL SSR_DATA_BANK
0014F6 0E00               M          MOVLW  0
0014F8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
0014FA 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
0014FC 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
0014FE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
001500 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
001502 0104               M         BANKSEL SSR_DATA_BANK
001504 0E00               M          MOVLW  0
001506 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
001508 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
00150A 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
00150C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
00150E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         
001510                    M LLIM_END_35:
001510 010C               M         BANKSEL QUIZSHOW_DATA
  00000024                M LLIM_N  ++
                      01023           LOCAL_LIGHT_INDICATOR BTN_IDX_X3, CHAN_X3G, CHAN_X3R
001512 010C               M         BANKSEL QUIZSHOW_DATA
001514 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_LOCKED, BANKED
001516 D???               M         BRA     LLIM_NOT_LOCKED_36
                          M 
                          M         SET_SSR_OFF CHAN_X3G
                          M          SET_SSR_VALUE CHAN_X3G, 0
001518 0104               M         BANKSEL SSR_DATA_BANK
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00151A 0E00               M          MOVLW  0
00151C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3G, BANKED
00151E 6B00               M          CLRF   SSR_00_STEP+CHAN_X3G, BANKED
001520 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3G, BANKED
001522 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3G, BANKED
001524 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X3R
                          M          SET_SSR_PATTERN CHAN_X3R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
001526 0104               M         BANKSEL SSR_DATA_BANK
001528 0E00               M          MOVLW  0
00152A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
00152C 0E04               M          MOVLW  4
00152E 6F00               M          MOVWF  SSR_00_STEP+CHAN_X3R, BANKED
001530 0E01               M          MOVLW  1
001532 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X3R, BANKED
001534 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X3R, BANKED
001536 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
001538 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X3R, BANKED
00153A D???               M         BRA     LLIM_END_36
                          M 
00153C                    M LLIM_NOT_LOCKED_36:
00153C A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_MASKED, BANKED
00153E B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_PRESSED, BANKED
001540 D???               M         BRA     LLIM_OFF_36
001542 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
001544 D???               M         BRA     LLIM_OFF_36
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X3R
                          M          SET_SSR_VALUE CHAN_X3R, 0
001546 0104               M         BANKSEL SSR_DATA_BANK
001548 0E00               M          MOVLW  0
00154A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
00154C 6B00               M          CLRF   SSR_00_STEP+CHAN_X3R, BANKED
00154E 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3R, BANKED
001550 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3R, BANKED
001552 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3R, BANKED
                          M         SET_SSR_STEADY CHAN_X3G
                          M          SET_SSR_VALUE CHAN_X3G, 255
001554 0104               M         BANKSEL SSR_DATA_BANK
001556 0EFF               M          MOVLW  255
001558 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3G, BANKED
00155A 6B00               M          CLRF   SSR_00_STEP+CHAN_X3G, BANKED
00155C 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3G, BANKED
00155E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3G, BANKED
001560 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3G, BANKED
001562 D???               M         BRA     LLIM_END_36
                          M 
001564                    M LLIM_OFF_36:
                          M         SET_SSR_OFF CHAN_X3G
                          M          SET_SSR_VALUE CHAN_X3G, 0
001564 0104               M         BANKSEL SSR_DATA_BANK
001566 0E00               M          MOVLW  0
001568 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3G, BANKED
00156A 6B00               M          CLRF   SSR_00_STEP+CHAN_X3G, BANKED
00156C 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3G, BANKED
00156E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3G, BANKED
001570 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3G, BANKED
                          M         SET_SSR_OFF CHAN_X3R
                          M          SET_SSR_VALUE CHAN_X3R, 0
001572 0104               M         BANKSEL SSR_DATA_BANK
001574 0E00               M          MOVLW  0
001576 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
001578 6B00               M          CLRF   SSR_00_STEP+CHAN_X3R, BANKED
00157A 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3R, BANKED
00157C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3R, BANKED
00157E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3R, BANKED
                          M         
001580                    M LLIM_END_36:
001580 010C               M         BANKSEL QUIZSHOW_DATA
  00000025                M LLIM_N  ++
                      01024           LOCAL_LIGHT_INDICATOR BTN_IDX_L3, CHAN_L3R, CHAN_L3R
001582 010C               M         BANKSEL QUIZSHOW_DATA
001584 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_LOCKED, BANKED
001586 D???               M         BRA     LLIM_NOT_LOCKED_37
                          M 
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
001588 0104               M         BANKSEL SSR_DATA_BANK
00158A 0E00               M          MOVLW  0
00158C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
00158E 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
001590 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
001592 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
001594 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         SET_SSR_RAPID_FADE CHAN_L3R
                          M          SET_SSR_PATTERN CHAN_L3R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
001596 0104               M         BANKSEL SSR_DATA_BANK
001598 0E00               M          MOVLW  0
00159A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
00159C 0E04               M          MOVLW  4
00159E 6F00               M          MOVWF  SSR_00_STEP+CHAN_L3R, BANKED
0015A0 0E01               M          MOVLW  1
0015A2 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L3R, BANKED
0015A4 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L3R, BANKED
0015A6 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0015A8 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L3R, BANKED
0015AA D???               M         BRA     LLIM_END_37
                          M 
0015AC                    M LLIM_NOT_LOCKED_37:
0015AC A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_MASKED, BANKED
0015AE B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_PRESSED, BANKED
0015B0 D???               M         BRA     LLIM_OFF_37
0015B2 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0015B4 D???               M         BRA     LLIM_OFF_37
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
0015B6 0104               M         BANKSEL SSR_DATA_BANK
0015B8 0E00               M          MOVLW  0
0015BA 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
0015BC 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
0015BE 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
0015C0 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
0015C2 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         SET_SSR_STEADY CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 255
0015C4 0104               M         BANKSEL SSR_DATA_BANK
0015C6 0EFF               M          MOVLW  255
0015C8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
0015CA 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
0015CC 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
0015CE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
0015D0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
0015D2 D???               M         BRA     LLIM_END_37
                          M 
0015D4                    M LLIM_OFF_37:
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
0015D4 0104               M         BANKSEL SSR_DATA_BANK
0015D6 0E00               M          MOVLW  0
0015D8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
0015DA 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
0015DC 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
0015DE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
0015E0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
0015E2 0104               M         BANKSEL SSR_DATA_BANK
0015E4 0E00               M          MOVLW  0
0015E6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
0015E8 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
0015EA 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
0015EC 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
0015EE 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         
0015F0                    M LLIM_END_37:
0015F0 010C               M         BANKSEL QUIZSHOW_DATA
  00000026                M LLIM_N  ++
                      01025           LOCAL_LIGHT_INDICATOR BTN_IDX_X4, CHAN_X4G, CHAN_X4R
0015F2 010C               M         BANKSEL QUIZSHOW_DATA
0015F4 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_LOCKED, BANKED
0015F6 D???               M         BRA     LLIM_NOT_LOCKED_38
                          M 
                          M         SET_SSR_OFF CHAN_X4G
                          M          SET_SSR_VALUE CHAN_X4G, 0
0015F8 0104               M         BANKSEL SSR_DATA_BANK
0015FA 0E00               M          MOVLW  0
0015FC 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4G, BANKED
0015FE 6B00               M          CLRF   SSR_00_STEP+CHAN_X4G, BANKED
001600 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4G, BANKED
001602 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4G, BANKED
001604 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X4R
                          M          SET_SSR_PATTERN CHAN_X4R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
001606 0104               M         BANKSEL SSR_DATA_BANK
001608 0E00               M          MOVLW  0
00160A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
00160C 0E04               M          MOVLW  4
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00160E 6F00               M          MOVWF  SSR_00_STEP+CHAN_X4R, BANKED
001610 0E01               M          MOVLW  1
001612 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X4R, BANKED
001614 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X4R, BANKED
001616 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
001618 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X4R, BANKED
00161A D???               M         BRA     LLIM_END_38
                          M 
00161C                    M LLIM_NOT_LOCKED_38:
00161C A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_MASKED, BANKED
00161E B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_PRESSED, BANKED
001620 D???               M         BRA     LLIM_OFF_38
001622 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
001624 D???               M         BRA     LLIM_OFF_38
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X4R
                          M          SET_SSR_VALUE CHAN_X4R, 0
001626 0104               M         BANKSEL SSR_DATA_BANK
001628 0E00               M          MOVLW  0
00162A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
00162C 6B00               M          CLRF   SSR_00_STEP+CHAN_X4R, BANKED
00162E 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4R, BANKED
001630 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4R, BANKED
001632 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4R, BANKED
                          M         SET_SSR_STEADY CHAN_X4G
                          M          SET_SSR_VALUE CHAN_X4G, 255
001634 0104               M         BANKSEL SSR_DATA_BANK
001636 0EFF               M          MOVLW  255
001638 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4G, BANKED
00163A 6B00               M          CLRF   SSR_00_STEP+CHAN_X4G, BANKED
00163C 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4G, BANKED
00163E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4G, BANKED
001640 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4G, BANKED
001642 D???               M         BRA     LLIM_END_38
                          M 
001644                    M LLIM_OFF_38:
                          M         SET_SSR_OFF CHAN_X4G
                          M          SET_SSR_VALUE CHAN_X4G, 0
001644 0104               M         BANKSEL SSR_DATA_BANK
001646 0E00               M          MOVLW  0
001648 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4G, BANKED
00164A 6B00               M          CLRF   SSR_00_STEP+CHAN_X4G, BANKED
00164C 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4G, BANKED
00164E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4G, BANKED
001650 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4G, BANKED
                          M         SET_SSR_OFF CHAN_X4R
                          M          SET_SSR_VALUE CHAN_X4R, 0
001652 0104               M         BANKSEL SSR_DATA_BANK
001654 0E00               M          MOVLW  0
001656 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
001658 6B00               M          CLRF   SSR_00_STEP+CHAN_X4R, BANKED
00165A 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4R, BANKED
00165C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4R, BANKED
00165E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4R, BANKED
                          M         
001660                    M LLIM_END_38:
001660 010C               M         BANKSEL QUIZSHOW_DATA
  00000027                M LLIM_N  ++
                      01026           LOCAL_LIGHT_INDICATOR BTN_IDX_L4, CHAN_L4R, CHAN_L4R
001662 010C               M         BANKSEL QUIZSHOW_DATA
001664 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_LOCKED, BANKED
001666 D???               M         BRA     LLIM_NOT_LOCKED_39
                          M 
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
001668 0104               M         BANKSEL SSR_DATA_BANK
00166A 0E00               M          MOVLW  0
00166C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
00166E 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
001670 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
001672 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
001674 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L4R
                          M          SET_SSR_PATTERN CHAN_L4R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
001676 0104               M         BANKSEL SSR_DATA_BANK
001678 0E00               M          MOVLW  0
00167A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
00167C 0E04               M          MOVLW  4
00167E 6F00               M          MOVWF  SSR_00_STEP+CHAN_L4R, BANKED
001680 0E01               M          MOVLW  1
001682 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L4R, BANKED
001684 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L4R, BANKED
001686 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
001688 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L4R, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00168A D???               M         BRA     LLIM_END_39
                          M 
00168C                    M LLIM_NOT_LOCKED_39:
00168C A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_MASKED, BANKED
00168E B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_PRESSED, BANKED
001690 D???               M         BRA     LLIM_OFF_39
001692 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
001694 D???               M         BRA     LLIM_OFF_39
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
001696 0104               M         BANKSEL SSR_DATA_BANK
001698 0E00               M          MOVLW  0
00169A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
00169C 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
00169E 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
0016A0 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
0016A2 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         SET_SSR_STEADY CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 255
0016A4 0104               M         BANKSEL SSR_DATA_BANK
0016A6 0EFF               M          MOVLW  255
0016A8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
0016AA 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
0016AC 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
0016AE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
0016B0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
0016B2 D???               M         BRA     LLIM_END_39
                          M 
0016B4                    M LLIM_OFF_39:
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
0016B4 0104               M         BANKSEL SSR_DATA_BANK
0016B6 0E00               M          MOVLW  0
0016B8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
0016BA 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
0016BC 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
0016BE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
0016C0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
0016C2 0104               M         BANKSEL SSR_DATA_BANK
0016C4 0E00               M          MOVLW  0
0016C6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
0016C8 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
0016CA 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
0016CC 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
0016CE 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         
0016D0                    M LLIM_END_39:
0016D0 010C               M         BANKSEL QUIZSHOW_DATA
  00000028                M LLIM_N  ++
                      01027          ELSE
                      01028           ERROR "Incorrect chip type setting!"
                      01029          ENDIF
                      01030         ENDIF
0016D2 0012           01031         RETURN
                      01032 
0016D4                01033 QS_STOP_SCANNER:
0016D4 0004           01034         CLRWDT
0016D6 9000           01035         BCF     QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
                      01036         ; stop timer
0016D8 90CD           01037         BCF     T1CON, TMR1ON, ACCESS
0016DA 909D           01038         BCF     PIE1, TMR1IE, ACCESS
0016DC 909E           01039         BCF     PIR1, TMR1IF, ACCESS
                      01040         ; extinguish non-masked buttons
0016DE D???           01041         RCALL SET_ALL_BUTTON_LIGHTS
0016E0 0012           01042         RETURN
                      01043 
                      01044         END
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 74


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ABAT                              00000004
ABDEN                             00000000
ABDOVF                            00000007
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACQT0                             00000003
ACQT1                             00000004
ACQT2                             00000005
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCON2                            00000FC0
ADCS0                             00000000
ADCS1                             00000001
ADCS2                             00000002
ADDEN                             00000003
ADEN                              00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADON                              00000000
ADRES                             00000FC3
ADRESH                            00000FC4
ADRESL                            00000FC3
AN0                               00000000
AN1                               00000001
AN10                              00000000
AN2                               00000002
AN3                               00000003
AN4                               00000005
AN5                               00000000
AN6                               00000001
AN7                               00000002
AN8                               00000001
AN9                               00000004
B0CON                             00000E20
B0D0                              00000E26
B0D00                             00000000
B0D01                             00000001
B0D02                             00000002
B0D03                             00000003
B0D04                             00000004
B0D05                             00000005
B0D06                             00000006
B0D07                             00000007
B0D1                              00000E27
B0D10                             00000000
B0D11                             00000001
B0D12                             00000002
B0D13                             00000003
B0D14                             00000004
B0D15                             00000005
B0D16                             00000006
B0D17                             00000007
B0D2                              00000E28
B0D20                             00000000
B0D21                             00000001
B0D22                             00000002
B0D23                             00000003
B0D24                             00000004
B0D25                             00000005
B0D26                             00000006
B0D27                             00000007
B0D3                              00000E29
B0D30                             00000000
B0D31                             00000001
B0D32                             00000002
B0D33                             00000003
B0D34                             00000004
B0D35                             00000005
B0D36                             00000006
B0D37                             00000007
B0D4                              00000E2A
B0D40                             00000000
B0D41                             00000001
B0D42                             00000002
B0D43                             00000003
B0D44                             00000004
B0D45                             00000005
B0D46                             00000006
B0D47                             00000007
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 75


SYMBOL TABLE
  LABEL                             VALUE 

B0D5                              00000E2B
B0D50                             00000000
B0D51                             00000001
B0D52                             00000002
B0D53                             00000003
B0D54                             00000004
B0D55                             00000005
B0D56                             00000006
B0D57                             00000007
B0D6                              00000E2C
B0D60                             00000000
B0D61                             00000001
B0D62                             00000002
B0D63                             00000003
B0D64                             00000004
B0D65                             00000005
B0D66                             00000006
B0D67                             00000007
B0D7                              00000E2D
B0D70                             00000000
B0D71                             00000001
B0D72                             00000002
B0D73                             00000003
B0D74                             00000004
B0D75                             00000005
B0D76                             00000006
B0D77                             00000007
B0DLC                             00000E25
B0EIDH                            00000E23
B0EIDL                            00000E24
B0IE                              00000002
B0SIDH                            00000E21
B0SIDL                            00000E22
B0TXEN                            00000002
B1CON                             00000E30
B1D0                              00000E36
B1D00                             00000000
B1D01                             00000001
B1D02                             00000002
B1D03                             00000003
B1D04                             00000004
B1D05                             00000005
B1D06                             00000006
B1D07                             00000007
B1D1                              00000E37
B1D10                             00000000
B1D11                             00000001
B1D12                             00000002
B1D13                             00000003
B1D14                             00000004
B1D15                             00000005
B1D16                             00000006
B1D17                             00000007
B1D2                              00000E38
B1D20                             00000000
B1D21                             00000001
B1D22                             00000002
B1D23                             00000003
B1D24                             00000004
B1D25                             00000005
B1D26                             00000006
B1D27                             00000007
B1D3                              00000E39
B1D30                             00000000
B1D31                             00000001
B1D32                             00000002
B1D33                             00000003
B1D34                             00000004
B1D35                             00000005
B1D36                             00000006
B1D37                             00000007
B1D4                              00000E3A
B1D40                             00000000
B1D41                             00000001
B1D42                             00000002
B1D43                             00000003
B1D44                             00000004
B1D45                             00000005
B1D46                             00000006
B1D47                             00000007
B1D5                              00000E3B
B1D50                             00000000
B1D51                             00000001
B1D52                             00000002
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 76


SYMBOL TABLE
  LABEL                             VALUE 

B1D53                             00000003
B1D54                             00000004
B1D55                             00000005
B1D56                             00000006
B1D57                             00000007
B1D6                              00000E3C
B1D60                             00000000
B1D61                             00000001
B1D62                             00000002
B1D63                             00000003
B1D64                             00000004
B1D65                             00000005
B1D66                             00000006
B1D67                             00000007
B1D7                              00000E3D
B1D70                             00000000
B1D71                             00000001
B1D72                             00000002
B1D73                             00000003
B1D74                             00000004
B1D75                             00000005
B1D76                             00000006
B1D77                             00000007
B1DLC                             00000E35
B1EIDH                            00000E33
B1EIDL                            00000E34
B1IE                              00000003
B1SIDH                            00000E31
B1SIDL                            00000E32
B1TXEN                            00000003
B2CON                             00000E40
B2D0                              00000E46
B2D00                             00000000
B2D01                             00000001
B2D02                             00000002
B2D03                             00000003
B2D04                             00000004
B2D05                             00000005
B2D06                             00000006
B2D07                             00000007
B2D1                              00000E47
B2D10                             00000000
B2D11                             00000001
B2D12                             00000002
B2D13                             00000003
B2D14                             00000004
B2D15                             00000005
B2D16                             00000006
B2D17                             00000007
B2D2                              00000E48
B2D20                             00000000
B2D21                             00000001
B2D22                             00000002
B2D23                             00000003
B2D24                             00000004
B2D25                             00000005
B2D26                             00000006
B2D27                             00000007
B2D3                              00000E49
B2D30                             00000000
B2D31                             00000001
B2D32                             00000002
B2D33                             00000003
B2D34                             00000004
B2D35                             00000005
B2D36                             00000006
B2D37                             00000007
B2D4                              00000E4A
B2D40                             00000000
B2D41                             00000001
B2D42                             00000002
B2D43                             00000003
B2D44                             00000004
B2D45                             00000005
B2D46                             00000006
B2D47                             00000007
B2D5                              00000E4B
B2D50                             00000000
B2D51                             00000001
B2D52                             00000002
B2D53                             00000003
B2D54                             00000004
B2D55                             00000005
B2D56                             00000006
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 77


SYMBOL TABLE
  LABEL                             VALUE 

B2D57                             00000007
B2D6                              00000E4C
B2D60                             00000000
B2D61                             00000001
B2D62                             00000002
B2D63                             00000003
B2D64                             00000004
B2D65                             00000005
B2D66                             00000006
B2D67                             00000007
B2D7                              00000E4D
B2D70                             00000000
B2D71                             00000001
B2D72                             00000002
B2D73                             00000003
B2D74                             00000004
B2D75                             00000005
B2D76                             00000006
B2D77                             00000007
B2DLC                             00000E45
B2EIDH                            00000E43
B2EIDL                            00000E44
B2IE                              00000004
B2SIDH                            00000E41
B2SIDL                            00000E42
B2TXEN                            00000004
B3CON                             00000E50
B3D0                              00000E56
B3D00                             00000000
B3D01                             00000001
B3D02                             00000002
B3D03                             00000003
B3D04                             00000004
B3D05                             00000005
B3D06                             00000006
B3D07                             00000007
B3D1                              00000E57
B3D10                             00000000
B3D11                             00000001
B3D12                             00000002
B3D13                             00000003
B3D14                             00000004
B3D15                             00000005
B3D16                             00000006
B3D17                             00000007
B3D2                              00000E58
B3D20                             00000000
B3D21                             00000001
B3D22                             00000002
B3D23                             00000003
B3D24                             00000004
B3D25                             00000005
B3D26                             00000006
B3D27                             00000007
B3D3                              00000E59
B3D30                             00000000
B3D31                             00000001
B3D32                             00000002
B3D33                             00000003
B3D34                             00000004
B3D35                             00000005
B3D36                             00000006
B3D37                             00000007
B3D4                              00000E5A
B3D40                             00000000
B3D41                             00000001
B3D42                             00000002
B3D43                             00000003
B3D44                             00000004
B3D45                             00000005
B3D46                             00000006
B3D47                             00000007
B3D5                              00000E5B
B3D50                             00000000
B3D51                             00000001
B3D52                             00000002
B3D53                             00000003
B3D54                             00000004
B3D55                             00000005
B3D56                             00000006
B3D57                             00000007
B3D6                              00000E5C
B3D60                             00000000
B3D61                             00000001
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 78


SYMBOL TABLE
  LABEL                             VALUE 

B3D62                             00000002
B3D63                             00000003
B3D64                             00000004
B3D65                             00000005
B3D66                             00000006
B3D67                             00000007
B3D7                              00000E5D
B3D70                             00000000
B3D71                             00000001
B3D72                             00000002
B3D73                             00000003
B3D74                             00000004
B3D75                             00000005
B3D76                             00000006
B3D77                             00000007
B3DLC                             00000E55
B3EIDH                            00000E53
B3EIDL                            00000E54
B3IE                              00000005
B3SIDH                            00000E51
B3SIDL                            00000E52
B3TXEN                            00000005
B46D77                            00000007
B4CON                             00000E60
B4D0                              00000E66
B4D00                             00000000
B4D01                             00000001
B4D02                             00000002
B4D03                             00000003
B4D04                             00000004
B4D05                             00000005
B4D06                             00000006
B4D07                             00000007
B4D1                              00000E67
B4D10                             00000000
B4D11                             00000001
B4D12                             00000002
B4D13                             00000003
B4D14                             00000004
B4D15                             00000005
B4D16                             00000006
B4D17                             00000007
B4D2                              00000E68
B4D20                             00000000
B4D21                             00000001
B4D22                             00000002
B4D23                             00000003
B4D24                             00000004
B4D25                             00000005
B4D26                             00000006
B4D27                             00000007
B4D3                              00000E69
B4D30                             00000000
B4D31                             00000001
B4D32                             00000002
B4D33                             00000003
B4D34                             00000004
B4D35                             00000005
B4D36                             00000006
B4D37                             00000007
B4D4                              00000E6A
B4D40                             00000000
B4D41                             00000001
B4D42                             00000002
B4D43                             00000003
B4D44                             00000004
B4D45                             00000005
B4D46                             00000006
B4D47                             00000007
B4D5                              00000E6B
B4D50                             00000000
B4D51                             00000001
B4D52                             00000002
B4D53                             00000003
B4D54                             00000004
B4D55                             00000005
B4D56                             00000006
B4D57                             00000007
B4D6                              00000E6C
B4D60                             00000000
B4D61                             00000001
B4D62                             00000002
B4D63                             00000003
B4D64                             00000004
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 79


SYMBOL TABLE
  LABEL                             VALUE 

B4D65                             00000005
B4D66                             00000006
B4D67                             00000007
B4D7                              00000E6D
B4D70                             00000000
B4D71                             00000001
B4D72                             00000002
B4D73                             00000003
B4D74                             00000004
B4D75                             00000005
B4D76                             00000006
B4D77                             00000007
B4DLC                             00000E65
B4EIDH                            00000E63
B4EIDL                            00000E64
B4IE                              00000006
B4SIDH                            00000E61
B4SIDL                            00000E62
B4TXEN                            00000006
B57D07                            00000007
B57D23                            00000003
B5CON                             00000E70
B5D0                              00000E76
B5D00                             00000000
B5D01                             00000001
B5D02                             00000002
B5D03                             00000003
B5D04                             00000004
B5D05                             00000005
B5D06                             00000006
B5D07                             00000007
B5D1                              00000E77
B5D10                             00000000
B5D11                             00000001
B5D12                             00000002
B5D13                             00000003
B5D14                             00000004
B5D15                             00000005
B5D16                             00000006
B5D17                             00000007
B5D2                              00000E78
B5D20                             00000000
B5D21                             00000001
B5D22                             00000002
B5D23                             00000003
B5D24                             00000004
B5D25                             00000005
B5D26                             00000006
B5D27                             00000007
B5D3                              00000E79
B5D30                             00000000
B5D31                             00000001
B5D32                             00000002
B5D33                             00000003
B5D34                             00000004
B5D35                             00000005
B5D36                             00000006
B5D37                             00000007
B5D4                              00000E7A
B5D40                             00000000
B5D41                             00000001
B5D42                             00000002
B5D43                             00000003
B5D44                             00000004
B5D45                             00000005
B5D46                             00000006
B5D47                             00000007
B5D5                              00000E7B
B5D50                             00000000
B5D51                             00000001
B5D52                             00000002
B5D53                             00000003
B5D54                             00000004
B5D55                             00000005
B5D56                             00000006
B5D57                             00000007
B5D6                              00000E7C
B5D60                             00000000
B5D61                             00000001
B5D62                             00000002
B5D63                             00000003
B5D64                             00000004
B5D65                             00000005
B5D66                             00000006
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 80


SYMBOL TABLE
  LABEL                             VALUE 

B5D67                             00000007
B5D7                              00000E7D
B5D70                             00000000
B5D71                             00000001
B5D72                             00000002
B5D73                             00000003
B5D74                             00000004
B5D75                             00000005
B5D76                             00000006
B5D77                             00000007
B5DLC                             00000E75
B5EIDH                            00000E73
B5EIDL                            00000E74
B5IE                              00000007
B5SIDH                            00000E71
B5SIDL                            00000E72
B5TXEN                            00000007
BANKED                            00000001
BAUDCON                           00000FB8
BAUDCTL                           00000FB8
BCLIE                             00000003
BCLIF                             00000003
BCLIP                             00000003
BF                                00000000
BGST                              00000005
BIE0                              00000DFA
BIT_0                             00000002
BIT_1                             00000001
BIT_10                            00000001
BIT_11                            00000000
BIT_12                            00000007
BIT_13                            00000006
BIT_14                            00000005
BIT_15                            00000001
BIT_16                            00000000
BIT_17                            00000003
BIT_18                            00000001
BIT_19                            00000002
BIT_2                             00000000
BIT_3                             00000002
BIT_4                             00000007
BIT_5                             00000006
BIT_6                             00000005
BIT_7                             00000004
BIT_8                             00000003
BIT_9                             00000002
BIT_FADE_CYCLE                    00000020
BIT_FADE_DOWN                     00000040
BIT_FADE_UP                       00000080
BIT_L0                            00000002
BIT_L1                            00000000
BIT_L2                            00000005
BIT_L3                            00000000
BIT_L4                            00000005
BIT_MAX_OFF_TIME                  00000010
BIT_RX                            00000007
BIT_T_R                           00000003
BIT_X0                            00000003
BIT_X1                            00000001
BIT_X2                            00000004
BIT_X3                            00000004
BIT_X4                            00000004
BOR                               00000000
BRG16                             00000003
BRGCON1                           00000F70
BRGCON2                           00000F71
BRGCON3                           00000F72
BRGH                              00000002
BRP0                              00000000
BRP1                              00000001
BRP2                              00000002
BRP3                              00000003
BRP4                              00000004
BRP5                              00000005
BSEL0                             00000DF8
BSR                               00000FE0
BTN_FLG_ACTIVE                    00000003
BTN_FLG_LOCKED                    00000002
BTN_FLG_MASKED                    00000001
BTN_FLG_PRESSED                   00000000
BTN_IDX_L0                        00000001
BTN_IDX_L1                        00000003
BTN_IDX_L2                        00000005
BTN_IDX_L3                        00000007
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 81


SYMBOL TABLE
  LABEL                             VALUE 

BTN_IDX_L4                        00000009
BTN_IDX_X0                        00000000
BTN_IDX_X1                        00000002
BTN_IDX_X2                        00000004
BTN_IDX_X3                        00000006
BTN_IDX_X4                        00000008
BTN_X0_DEB_TMR                    00000C60
BTN_X0_FLAGS                      00000C40
BTN_X0_LOCKTMR                    00000C50
BTN_X0_TIME_H                     00000C20
BTN_X0_TIME_L                     00000C30
BTN_X0_TIME_T                     00000C00
BTN_X0_TIME_U                     00000C10
C                                 00000000
C1INA                             00000001
C1INB                             00000000
C1INV                             00000004
C1OUT                             00000006
C2INA                             00000003
C2INB                             00000002
C2INV                             00000005
C2OUT                             00000007
CANCAP                            00000004
CANCON                            00000F6F
CANCON_RO0                        00000F5F
CANCON_RO1                        00000F4F
CANCON_RO2                        00000F3F
CANCON_RO3                        00000F2F
CANCON_RO4                        00000E7F
CANCON_RO5                        00000E6F
CANCON_RO6                        00000E5F
CANCON_RO7                        00000E4F
CANCON_RO8                        00000E3F
CANCON_RO9                        00000E2F
CANRX                             00000003
CANSTAT                           00000F6E
CANSTAT_RO0                       00000F5E
CANSTAT_RO1                       00000F4E
CANSTAT_RO2                       00000F3E
CANSTAT_RO3                       00000F2E
CANSTAT_RO4                       00000E7E
CANSTAT_RO5                       00000E6E
CANSTAT_RO6                       00000E5E
CANSTAT_RO7                       00000E4E
CANSTAT_RO8                       00000E3E
CANSTAT_RO9                       00000E2E
CANTX                             00000002
CB_IDX                            00000010
CCP1                              00000002
CCP1CON                           00000FBD
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCPR1                             00000FBE
CCPR1H                            00000FBF
CCPR1L                            00000FBE
CFGS                              00000006
CHAN_L0R                          00000003
CHAN_L1R                          00000007
CHAN_L2R                          0000000B
CHAN_L3R                          0000000F
CHAN_L4R                          00000013
CHAN_X0B                          00000002
CHAN_X0G                          00000001
CHAN_X0R                          00000000
CHAN_X1B                          00000006
CHAN_X1G                          00000005
CHAN_X1R                          00000004
CHAN_X2B                          0000000A
CHAN_X2G                          00000009
CHAN_X2R                          00000008
CHAN_X3B                          0000000E
CHAN_X3G                          0000000D
CHAN_X3R                          0000000C
CHAN_X4B                          00000012
CHAN_X4G                          00000011
CHAN_X4R                          00000010
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 82


SYMBOL TABLE
  LABEL                             VALUE 

CHS3                              00000005
CIOCON                            00000F73
CIS                               00000003
CK                                00000006
CKE                               00000006
CKP                               00000004
CLEAR_BUTTONS                     
CLKI                              00000007
CLKO                              00000006
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             00000FB4
CMIE                              00000006
CMIF                              00000006
CMIP                              00000006
COMSTAT                           00000F74
CREN                              00000004
CS                                00000002
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            00000FB5
CVREF_CVRCON                      00000004
CVREF_PORTA                       00000000
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
CVRSS                             00000004
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DDRA                              TRISA
DDRB                              TRISB
DDRC                              TRISC
DDRD                              TRISD
DDRE                              TRISE
DFLC0                             00000000
DFLC1                             00000001
DFLC2                             00000002
DFLC3                             00000003
DFLC4                             00000004
DLC0                              00000000
DLC1                              00000001
DLC2                              00000002
DLC3                              00000003
DONE                              00000001
D_A                               00000005
D_NOT_A                           00000005
ECANCON                           00000F77
ECCP1                             00000004
ECCP1AS                           00000FB6
ECCP1CON                          00000FBA
ECCP1DEL                          00000FB7
ECCP1IE                           00000000
ECCP1IF                           00000000
ECCP1IP                           00000000
ECCP1M0                           00000000
ECCP1M1                           00000001
ECCP1M2                           00000002
ECCP1M3                           00000003
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
ECCPR1                            00000FBB
ECCPR1H                           00000FBC
ECCPR1L                           00000FBB
EDC1B0                            00000004
EDC1B1                            00000005
EEADR                             00000FA9
EEADRH                            00000FAA
EECON1                            00000FA6
EECON2                            00000FA7
EEDATA                            00000FA8
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
EEPGD                             00000007
EICODE0                           00000000
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 83


SYMBOL TABLE
  LABEL                             VALUE 

EICODE1                           00000001
EICODE1_ICODE0                    00000001
EICODE2                           00000002
EICODE2_ICODE1                    00000002
EICODE3                           00000003
EICODE3_ICODE2                    00000003
EICODE4                           00000004
EID0                              00000000
EID1                              00000001
EID10                             00000002
EID11                             00000003
EID12                             00000004
EID13                             00000005
EID14                             00000006
EID15                             00000007
EID16                             00000000
EID17                             00000001
EID2                              00000002
EID3                              00000003
EID4                              00000004
EID5                              00000005
EID6                              00000006
EID7                              00000007
EID8                              00000000
EID9                              00000001
ENDRHI                            00000005
EPWM1M0                           00000006
EPWM1M1                           00000007
ERRIE                             00000005
ERRIF                             00000005
ERRIP                             00000005
EWARN                             00000000
EWIN0                             00000000
EWIN1                             00000001
EWIN2                             00000002
EWIN3                             00000003
EWIN4                             00000004
EXID                              00000003
EXIDE                             00000003
EXIDEN                            00000003
F                                 00000005
F0BP_0                            00000000
F0BP_1                            00000001
F0BP_2                            00000002
F0BP_3                            00000003
F10BP_0                           00000000
F10BP_1                           00000001
F10BP_2                           00000002
F10BP_3                           00000003
F11BP_0                           00000004
F11BP_1                           00000005
F11BP_2                           00000006
F11BP_3                           00000007
F12BP_0                           00000000
F12BP_1                           00000001
F12BP_2                           00000002
F12BP_3                           00000003
F13BP_0                           00000004
F13BP_1                           00000005
F13BP_2                           00000006
F13BP_3                           00000007
F14BP_0                           00000000
F14BP_1                           00000001
F14BP_2                           00000002
F14BP_3                           00000003
F15BP_0                           00000004
F15BP_1                           00000005
F15BP_2                           00000006
F15BP_3                           00000007
F1BP_0                            00000004
F1BP_1                            00000005
F1BP_2                            00000006
F1BP_3                            00000007
F2BP_0                            00000000
F2BP_1                            00000001
F2BP_2                            00000002
F2BP_3                            00000003
F3BP_0                            00000004
F3BP_1                            00000005
F3BP_2                            00000006
F3BP_3                            00000007
F4BP_0                            00000000
F4BP_1                            00000001
F4BP_2                            00000002
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 84


SYMBOL TABLE
  LABEL                             VALUE 

F4BP_3                            00000003
F5BP_0                            00000004
F5BP_1                            00000005
F5BP_2                            00000006
F5BP_3                            00000007
F6BP_0                            00000000
F6BP_1                            00000001
F6BP_2                            00000002
F6BP_3                            00000003
F7BP_0                            00000004
F7BP_1                            00000005
F7BP_2                            00000006
F7BP_3                            00000007
F8BP_0                            00000000
F8BP_1                            00000001
F8BP_2                            00000002
F8BP_3                            00000003
F9BP_0                            00000004
F9BP_1                            00000005
F9BP_2                            00000006
F9BP_3                            00000007
FADE_CYCLE                        00000005
FADE_DOWN                         00000006
FADE_UP                           00000007
FAST                              00000001
FERR                              00000002
FIFOEMPTY                         00000007
FIFOMWIE                          00000000
FIFOWM                            00000005
FIFOWMIE                          00000000
FIFOWMIF                          00000000
FIFOWMIP                          00000000
FIL0_0                            00000000
FIL0_1                            00000001
FIL10_0                           00000004
FIL10_1                           00000005
FIL11_0                           00000006
FIL11_1                           00000007
FIL12_0                           00000000
FIL12_1                           00000001
FIL13_0                           00000002
FIL13_1                           00000003
FIL14_0                           00000004
FIL14_1                           00000005
FIL15_0                           00000006
FIL15_1                           00000007
FIL1_0                            00000002
FIL1_1                            00000003
FIL2_0                            00000004
FIL2_1                            00000005
FIL3_0                            00000006
FIL3_1                            00000007
FIL4_0                            00000000
FIL4_1                            00000001
FIL5_0                            00000002
FIL5_1                            00000003
FIL6_0                            00000004
FIL6_1                            00000005
FIL7_0                            00000006
FIL7_1                            00000007
FIL8_0                            00000000
FIL8_1                            00000001
FIL9_0                            00000002
FIL9_1                            00000003
FILHIT0                           00000000
FILHIT0_TXPRI0                    00000000
FILHIT1                           00000001
FILHIT1_TXPRI1                    00000001
FILHIT2                           00000002
FILHIT2_RTREN                     00000002
FILHIT3                           00000003
FILHIT3_TXREQ                     00000003
FILHIT4                           00000004
FILHIT4_TXERR                     00000004
FLC0                              00000000
FLC1                              00000001
FLC2                              00000002
FLC3                              00000003
FLC4                              00000004
FLT0                              00000000
FP0                               00000000
FP1                               00000001
FP2                               00000002
FP3                               00000003
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 85


SYMBOL TABLE
  LABEL                             VALUE 

FREE                              00000004
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
GCEN                              00000007
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GIE_GIEH                          00000007
GO                                00000001
GO_DONE                           00000001
GO_NOT_DONE                       00000001
HAS_ACTIVE                        00000000
HAS_OPTION                        00000000
HAS_POWER_CTRL                    00000000
HAS_SENSORS                       00000000
HAS_STATUS_LEDS                   00000000
HAS_T_R                           00000001
HLVDCON                           00000FD2
HLVDEN                            00000004
HLVDIE                            00000002
HLVDIF                            00000002
HLVDIN                            00000005
HLVDIP                            00000002
HLVDL0                            00000000
HLVDL1                            00000001
HLVDL2                            00000002
HLVDL3                            00000003
I2C_DAT                           00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
ICODE0                            00000000
ICODE1                            00000001
ICODE2                            00000002
ICODE3                            00000003
ICODE4                            00000004
IDLEN                             00000007
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1E                             00000003
INT1F                             00000000
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT1P                             00000006
INT2                              00000002
INT2E                             00000004
INT2F                             00000001
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INT2P                             00000007
INTCON                            00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
INTSCR                            00000007
INTSRC                            00000007
IOFS                              00000002
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IPR3                              00000FA5
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 86


SYMBOL TABLE
  LABEL                             VALUE 

IRVST                             00000005
IRXIE                             00000007
IRXIF                             00000007
IRXIP                             00000007
IVRST                             00000005
JTOFF                             00000001
JTOFF_FILHIT1                     00000001
KBI0                              00000004
KBI1                              00000005
KBI2                              00000006
KBI3                              00000007
LATA                              00000F89
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA3                             00000003
LATA4                             00000004
LATA5                             00000005
LATA6                             00000006
LATA7                             00000007
LATB                              00000F8A
LATB0                             00000000
LATB1                             00000001
LATB2                             00000002
LATB3                             00000003
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              00000F8B
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC3                             00000003
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
LATD                              00000F8C
LATD0                             00000000
LATD1                             00000001
LATD2                             00000002
LATD3                             00000003
LATD4                             00000004
LATD5                             00000005
LATD6                             00000006
LATD7                             00000007
LATE                              00000F8D
LATE0                             00000000
LATE1                             00000001
LATE2                             00000002
LLIM_END_0                        000001A6
LLIM_END_1                        0000022A
LLIM_END_10                       00000728
LLIM_END_11                       000007B4
LLIM_END_12                       0000084E
LLIM_END_13                       000008D2
LLIM_END_14                       0000095E
LLIM_END_15                       000009F8
LLIM_END_16                       00000A7C
LLIM_END_17                       00000B08
LLIM_END_18                       00000BA2
LLIM_END_19                       00000C26
LLIM_END_2                        000002B6
LLIM_END_20                       00000CB2
LLIM_END_21                       00000D4C
LLIM_END_22                       00000DD0
LLIM_END_23                       00000E5C
LLIM_END_24                       00000EF6
LLIM_END_25                       00000F7A
LLIM_END_26                       00001006
LLIM_END_27                       000010A0
LLIM_END_28                       00001124
LLIM_END_29                       000011B0
LLIM_END_3                        00000350
LLIM_END_30                       000012E0
LLIM_END_31                       00001350
LLIM_END_32                       000013C0
LLIM_END_33                       00001430
LLIM_END_34                       000014A0
LLIM_END_35                       00001510
LLIM_END_36                       00001580
LLIM_END_37                       000015F0
LLIM_END_38                       00001660
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 87


SYMBOL TABLE
  LABEL                             VALUE 

LLIM_END_39                       000016D0
LLIM_END_4                        000003D4
LLIM_END_5                        00000460
LLIM_END_6                        000004FA
LLIM_END_7                        0000057E
LLIM_END_8                        0000060A
LLIM_END_9                        000006A4
LLIM_N                            00000028
LLIM_NOT_LOCKED_0                 00000162
LLIM_NOT_LOCKED_1                 000001E6
LLIM_NOT_LOCKED_10                000006E4
LLIM_NOT_LOCKED_11                00000770
LLIM_NOT_LOCKED_12                0000080A
LLIM_NOT_LOCKED_13                0000088E
LLIM_NOT_LOCKED_14                0000091A
LLIM_NOT_LOCKED_15                000009B4
LLIM_NOT_LOCKED_16                00000A38
LLIM_NOT_LOCKED_17                00000AC4
LLIM_NOT_LOCKED_18                00000B5E
LLIM_NOT_LOCKED_19                00000BE2
LLIM_NOT_LOCKED_2                 00000272
LLIM_NOT_LOCKED_20                00000C6E
LLIM_NOT_LOCKED_21                00000D08
LLIM_NOT_LOCKED_22                00000D8C
LLIM_NOT_LOCKED_23                00000E18
LLIM_NOT_LOCKED_24                00000EB2
LLIM_NOT_LOCKED_25                00000F36
LLIM_NOT_LOCKED_26                00000FC2
LLIM_NOT_LOCKED_27                0000105C
LLIM_NOT_LOCKED_28                000010E0
LLIM_NOT_LOCKED_29                0000116C
LLIM_NOT_LOCKED_3                 0000030C
LLIM_NOT_LOCKED_30                0000129C
LLIM_NOT_LOCKED_31                0000130C
LLIM_NOT_LOCKED_32                0000137C
LLIM_NOT_LOCKED_33                000013EC
LLIM_NOT_LOCKED_34                0000145C
LLIM_NOT_LOCKED_35                000014CC
LLIM_NOT_LOCKED_36                0000153C
LLIM_NOT_LOCKED_37                000015AC
LLIM_NOT_LOCKED_38                0000161C
LLIM_NOT_LOCKED_39                0000168C
LLIM_NOT_LOCKED_4                 00000390
LLIM_NOT_LOCKED_5                 0000041C
LLIM_NOT_LOCKED_6                 000004B6
LLIM_NOT_LOCKED_7                 0000053A
LLIM_NOT_LOCKED_8                 000005C6
LLIM_NOT_LOCKED_9                 00000660
LLIM_OFF_0                        0000018A
LLIM_OFF_1                        0000020E
LLIM_OFF_10                       0000070C
LLIM_OFF_11                       00000798
LLIM_OFF_12                       00000832
LLIM_OFF_13                       000008B6
LLIM_OFF_14                       00000942
LLIM_OFF_15                       000009DC
LLIM_OFF_16                       00000A60
LLIM_OFF_17                       00000AEC
LLIM_OFF_18                       00000B86
LLIM_OFF_19                       00000C0A
LLIM_OFF_2                        0000029A
LLIM_OFF_20                       00000C96
LLIM_OFF_21                       00000D30
LLIM_OFF_22                       00000DB4
LLIM_OFF_23                       00000E40
LLIM_OFF_24                       00000EDA
LLIM_OFF_25                       00000F5E
LLIM_OFF_26                       00000FEA
LLIM_OFF_27                       00001084
LLIM_OFF_28                       00001108
LLIM_OFF_29                       00001194
LLIM_OFF_3                        00000334
LLIM_OFF_30                       000012C4
LLIM_OFF_31                       00001334
LLIM_OFF_32                       000013A4
LLIM_OFF_33                       00001414
LLIM_OFF_34                       00001484
LLIM_OFF_35                       000014F4
LLIM_OFF_36                       00001564
LLIM_OFF_37                       000015D4
LLIM_OFF_38                       00001644
LLIM_OFF_39                       000016B4
LLIM_OFF_4                        000003B8
LLIM_OFF_5                        00000444
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 88


SYMBOL TABLE
  LABEL                             VALUE 

LLIM_OFF_6                        000004DE
LLIM_OFF_7                        00000562
LLIM_OFF_8                        000005EE
LLIM_OFF_9                        00000688
LOCAL_LIGHT_INDICATOR             
LUMOS_ARCH                        LUMOS_ARCH_4685
LUMOS_ARCH_14K50                  (0x1450)
LUMOS_ARCH_4685                   (0x4685)
LUMOS_CHIP_4CHANNEL               0x44
LUMOS_CHIP_MASTER                 0x41
LUMOS_CHIP_QSCC                   0x45
LUMOS_CHIP_QSRC                   0x46
LUMOS_CHIP_SLAVE                  0x42
LUMOS_CHIP_STANDALONE             0x43
LUMOS_CHIP_TYPE                   LUMOS_CHIP_QSRC
LUMOS_CONFIG_INC                  
LUMOS_INTERNAL                    0x58
LUMOS_SET_SSR_INC                 
LUMOS_SLICE_TIMER                 LUMOS_INTERNAL
LUMOS_ZC                          0x55
LVDCON                            00000FD2
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIN                             00000005
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
LVV0                              00000000
LVV1                              00000001
LVV2                              00000002
LVV3                              00000003
MAIN_DATA                         00000500
MAX_OFF_TIME                      00000004
MDSEL0                            00000006
MDSEL1                            00000007
MSEL0                             00000DF0
MSEL1                             00000DF1
MSEL2                             00000DF2
MSEL3                             00000DF3
N                                 00000004
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_CS                            00000002
NOT_DONE                          00000001
NOT_FIFOEMPTY                     00000007
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RD                            00000000
NOT_RI                            00000004
NOT_SS                            00000005
NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
NOT_TO                            00000003
NOT_W                             00000002
NOT_WR                            00000001
NOT_WRITE                         00000002
NUM_CHANNELS                      (.20)
N_BUTTONS                         00000010
OBF                               00000006
OERR                              00000001
OPMODE0                           00000005
OPMODE1                           00000006
OPMODE2                           00000007
OSC1                              00000007
OSC2                              00000006
OSCCON                            00000FD3
OSCFIE                            00000007
OSCFIF                            00000007
OSCFIP                            00000007
OSCTUNE                           00000F9B
OSTS                              00000003
OV                                00000003
P                                 00000004
P1A                               00000004
P1B                               00000005
P1C                               00000006
P1D                               00000007
PC                                00000FF9
PCFG0                             00000000
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 89


SYMBOL TABLE
  LABEL                             VALUE 

PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEIE_GIEL                         00000006
PEN                               00000002
PGC                               00000006
PGD                               00000007
PGM                               00000005
PIE1                              00000F9D
PIE2                              00000FA0
PIE3                              00000FA3
PIR1                              00000F9E
PIR2                              00000FA1
PIR3                              00000FA4
PLAT_0                            00000F8B
PLAT_1                            00000F8B
PLAT_10                           00000F8A
PLAT_11                           00000F8D
PLAT_12                           00000F8C
PLAT_13                           00000F8C
PLAT_14                           00000F8C
PLAT_15                           00000F8D
PLAT_16                           00000F8A
PLAT_17                           00000F8C
PLAT_18                           00000F8C
PLAT_19                           00000F8C
PLAT_2                            00000F8B
PLAT_3                            00000F8D
PLAT_4                            00000F8A
PLAT_5                            00000F8A
PLAT_6                            00000F8A
PLAT_7                            00000F8A
PLAT_8                            00000F8A
PLAT_9                            00000F8A
PLAT_T_R                          00000F8B
PLLEN                             00000006
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
PORTD                             00000F83
PORTE                             00000F84
PORT_L0                           00000F80
PORT_L1                           00000F80
PORT_L2                           00000F80
PORT_L3                           00000F83
PORT_L4                           00000F82
PORT_RX                           00000F82
PORT_T_R                          00000F82
PORT_X0                           00000F80
PORT_X1                           00000F80
PORT_X2                           00000F80
PORT_X3                           00000F82
PORT_X4                           00000F83
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PR2                               00000FCB
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PROD                              00000FF3
PRODH                             00000FF4
PRODL                             00000FF3
PRSEG0                            00000000
PRSEG1                            00000001
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 90


SYMBOL TABLE
  LABEL                             VALUE 

PRSEG2                            00000002
PRSEN                             00000007
PSA                               00000003
PSP0                              00000000
PSP1                              00000001
PSP2                              00000002
PSP3                              00000003
PSP4                              00000004
PSP5                              00000005
PSP6                              00000006
PSP7                              00000007
PSPIE                             00000007
PSPIF                             00000007
PSPIP                             00000007
PSPMODE                           00000004
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
QSCC_BITS_INC                     
QSCC_CMD5_START                   000011B6
QSCC_MAIN                         00000102
QSCC_PORT                         (1)
QSCC_START                        00000000
QS_BTN_TMR_T                      00000000
QS_BTN_TMR_U                      00000000
QS_FLAG_DOING120                  00000002
QS_FLAG_ON_120_S                  00000001
QS_FLAG_SCANNING                  00000000
QS_STOP_SCANNER                   000016D4
QUIZSHOW_DATA                     00000C00
QUIZSHOW_FLAGS                    00000000
QUIZSHOW_LCKTM                    00000C70
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RB0_B0DLC                         00000004
RB0_B1DLC                         00000004
RB0_B2DLC                         00000004
RB0_B3DLC                         00000004
RB0_B4DLC                         00000004
RB0_B5DLC                         00000004
RB0_DDRB                          00000000
RB0_PORTB                         00000000
RB0_RXB0DLC                       00000004
RB0_RXB1DLC                       00000004
RB0_TRISB                         00000000
RB1_B0DLC                         00000005
RB1_B1DLC                         00000005
RB1_B2DLC                         00000005
RB1_B3DLC                         00000005
RB1_B4DLC                         00000005
RB1_B5DLC                         00000005
RB1_DDRB                          00000001
RB1_PORTB                         00000001
RB1_RXB0DLC                       00000005
RB1_RXB1DLC                       00000005
RB1_TRISB                         00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RCEN                              00000003
RCIDL                             00000006
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 91


SYMBOL TABLE
  LABEL                             VALUE 

RCIE                              00000005
RCIF                              00000005
RCIP                              00000005
RCON                              00000FD0
RCREG                             00000FAE
RCSTA                             00000FAB
RD                                00000000
RD0                               00000000
RD1                               00000001
RD16                              00000007
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
RE3                               00000003
READ_WRITE                        00000002
REC0                              00000000
REC1                              00000001
REC2                              00000002
REC3                              00000003
REC4                              00000004
REC5                              00000005
REC6                              00000006
REC7                              00000007
REQOP0                            00000005
REQOP1                            00000006
REQOP2                            00000007
RESRB0                            00000004
RESRB1                            00000005
RI                                00000004
ROLE_MASTER                       (0)
ROLE_SLAVE                        (0)
ROLE_STANDALONE                   (1)
RSEN                              00000001
RTREN                             00000002
RTRRO                             00000005
RX                                00000007
RX9                               00000006
RX9D                              00000000
RXB0CON                           00000F60
RXB0D0                            00000F66
RXB0D00                           00000000
RXB0D01                           00000001
RXB0D02                           00000002
RXB0D03                           00000003
RXB0D04                           00000004
RXB0D05                           00000005
RXB0D06                           00000006
RXB0D07                           00000007
RXB0D1                            00000F67
RXB0D10                           00000000
RXB0D11                           00000001
RXB0D12                           00000002
RXB0D13                           00000003
RXB0D14                           00000004
RXB0D15                           00000005
RXB0D16                           00000006
RXB0D17                           00000007
RXB0D2                            00000F68
RXB0D20                           00000000
RXB0D21                           00000001
RXB0D22                           00000002
RXB0D23                           00000003
RXB0D24                           00000004
RXB0D25                           00000005
RXB0D26                           00000006
RXB0D27                           00000007
RXB0D3                            00000F69
RXB0D30                           00000000
RXB0D31                           00000001
RXB0D32                           00000002
RXB0D33                           00000003
RXB0D34                           00000004
RXB0D35                           00000005
RXB0D36                           00000006
RXB0D37                           00000007
RXB0D4                            00000F6A
RXB0D40                           00000000
RXB0D41                           00000001
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 92


SYMBOL TABLE
  LABEL                             VALUE 

RXB0D42                           00000002
RXB0D43                           00000003
RXB0D44                           00000004
RXB0D45                           00000005
RXB0D46                           00000006
RXB0D47                           00000007
RXB0D5                            00000F6B
RXB0D50                           00000000
RXB0D51                           00000001
RXB0D52                           00000002
RXB0D53                           00000003
RXB0D54                           00000004
RXB0D55                           00000005
RXB0D56                           00000006
RXB0D57                           00000007
RXB0D6                            00000F6C
RXB0D60                           00000000
RXB0D61                           00000001
RXB0D62                           00000002
RXB0D63                           00000003
RXB0D64                           00000004
RXB0D65                           00000005
RXB0D66                           00000006
RXB0D67                           00000007
RXB0D7                            00000F6D
RXB0D70                           00000000
RXB0D71                           00000001
RXB0D72                           00000002
RXB0D73                           00000003
RXB0D74                           00000004
RXB0D75                           00000005
RXB0D76                           00000006
RXB0D77                           00000007
RXB0DBEN                          00000002
RXB0DBEN_FILHIT2                  00000002
RXB0DLC                           00000F65
RXB0EIDH                          00000F63
RXB0EIDL                          00000F64
RXB0IE                            00000000
RXB0IF                            00000000
RXB0IP                            00000000
RXB0OVFL                          00000007
RXB0OVFL_NOT_FIFOEMPTY            00000007
RXB0SIDH                          00000F61
RXB0SIDL                          00000F62
RXB1CON                           00000F50
RXB1D0                            00000F56
RXB1D00                           00000000
RXB1D01                           00000001
RXB1D02                           00000002
RXB1D03                           00000003
RXB1D04                           00000004
RXB1D05                           00000005
RXB1D06                           00000006
RXB1D07                           00000007
RXB1D1                            00000F57
RXB1D10                           00000000
RXB1D11                           00000001
RXB1D12                           00000002
RXB1D13                           00000003
RXB1D14                           00000004
RXB1D15                           00000005
RXB1D16                           00000006
RXB1D17                           00000007
RXB1D2                            00000F58
RXB1D20                           00000000
RXB1D21                           00000001
RXB1D22                           00000002
RXB1D23                           00000003
RXB1D24                           00000004
RXB1D25                           00000005
RXB1D26                           00000006
RXB1D27                           00000007
RXB1D3                            00000F59
RXB1D30                           00000000
RXB1D31                           00000001
RXB1D32                           00000002
RXB1D33                           00000003
RXB1D34                           00000004
RXB1D35                           00000005
RXB1D36                           00000006
RXB1D37                           00000007
RXB1D4                            00000F5A
RXB1D40                           00000000
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 93


SYMBOL TABLE
  LABEL                             VALUE 

RXB1D41                           00000001
RXB1D42                           00000002
RXB1D43                           00000003
RXB1D44                           00000004
RXB1D45                           00000005
RXB1D46                           00000006
RXB1D47                           00000007
RXB1D5                            00000F5B
RXB1D50                           00000000
RXB1D51                           00000001
RXB1D52                           00000002
RXB1D53                           00000003
RXB1D54                           00000004
RXB1D55                           00000005
RXB1D56                           00000006
RXB1D57                           00000007
RXB1D6                            00000F5C
RXB1D60                           00000000
RXB1D61                           00000001
RXB1D62                           00000002
RXB1D63                           00000003
RXB1D64                           00000004
RXB1D65                           00000005
RXB1D66                           00000006
RXB1D67                           00000007
RXB1D7                            00000F5D
RXB1D70                           00000000
RXB1D71                           00000001
RXB1D72                           00000002
RXB1D73                           00000003
RXB1D74                           00000004
RXB1D75                           00000005
RXB1D76                           00000006
RXB1D77                           00000007
RXB1DLC                           00000F55
RXB1EIDH                          00000F53
RXB1EIDL                          00000F54
RXB1IE                            00000001
RXB1IF                            00000001
RXB1IP                            00000001
RXB1OVFL                          00000006
RXB1SIDH                          00000F51
RXB1SIDL                          00000F52
RXBODBEN                          00000002
RXBP                              00000003
RXBnIE                            00000001
RXBnIF                            00000001
RXBnIP                            00000001
RXBnOVFL                          00000006
RXERRCNT                          00000F75
RXF0EIDH                          00000F02
RXF0EIDL                          00000F03
RXF0EN                            00000000
RXF0SIDH                          00000F00
RXF0SIDL                          00000F01
RXF10EIDH                         00000D76
RXF10EIDL                         00000D77
RXF10EN                           00000002
RXF10SIDH                         00000D74
RXF10SIDL                         00000D75
RXF11EIDH                         00000D7A
RXF11EIDL                         00000D7B
RXF11EN                           00000003
RXF11SIDH                         00000D78
RXF11SIDL                         00000D79
RXF12EIDH                         00000D82
RXF12EIDL                         00000D83
RXF12EN                           00000004
RXF12SIDH                         00000D80
RXF12SIDL                         00000D81
RXF13EIDH                         00000D86
RXF13EIDL                         00000D87
RXF13EN                           00000005
RXF13SIDH                         00000D84
RXF13SIDL                         00000D85
RXF14EIDH                         00000D8A
RXF14EIDL                         00000D8B
RXF14EN                           00000006
RXF14SIDH                         00000D88
RXF14SIDL                         00000D89
RXF15EIDH                         00000D92
RXF15EIDL                         00000D93
RXF15EN                           00000007
RXF15SIDH                         00000D90
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 94


SYMBOL TABLE
  LABEL                             VALUE 

RXF15SIDL                         00000D91
RXF1EIDH                          00000F06
RXF1EIDL                          00000F07
RXF1EN                            00000001
RXF1SIDH                          00000F04
RXF1SIDL                          00000F05
RXF2EIDH                          00000F0A
RXF2EIDL                          00000F0B
RXF2EN                            00000002
RXF2SIDH                          00000F08
RXF2SIDL                          00000F09
RXF3EIDH                          00000F0E
RXF3EIDL                          00000F0F
RXF3EN                            00000003
RXF3SIDH                          00000F0C
RXF3SIDL                          00000F0D
RXF4EIDH                          00000F12
RXF4EIDL                          00000F13
RXF4EN                            00000004
RXF4SIDH                          00000F10
RXF4SIDL                          00000F11
RXF5EIDH                          00000F16
RXF5EIDL                          00000F17
RXF5EN                            00000005
RXF5SIDH                          00000F14
RXF5SIDL                          00000F15
RXF6EIDH                          00000D62
RXF6EIDL                          00000D63
RXF6EN                            00000006
RXF6SIDH                          00000D60
RXF6SIDL                          00000D61
RXF7EIDH                          00000D66
RXF7EIDL                          00000D67
RXF7EN                            00000007
RXF7SIDH                          00000D64
RXF7SIDL                          00000D65
RXF8EIDH                          00000D6A
RXF8EIDL                          00000D6B
RXF8EN                            00000000
RXF8SIDH                          00000D68
RXF8SIDL                          00000D69
RXF9EIDH                          00000D72
RXF9EIDL                          00000D73
RXF9EN                            00000001
RXF9SIDH                          00000D70
RXF9SIDL                          00000D71
RXFBCON0                          00000DE0
RXFBCON1                          00000DE1
RXFBCON2                          00000DE2
RXFBCON3                          00000DE3
RXFBCON4                          00000DE4
RXFBCON5                          00000DE5
RXFBCON6                          00000DE6
RXFBCON7                          00000DE7
RXFCON0                           00000DD4
RXFCON1                           00000DD5
RXFUL                             00000007
RXFUL_TXBIF                       00000007
RXM0                              00000005
RXM0EIDH                          00000F1A
RXM0EIDL                          00000F1B
RXM0SIDH                          00000F18
RXM0SIDL                          00000F19
RXM0_RTRRO                        00000005
RXM1                              00000006
RXM1EIDH                          00000F1E
RXM1EIDL                          00000F1F
RXM1SIDH                          00000F1C
RXM1SIDL                          00000F1D
RXM1_TXABT                        00000006
RXRTR                             00000006
RXRTRRO_B0CON                     00000005
RXRTRRO_B1CON                     00000005
RXRTRRO_B2CON                     00000005
RXRTRRO_B3CON                     00000005
RXRTRRO_B4CON                     00000005
RXRTRRO_B5CON                     00000005
RXRTRRO_FILHIT3                   00000003
RXRTRRO_RXB0CON                   00000003
RXRTRRO_RXB1CON                   00000003
RXRTRRO_TXLARB                    00000005
RXRTR_TXRTR                       00000006
RXWARN                            00000001
R_NOT_W                           00000002
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 95


SYMBOL TABLE
  LABEL                             VALUE 

R_W                               00000002
S                                 00000003
SAM                               00000006
SBOREN                            00000006
SCAN_DEBOUNCE                     
SCAN_DEBOUNCERS                   0000010E
SCK                               00000003
SCKP                              00000004
SCL                               00000003
SCN_DBN                           0000000A
SCN_DB_ACTIVE_0                   0000011E
SCN_DB_ACTIVE_1                   000002C8
SCN_DB_ACTIVE_2                   00000472
SCN_DB_ACTIVE_3                   0000061C
SCN_DB_ACTIVE_4                   000007C6
SCN_DB_ACTIVE_5                   00000970
SCN_DB_ACTIVE_6                   00000B1A
SCN_DB_ACTIVE_7                   00000CC4
SCN_DB_ACTIVE_8                   00000E6E
SCN_DB_ACTIVE_9                   00001018
SCN_DB_CHANGED_0                  0000022E
SCN_DB_CHANGED_1                  000003D8
SCN_DB_CHANGED_2                  00000582
SCN_DB_CHANGED_3                  0000072C
SCN_DB_CHANGED_4                  000008D6
SCN_DB_CHANGED_5                  00000A80
SCN_DB_CHANGED_6                  00000C2A
SCN_DB_CHANGED_7                  00000DD4
SCN_DB_CHANGED_8                  00000F7E
SCN_DB_CHANGED_9                  00001128
SCN_DB_DING_0                     000001AA
SCN_DB_DING_1                     00000354
SCN_DB_DING_2                     000004FE
SCN_DB_DING_3                     000006A8
SCN_DB_DING_4                     00000852
SCN_DB_DING_5                     000009FC
SCN_DB_DING_6                     00000BA6
SCN_DB_DING_7                     00000D50
SCN_DB_DING_8                     00000EFA
SCN_DB_DING_9                     000010A4
SCN_DB_DONE_0                     000002B8
SCN_DB_DONE_1                     00000462
SCN_DB_DONE_2                     0000060C
SCN_DB_DONE_3                     000007B6
SCN_DB_DONE_4                     00000960
SCN_DB_DONE_5                     00000B0A
SCN_DB_DONE_6                     00000CB4
SCN_DB_DONE_7                     00000E5E
SCN_DB_DONE_8                     00001008
SCN_DB_DONE_9                     000011B2
SCN_DB_END_0                      00000230
SCN_DB_END_1                      000003DA
SCN_DB_END_2                      00000584
SCN_DB_END_3                      0000072E
SCN_DB_END_4                      000008D8
SCN_DB_END_5                      00000A82
SCN_DB_END_6                      00000C2C
SCN_DB_END_7                      00000DD6
SCN_DB_END_8                      00000F80
SCN_DB_END_9                      0000112A
SCN_DB_LCK_0                      00000242
SCN_DB_LCK_1                      000003EC
SCN_DB_LCK_2                      00000596
SCN_DB_LCK_3                      00000740
SCN_DB_LCK_4                      000008EA
SCN_DB_LCK_5                      00000A94
SCN_DB_LCK_6                      00000C3E
SCN_DB_LCK_7                      00000DE8
SCN_DB_LCK_8                      00000F92
SCN_DB_LCK_9                      0000113C
SCS0                              00000000
SCS1                              00000001
SDA                               00000004
SDFLC                             00000DD8
SDI                               00000004
SDO                               00000005
SEG1PH0                           00000003
SEG1PH1                           00000004
SEG1PH2                           00000005
SEG2PH0                           00000000
SEG2PH1                           00000001
SEG2PH2                           00000002
SEG2PHT                           00000007
SEG2PHTS                          00000007
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 96


SYMBOL TABLE
  LABEL                             VALUE 

SEN                               00000000
SENDB                             00000003
SET_ALL_BUTTON_LIGHTS             0000126E
SET_SSR_BLINK_FADE                
SET_SSR_DMX_MODE                  
SET_SSR_NORMAL_MODE               
SET_SSR_OFF                       
SET_SSR_PATTERN                   
SET_SSR_RAPID_FADE                
SET_SSR_RAPID_FLASH               
SET_SSR_SLOW_FADE                 
SET_SSR_SLOW_FLASH                
SET_SSR_STEADY                    
SET_SSR_VALUE                     
SID0                              00000005
SID1                              00000006
SID10                             00000007
SID2                              00000007
SID3                              00000000
SID4                              00000001
SID5                              00000002
SID6                              00000003
SID7                              00000004
SID8                              00000005
SID9                              00000006
SJW0                              00000006
SJW1                              00000007
SMP                               00000007
SP0                               00000000
SP1                               00000001
SP2                               00000002
SP3                               00000003
SP4                               00000004
SPBRG                             00000FAF
SPBRGH                            00000FB0
SPEN                              00000007
SREN                              00000005
SRR                               00000004
SS                                00000005
SSPADD                            00000FC8
SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000FC7
SSR_00_COUNTER                    00000000
SSR_00_FLAGS                      00000000
SSR_00_SPEED                      00000000
SSR_00_STEP                       00000000
SSR_00_VALUE                      00000000
SSR_DATA_BANK                     00000400
SSR_MAX                           00000019
STATUS                            00000FD8
STKFUL                            00000007
STKOVF                            00000007
STKPTR                            00000FFC
STKPTR0                           00000000
STKPTR1                           00000001
STKPTR2                           00000002
STKPTR3                           00000003
STKPTR4                           00000004
STKUNF                            00000006
SWDTE                             00000000
SWDTEN                            00000000
SYNC                              00000004
T08BIT                            00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0IP                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0PS3                             00000003
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 97


SYMBOL TABLE
  LABEL                             VALUE 

T0SE                              00000004
T13CKI                            00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1INSYNC                          00000002
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1RUN                             00000006
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FCA
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
T3CCP1                            00000003
T3CCP2                            00000006
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3ECCP1                           00000006
T3NSYNC                           00000002
T3SYNC                            00000002
TABLAT                            00000FF5
TBLPTR                            00000FF6
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
TEC0                              00000000
TEC1                              00000001
TEC2                              00000002
TEC3                              00000003
TEC4                              00000004
TEC5                              00000005
TEC6                              00000006
TEC7                              00000007
TMR0                              00000FD6
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0ON                            00000007
TMR1                              00000FCE
TMR1CS                            00000001
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1ON                            00000000
TMR2                              00000FCC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2ON                            00000002
TMR3                              00000FB2
TMR3CS                            00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3ON                            00000000
TO                                00000003
TOS                               00000FFD
TOSH                              00000FFE
TOSL                              00000FFD
TOSU                              00000FFF
TRISA                             00000F92
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000F93
TRISB0                            00000000
TRISB1                            00000001
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 98


SYMBOL TABLE
  LABEL                             VALUE 

TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000F94
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000F95
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000F96
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRIS_T_R                          00000F94
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX                                00000006
TX9                               00000006
TX9D                              00000000
TXABT                             00000006
TXB0CON                           00000F40
TXB0D0                            00000F46
TXB0D00                           00000000
TXB0D01                           00000001
TXB0D02                           00000002
TXB0D03                           00000003
TXB0D04                           00000004
TXB0D05                           00000005
TXB0D06                           00000006
TXB0D07                           00000007
TXB0D1                            00000F47
TXB0D10                           00000000
TXB0D11                           00000001
TXB0D12                           00000002
TXB0D13                           00000003
TXB0D14                           00000004
TXB0D15                           00000005
TXB0D16                           00000006
TXB0D17                           00000007
TXB0D2                            00000F48
TXB0D20                           00000000
TXB0D21                           00000001
TXB0D22                           00000002
TXB0D23                           00000003
TXB0D24                           00000004
TXB0D25                           00000005
TXB0D26                           00000006
TXB0D27                           00000007
TXB0D3                            00000F49
TXB0D30                           00000000
TXB0D31                           00000001
TXB0D32                           00000002
TXB0D33                           00000003
TXB0D34                           00000004
TXB0D35                           00000005
TXB0D36                           00000006
TXB0D37                           00000007
TXB0D4                            00000F4A
TXB0D40                           00000000
TXB0D41                           00000001
TXB0D42                           00000002
TXB0D43                           00000003
TXB0D44                           00000004
TXB0D45                           00000005
TXB0D46                           00000006
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 99


SYMBOL TABLE
  LABEL                             VALUE 

TXB0D47                           00000007
TXB0D5                            00000F4B
TXB0D50                           00000000
TXB0D51                           00000001
TXB0D52                           00000002
TXB0D53                           00000003
TXB0D54                           00000004
TXB0D55                           00000005
TXB0D56                           00000006
TXB0D57                           00000007
TXB0D6                            00000F4C
TXB0D60                           00000000
TXB0D61                           00000001
TXB0D62                           00000002
TXB0D63                           00000003
TXB0D64                           00000004
TXB0D65                           00000005
TXB0D66                           00000006
TXB0D67                           00000007
TXB0D7                            00000F4D
TXB0D70                           00000000
TXB0D71                           00000001
TXB0D72                           00000002
TXB0D73                           00000003
TXB0D74                           00000004
TXB0D75                           00000005
TXB0D76                           00000006
TXB0D77                           00000007
TXB0DLC                           00000F45
TXB0EIDH                          00000F43
TXB0EIDL                          00000F44
TXB0IE                            00000002
TXB0IF                            00000002
TXB0IP                            00000002
TXB0SIDH                          00000F41
TXB0SIDL                          00000F42
TXB1CON                           00000F30
TXB1D0                            00000F36
TXB1D00                           00000000
TXB1D01                           00000001
TXB1D02                           00000002
TXB1D03                           00000003
TXB1D04                           00000004
TXB1D05                           00000005
TXB1D06                           00000006
TXB1D07                           00000007
TXB1D1                            00000F37
TXB1D10                           00000000
TXB1D11                           00000001
TXB1D12                           00000002
TXB1D13                           00000003
TXB1D14                           00000004
TXB1D15                           00000005
TXB1D16                           00000006
TXB1D17                           00000007
TXB1D2                            00000F38
TXB1D20                           00000000
TXB1D21                           00000001
TXB1D22                           00000002
TXB1D23                           00000003
TXB1D24                           00000004
TXB1D25                           00000005
TXB1D26                           00000006
TXB1D27                           00000007
TXB1D3                            00000F39
TXB1D30                           00000000
TXB1D31                           00000001
TXB1D32                           00000002
TXB1D33                           00000003
TXB1D34                           00000004
TXB1D35                           00000005
TXB1D36                           00000006
TXB1D37                           00000007
TXB1D4                            00000F3A
TXB1D40                           00000000
TXB1D41                           00000001
TXB1D42                           00000002
TXB1D43                           00000003
TXB1D44                           00000004
TXB1D45                           00000005
TXB1D46                           00000006
TXB1D47                           00000007
TXB1D5                            00000F3B
TXB1D50                           00000000
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 100


SYMBOL TABLE
  LABEL                             VALUE 

TXB1D51                           00000001
TXB1D52                           00000002
TXB1D53                           00000003
TXB1D54                           00000004
TXB1D55                           00000005
TXB1D56                           00000006
TXB1D57                           00000007
TXB1D6                            00000F3C
TXB1D60                           00000000
TXB1D61                           00000001
TXB1D62                           00000002
TXB1D63                           00000003
TXB1D64                           00000004
TXB1D65                           00000005
TXB1D66                           00000006
TXB1D67                           00000007
TXB1D7                            00000F3D
TXB1D70                           00000000
TXB1D71                           00000001
TXB1D72                           00000002
TXB1D73                           00000003
TXB1D74                           00000004
TXB1D75                           00000005
TXB1D76                           00000006
TXB1D77                           00000007
TXB1DLC                           00000F35
TXB1EIDH                          00000F33
TXB1EIDL                          00000F34
TXB1IE                            00000003
TXB1IF                            00000003
TXB1IP                            00000003
TXB1SIDH                          00000F31
TXB1SIDL                          00000F32
TXB2CON                           00000F20
TXB2D0                            00000F26
TXB2D00                           00000000
TXB2D01                           00000001
TXB2D02                           00000002
TXB2D03                           00000003
TXB2D04                           00000004
TXB2D05                           00000005
TXB2D06                           00000006
TXB2D07                           00000007
TXB2D1                            00000F27
TXB2D10                           00000000
TXB2D11                           00000001
TXB2D12                           00000002
TXB2D13                           00000003
TXB2D14                           00000004
TXB2D15                           00000005
TXB2D16                           00000006
TXB2D17                           00000007
TXB2D2                            00000F28
TXB2D20                           00000000
TXB2D21                           00000001
TXB2D22                           00000002
TXB2D23                           00000003
TXB2D24                           00000004
TXB2D25                           00000005
TXB2D26                           00000006
TXB2D27                           00000007
TXB2D3                            00000F29
TXB2D30                           00000000
TXB2D31                           00000001
TXB2D32                           00000002
TXB2D33                           00000003
TXB2D34                           00000004
TXB2D35                           00000005
TXB2D36                           00000006
TXB2D37                           00000007
TXB2D4                            00000F2A
TXB2D40                           00000000
TXB2D41                           00000001
TXB2D42                           00000002
TXB2D43                           00000003
TXB2D44                           00000004
TXB2D45                           00000005
TXB2D46                           00000006
TXB2D47                           00000007
TXB2D5                            00000F2B
TXB2D50                           00000000
TXB2D51                           00000001
TXB2D52                           00000002
TXB2D53                           00000003
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 101


SYMBOL TABLE
  LABEL                             VALUE 

TXB2D54                           00000004
TXB2D55                           00000005
TXB2D56                           00000006
TXB2D57                           00000007
TXB2D6                            00000F2C
TXB2D60                           00000000
TXB2D61                           00000001
TXB2D62                           00000002
TXB2D63                           00000003
TXB2D64                           00000004
TXB2D65                           00000005
TXB2D66                           00000006
TXB2D67                           00000007
TXB2D7                            00000F2D
TXB2D70                           00000000
TXB2D71                           00000001
TXB2D72                           00000002
TXB2D73                           00000003
TXB2D74                           00000004
TXB2D75                           00000005
TXB2D76                           00000006
TXB2D77                           00000007
TXB2DLC                           00000F25
TXB2EIDH                          00000F23
TXB2EIDL                          00000F24
TXB2IE                            00000004
TXB2IF                            00000004
TXB2IP                            00000004
TXB2SIDH                          00000F21
TXB2SIDL                          00000F22
TXBIE                             00000DFC
TXBIF                             00000007
TXBIFBXB2CON                      00000007
TXBIFTXB1CON                      00000007
TXBIP                             00000004
TXBO                              00000005
TXBP                              00000004
TXBnIE                            00000004
TXBnIF                            00000004
TXBnIP                            00000004
TXCKP                             00000004
TXEN                              00000005
TXERR                             00000004
TXERRCNT                          00000F76
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXLARB                            00000005
TXPRI0                            00000000
TXPRI1                            00000001
TXREG                             00000FAD
TXREQ                             00000003
TXRTR                             00000006
TXSTA                             00000FAC
TXWARN                            00000002
UA                                00000001
VCFG0                             00000004
VCFG1                             00000005
VDIRMAG                           00000007
VREFM                             00000002
VREFP                             00000003
W                                 00000000
WAKDIS                            00000007
WAKFIL                            00000006
WAKIE                             00000006
WAKIF                             00000006
WAKIP                             00000006
WCOL                              00000007
WDTCON                            00000FD1
WIN0                              00000001
WIN0_FP1                          00000001
WIN1                              00000002
WIN1_FP2                          00000002
WIN2                              00000003
WIN2_FP3                          00000003
WR                                00000001
WREG                              00000FE8
WREN                              00000002
WRERR                             00000003
WUE                               00000001
YY_BUF_LEN                        000000C8
Z                                 00000002
_BBSIZ_1024_4L                    000000CF
_BBSIZ_2048_4L                    000000DF
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 102


SYMBOL TABLE
  LABEL                             VALUE 

_BBSIZ_4096_4L                    000000EF
_BOREN_BOACTIVE_2L                000000FD
_BOREN_BOHW_2L                    000000FF
_BOREN_OFF_2L                     000000F9
_BOREN_SBORENCTRL_2L              000000FB
_BORV_0_2L                        000000E7
_BORV_1_2L                        000000EF
_BORV_2_2L                        000000F7
_BORV_3_2L                        000000FF
_CONFIG1H                         00300001
_CONFIG2H                         00300003
_CONFIG2L                         00300002
_CONFIG3H                         00300005
_CONFIG4L                         00300006
_CONFIG5H                         00300009
_CONFIG5L                         00300008
_CONFIG6H                         0030000B
_CONFIG6L                         0030000A
_CONFIG7H                         0030000D
_CONFIG7L                         0030000C
_CP0_OFF_5L                       000000FF
_CP0_ON_5L                        000000FE
_CP1_OFF_5L                       000000FF
_CP1_ON_5L                        000000FD
_CP2_OFF_5L                       000000FF
_CP2_ON_5L                        000000FB
_CP3_OFF_5L                       000000FF
_CP3_ON_5L                        000000F7
_CP4_OFF_5L                       000000FF
_CP4_ON_5L                        000000EF
_CP5_OFF_5L                       000000FF
_CP5_ON_5L                        000000DF
_CPB_OFF_5H                       000000FF
_CPB_ON_5H                        000000BF
_CPD_OFF_5H                       000000FF
_CPD_ON_5H                        0000007F
_DEBUG_OFF_4L                     000000FF
_DEBUG_ON_4L                      0000007F
_DEVID1                           003FFFFE
_DEVID2                           003FFFFF
_EBTR0_OFF_7L                     000000FF
_EBTR0_ON_7L                      000000FE
_EBTR1_OFF_7L                     000000FF
_EBTR1_ON_7L                      000000FD
_EBTR2_OFF_7L                     000000FF
_EBTR2_ON_7L                      000000FB
_EBTR3_OFF_7L                     000000FF
_EBTR3_ON_7L                      000000F7
_EBTR4_OFF_7L                     000000FF
_EBTR4_ON_7L                      000000EF
_EBTR5_OFF_7L                     000000FF
_EBTR5_ON_7L                      000000DF
_EBTRB_OFF_7H                     000000FF
_EBTRB_ON_7H                      000000BF
_FCMEN_OFF_1H                     000000BF
_FCMEN_ON_1H                      000000FF
_IDLOC0                           00200000
_IDLOC1                           00200001
_IDLOC2                           00200002
_IDLOC3                           00200003
_IDLOC4                           00200004
_IDLOC5                           00200005
_IDLOC6                           00200006
_IDLOC7                           00200007
_IESO_OFF_1H                      0000007F
_IESO_ON_1H                       000000FF
_LPT1OSC_OFF_3H                   000000FB
_LPT1OSC_ON_3H                    000000FF
_LVP_OFF_4L                       000000FB
_LVP_ON_4L                        000000FF
_MCLRE_OFF_3H                     0000007F
_MCLRE_ON_3H                      000000FF
_OSC_ECIO_1H                      000000F5
_OSC_EC_1H                        000000F4
_OSC_HSPLL_1H                     000000F6
_OSC_HS_1H                        000000F2
_OSC_IRCIO67_1H                   000000F8
_OSC_IRCIO7_1H                    000000F9
_OSC_LP_1H                        000000F0
_OSC_RCIO_1H                      000000F7
_OSC_RC_1H                        000000F3
_OSC_XT_1H                        000000F1
_PBADEN_OFF_3H                    000000FD
_PBADEN_ON_3H                     000000FF
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-12-2014  13:50:08         PAGE 103


SYMBOL TABLE
  LABEL                             VALUE 

_PWRT_OFF_2L                      000000FF
_PWRT_ON_2L                       000000FE
_STVREN_OFF_4L                    000000FE
_STVREN_ON_4L                     000000FF
_WDTPS_1024_2H                    000000F5
_WDTPS_128_2H                     000000EF
_WDTPS_16384_2H                   000000FD
_WDTPS_16_2H                      000000E9
_WDTPS_1_2H                       000000E1
_WDTPS_2048_2H                    000000F7
_WDTPS_256_2H                     000000F1
_WDTPS_2_2H                       000000E3
_WDTPS_32768_2H                   000000FF
_WDTPS_32_2H                      000000EB
_WDTPS_4096_2H                    000000F9
_WDTPS_4_2H                       000000E5
_WDTPS_512_2H                     000000F3
_WDTPS_64_2H                      000000ED
_WDTPS_8192_2H                    000000FB
_WDTPS_8_2H                       000000E7
_WDT_OFF_2H                       000000FE
_WDT_ON_2H                        000000FF
_WRT0_OFF_6L                      000000FF
_WRT0_ON_6L                       000000FE
_WRT1_OFF_6L                      000000FF
_WRT1_ON_6L                       000000FD
_WRT2_OFF_6L                      000000FF
_WRT2_ON_6L                       000000FB
_WRT3_OFF_6L                      000000FF
_WRT3_ON_6L                       000000F7
_WRT4_OFF_6L                      000000FF
_WRT4_ON_6L                       000000EF
_WRT5_OFF_6L                      000000FF
_WRT5_ON_6L                       000000DF
_WRTB_OFF_6H                      000000FF
_WRTB_ON_6H                       000000BF
_WRTC_OFF_6H                      000000FF
_WRTC_ON_6H                       000000DF
_WRTD_OFF_6H                      000000FF
_WRTD_ON_6H                       0000007F
_XINST_OFF_4L                     000000BF
_XINST_ON_4L                      000000FF
__18F4685                         00000001

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

