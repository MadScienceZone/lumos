MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ; vim:set syntax=pic ts=8:
                      00002 ;
                      00003                 LIST n=90
                      00004 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00005 ;@@                                                                         @@
                      00006 ;@@  @@@   @   @  @@@@@  @@@@@                QUIZ SHOW HARDWARE CONTROLLER @@
                      00007 ;@@ @   @  @   @    @        @                FIRMWARE VERSION 4.0          @@ 
                      00008 ;@@ @   @  @   @    @       @                                               @@
                      00009 ;@@ @   @  @   @    @      @                  FOR HARDWARE REVISION 4.0     @@
                      00010 ;@@ @ @ @  @   @    @     @                   QSCC - QUIZ SHOW CONTESTANT   @@
                      00011 ;@@ @  @@  @   @    @    @                    QSRC - QUIZ SHOW REMOTE       @@
                      00012 ;@@ @@@@@   @@@   @@@@@  @@@@@                                              @@
                      00013 ;@@                                                                         @@
                      00014 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00015 ;
                      00016 ; Based on Lumos controller firmware 3.0, PWD-2 firmware (particularly 
                      00017 ; readerboard controls), and previous Quizshow hardware designs.  All of the
                      00018 ; above are copyright (c) Steven L. Willoughby, All Rights Reserved.
                      00019 ;
                      00020 ; ************                                                           /\
                      00021 ; * WARNING! *    EXPERIMENTAL DESIGN FOR EDUCATIONAL PURPOSES          /  \
                      00022 ; * WARNING! *                USE AT YOUR OWN RISK!                    / !  \
                      00023 ; ************                                                        /______\
                      00024 ; 
                      00025 ; PLEASE READ AND BE SURE YOU UNDERSTAND THE FOLLOWING SAFETY WARNINGS:
                      00026 ;
                      00027 ; THIS FIRMWARE AND THE ACCOMPANYING HARDWARE AND CONTROLLING SOFTWARE ARE
                      00028 ; EXPERIMENTAL "HOBBYIST" DESIGNS AND ARE NOT INTENDED FOR GENERAL CONSUMER USE
                      00029 ; OR FOR ANY APPLICATION WHERE THERE IS ANY POSSIBILITY OF RISK OF INJURY,
                      00030 ; PROPERTY DAMAGE, OR ANY OTHER SITUATION WHERE ANY FAILURE OF THE FIRMWARE,
                      00031 ; SOFTWARE AND/OR HARDWARE COULD RESULT IN HARM TO ANYONE OR ANYTHING.  
                      00032 ;
                      00033 ; THIS FIRMWARE, SOFTWARE, AND/OR HARDWARE ARE NOT INTENDED NOR RECOMMENDED 
                      00034 ; FOR APPLICATIONS INVOLVING LIFE SUPPORT OR SAFETY-CRITICAL SYSTEMS, RUNNING 
                      00035 ; FIREWORKS/PYROTECHNIC DISPLAYS, ETC.  
                      00036 ;
                      00037 ; BY OBTAINING AND USING THIS FIRMWARE, AND/OR ACCOMPANYING HARDWARE AND/OR 
                      00038 ; CONTROLLING SOFTWARE, YOU AGREE TO THESE CONDITIONS AND THAT TO THE FULLEST 
                      00039 ; EXTENT OF APPLICABLE LAW, THE ABOVE-LISTED ITEMS AND ALL ACCOMPANYING 
                      00040 ; DOCUMENTATION AND OTHER MATERIALS ARE PROVIDED TO YOU AS-IS, WITHOUT WARRANTY 
                      00041 ; OF ANY KIND, EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
                      00042 ; WARRANTIES OF MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE.  YOU 
                      00043 ; FURTHER AGREE TO DEFEND, INDEMNIFY, AND HOLD BLAMELESS, THE AUTHOR, STEVEN 
                      00044 ; L. Willoughby AND ANY OF HIS AGENTS AND ASSOCIATES ASSISTING WITH THIS WORK, 
                      00045 ; FROM ANY DAMAGES DIRECT OR INCIDENTAL ARISING FROM THE USE OF, OR INABILITY 
                      00046 ; TO USE, THE ABOVE-LISTED PRODUCTS.
                      00047 ; 
                      00048 ;
                      00049 ; Copyright (c) 2014 by Steven L. Willoughby, Aloha, Oregon, USA.  
                      00050 ; All Rights Reserved.  Quiz Show portions are unreleased trade secret
                      00051 ; information.
                      00052 ;
                      00053 ; Based on previous works by the same author, some of which are released
                      00054 ; under the Open Software License, version 3.0, which portions are available
                      00055 ; separately for free download.
                      00056 ;
                      00057 ; -*- -*- -* -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*-
                      00058 ;
                      00059 ; Main implementation module.
                      00060 ;
                      00061 #include "lumos_config.inc"
                      00001 ; vim:set syntax=pic ts=8:
                      00002 ;
                      00003                 LIST n=90
                      00004 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00005 ;@@                                                                         @@
                      00006 ;@@ @      @   @  @   @   @@@    @@@          LUMOS: LIGHT ORCHESTRATION    @@
                      00007 ;@@ @      @   @  @@ @@  @   @  @   @         SYSTEM FIRMWARE VERSION 3.0   @@
                      00008 ;@@ @      @   @  @ @ @  @   @  @                                           @@
                      00009 ;@@ @      @   @  @   @  @   @   @@@   @@@@@  FOR 24- AND 48-CHANNEL AC/DC  @@
                      00010 ;@@ @      @   @  @   @  @   @      @         LUMOS CONTROLLER UNITS        @@
                      00011 ;@@ @      @   @  @   @  @   @  @   @         BASED ON THE PIC18F4685 CHIP  @@
                      00012 ;@@ @@@@@   @@@   @   @   @@@    @@@                                        @@
                      00013 ;@@                                                                         @@
                      00014 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00015 ;
                      00016 ; Copyright (c) 2012, 2014 by Steven L. Willoughby, Aloha, Oregon, USA.  
                      00017 ; All Rights Reserved.  
                      00018 ; Released under the terms and conditions of the Open Software
                      00019 ; License, version 3.0.
                      00020 ;
                      00021 ; Portions based on earlier code copyright (c) 2004, 2005, 2006, 2007
                      00022 ; Steven L. Willoughby, Aloha, Oregon, USA.  All Rights Reserved.
                      00023 ;
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00024 ; -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*-
                      00025 ;
                      00026 ; Configuration options.  Set these as desired and then re-assemble the
                      00027 ; code to produce the desired version of the ROM.
                      00028 ;
                      00029 ; 
                      00030 ;==============================================================================
                      00031 ; CONFIGURATION OPTIONS
                      00032 ;==============================================================================
                      00033 #ifndef LUMOS_CONFIG_INC
                      00034 #define LUMOS_CONFIG_INC
                      00035 #define LUMOS_CHIP_MASTER       0x41    ; 48-channel master CPU
                      00036 #define LUMOS_CHIP_SLAVE        0x42    ; 48-channel slave CPU
                      00037 #define LUMOS_CHIP_STANDALONE   0x43    ; 24-channel CPU
                      00038 #define LUMOS_CHIP_4CHANNEL     0x44    ; 4-channel CPU
                      00039 #define LUMOS_CHIP_QSCC         0x45    ; Private code; custom hardware
                      00040 #define LUMOS_CHIP_QSRC         0x46    ; Private code; custom hardware
                      00041 ;
                      00042 ; Un-comment one of these to select board type for this ROM image:
                      00043 ;
                      00044 ;#define LUMOS_CHIP_TYPE                LUMOS_CHIP_MASTER
                      00045 ;#define LUMOS_CHIP_TYPE                LUMOS_CHIP_SLAVE
                      00046 ;#define LUMOS_CHIP_TYPE                LUMOS_CHIP_STANDALONE
                      00047 ;#define LUMOS_CHIP_TYPE                LUMOS_CHIP_4CHANNEL
                      00048 ;#define LUMOS_CHIP_TYPE                LUMOS_CHIP_QSCC
                      00049 #define LUMOS_CHIP_TYPE         LUMOS_CHIP_QSRC
                      00050 ;
                      00051 ;
                      00052 ;
                      00053 #define LUMOS_ZC                0x55
                      00054 #define LUMOS_INTERNAL          0x58
                      00055 
                      00056  IF LUMOS_CHIP_TYPE == LUMOS_CHIP_MASTER || LUMOS_CHIP_TYPE == LUMOS_CHIP_SLAVE
                      00057   #define LUMOS_SLICE_TIMER LUMOS_ZC
                      00058  ELSE
                      00059   IF LUMOS_CHIP_TYPE == LUMOS_CHIP_STANDALONE || LUMOS_CHIP_TYPE == LUMOS_CHIP_4CHANNEL || LUMOS_CHIP_TY
                            PE == LUMOS_CHIP_QSCC || LUMOS_CHIP_TYPE == LUMOS_CHIP_QSRC
                      00060    #define LUMOS_SLICE_TIMER LUMOS_INTERNAL
                      00061   ELSE
                      00062    ERROR "LUMOS_CHIP_TYPE must be set to MASTER, SLAVE, 4CHANNEL, or STANDALONE"
                      00063   ENDIF
                      00064  ENDIF
                      00065  
                      00066  IF LUMOS_SLICE_TIMER != LUMOS_ZC && LUMOS_SLICE_TIMER != LUMOS_INTERNAL
                      00067   ERROR "LUMOS_SLICE_TIMER must be set to ZC or INTERNAL"
                      00068  ENDIF
                      00069 
                      00070 
                      00071  IF LUMOS_CHIP_TYPE == LUMOS_CHIP_MASTER
                      00072   #define ROLE_MASTER       (1)
                      00073   #define ROLE_SLAVE        (0)
                      00074   #define ROLE_STANDALONE   (0)
                      00075   #define NUM_CHANNELS      (.48)
                      00076   #define QSCC_PORT         (0)
                      00077  ELSE
                      00078   IF LUMOS_CHIP_TYPE == LUMOS_CHIP_SLAVE
                      00079    #define ROLE_MASTER      (0)
                      00080    #define ROLE_SLAVE       (1)
                      00081    #define ROLE_STANDALONE  (0)
                      00082    #define NUM_CHANNELS     (.48)
                      00083    #define QSCC_PORT        (0)
                      00084   ELSE
                      00085    IF LUMOS_CHIP_TYPE == LUMOS_CHIP_STANDALONE
                      00086     #define ROLE_MASTER     (0)
                      00087     #define ROLE_SLAVE      (0)
                      00088     #define ROLE_STANDALONE (1)
                      00089     #define NUM_CHANNELS    (.24)
                      00090     #define QSCC_PORT       (0)
                      00091    ELSE
                      00092     IF LUMOS_CHIP_TYPE == LUMOS_CHIP_4CHANNEL
                      00093      #define ROLE_MASTER     (0)
                      00094      #define ROLE_SLAVE      (0)
                      00095      #define ROLE_STANDALONE (1)
                      00096      #define NUM_CHANNELS    (.4)
                      00097      #define QSCC_PORT       (0)
                      00098     ELSE
                      00099      IF LUMOS_CHIP_TYPE == LUMOS_CHIP_QSCC
                      00100       #define ROLE_MASTER     (0)
                      00101       #define ROLE_SLAVE      (0)
                      00102       #define ROLE_STANDALONE (1)
                      00103       #define NUM_CHANNELS    (.14)
                      00104       #define QSCC_PORT       (1)
                      00105      ELSE
                      00106       IF LUMOS_CHIP_TYPE == LUMOS_CHIP_QSRC
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00107        #define ROLE_MASTER     (0)
                      00108        #define ROLE_SLAVE      (0)
                      00109        #define ROLE_STANDALONE (1)
                      00110        #define NUM_CHANNELS    (.20)
                      00111        #define QSCC_PORT       (1)
                      00112       ELSE
                      00113        ERROR "Invalid LUMOS_CHIP_TYPE"
                      00114       ENDIF
                      00115      ENDIF
                      00116     ENDIF
                      00117    ENDIF
                      00118   ENDIF
                      00119  ENDIF
                      00120 
                      00121 #define LUMOS_ARCH_4685  (0x4685)
                      00122 #define LUMOS_ARCH_14K50 (0x1450)
                      00123 
                      00124  IF LUMOS_CHIP_TYPE == LUMOS_CHIP_MASTER || LUMOS_CHIP_TYPE == LUMOS_CHIP_SLAVE || LUMOS_CHIP_TYPE == LU
                            MOS_CHIP_STANDALONE || LUMOS_CHIP_TYPE == LUMOS_CHIP_QSCC || LUMOS_CHIP_TYPE == LUMOS_CHIP_QSRC
                      00125   #define LUMOS_ARCH LUMOS_ARCH_4685
                      00126   PROCESSOR 18F4685
                      00127   #include <p18f4685.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC18F4685 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      05130         LIST
                      00128  ELSE
                      00129   IF LUMOS_CHIP_TYPE == LUMOS_CHIP_4CHANNEL
                      00130    #define LUMOS_ARCH LUMOS_ARCH_14K50
                      00131    PROCESSOR 18F14K50
                      00132    #include <p18f14k50.inc>
                      00133   ELSE
                      00134    ERROR "Invalid LUMOS_CHIP_TYPE"
                      00135   ENDIF
                      00136  ENDIF
                      00137 
                      00138 ;
                      00139 ; The following public symbols can be used after this file is
                      00140 ; included (and this file should be included everywhere before
                      00141 ; anything else is included, and in lieu of PROCESSOR directives
                      00142 ; or #includes which bring in processor-specific bits--this file
                      00143 ; will do that for you):
                      00144 ;
                      00145 ; LUMOS_CHIP_TYPE:  Will be one of the following, to show what the intent
                      00146 ;                   of the target chip will be and what its particular 
                      00147 ;                   I/O pin assignments are, role in the overall circuit, etc.
                      00148 ;                   (use the ROLE_* values where possible, though, in your logic)
                      00149 ;
                      00150 ;       LUMOS_CHIP_MASTER       - 48-channel (2-CPU) controller, master CPU
                      00151 ;       LUMOS_CHIP_SLAVE        - 48-channel (2-CPU) controller, slave CPU
                      00152 ;       LUMOS_CHIP_STANDALONE   - 24-channel (1-CPU) controller, sole CPU
                      00153 ;       LUMOS_CHIP_4CHANNEL     - 4-channel  (1-CPU) controller, sole CPU
                      00154 ;       LUMOS_CHIP_QSCC         - private configuration for custom hardware
                      00155 ;       LUMOS_CHIP_QSRC         - private configuration for custom hardware
                      00156 ;
                      00157 ; LUMOS_SLICE_TIMER: Will be one of the following, to specify where the PWM
                      00158 ;                   slice timer sync pulse is coming from:
                      00159 ;
                      00160 ;       LUMOS_ZC        - Hardware zero-crossing detector to PIC interrupt pin
                      00161 ;       LUMOS_INTERNAL  - Internal timing system (using PIC timer module)
                      00162 ;
                      00163 ; LUMOS_ARCH:       Will be one of the following, to show what PIC device
                      00164 ;                   is targeted, strictly to determine chip-specific details,
                      00165 ;                   not how Lumos is using it.
                      00166 ;
                      00167 ;       "14K50"         - The PIC18F14K50
                      00168 ;       "4685"          - The PIC18F4685
                      00169 ;
                      00170 ; ROLE_MASTER           - (bool) true if this chip is the master in master/slave arrangement
                      00171 ; ROLE_SLAVE            - (bool) true if this chip is the slave in master/slave arrangement
                      00172 ; ROLE_STANDALONE       - (bool) true if this is the only chip, must run entire board function
                      00173 ; NUM_CHANNELS          - (int) number of output SSR channels
                      00174 #endif
                      00062 #include "lumos_set_ssr.inc"
                      00001 ; vim:set syntax=pic ts=8:
                      00002 ;
                      00003                 LIST n=90
                      00004 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00005 ;@@                                                                         @@
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00006 ;@@ @      @   @  @   @   @@@    @@@          LUMOS: LIGHT ORCHESTRATION    @@
                      00007 ;@@ @      @   @  @@ @@  @   @  @   @         SYSTEM FIRMWARE VERSION 3.0   @@
                      00008 ;@@ @      @   @  @ @ @  @   @  @                                           @@
                      00009 ;@@ @      @   @  @   @  @   @   @@@   @@@@@  FOR 24- AND 48-CHANNEL AC/DC  @@
                      00010 ;@@ @      @   @  @   @  @   @      @         LUMOS CONTROLLER UNITS        @@
                      00011 ;@@ @      @   @  @   @  @   @  @   @         BASED ON THE PIC18F4685 CHIP  @@
                      00012 ;@@ @@@@@   @@@   @   @   @@@    @@@                                        @@
                      00013 ;@@                                                                         @@
                      00014 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00015 ;
                      00016 ; Copyright (c) 2012, 2014 by Steven L. Willoughby, Aloha, Oregon, USA.  
                      00017 ; All Rights Reserved.  
                      00018 ; Released under the terms and conditions of the Open Software
                      00019 ; License, version 3.0.
                      00020 ;
                      00021 ; Portions based on earlier code copyright (c) 2004, 2005, 2006, 2007
                      00022 ; Steven L. Willoughby, Aloha, Oregon, USA.  All Rights Reserved.
                      00023 ;
                      00024 ; -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*-
                      00025 ;
                      00026 #ifndef LUMOS_SET_SSR_INC
                      00027 #define LUMOS_SET_SSR_INC
                      00028 
                      00029  IF LUMOS_ARCH == LUMOS_ARCH_4685
  00000400            00030 SSR_DATA_BANK   EQU     0x400
  00000500            00031 MAIN_DATA       EQU     0x500
  000000C8            00032 YY_BUF_LEN      EQU     .200
                      00033  ELSE
                      00034   IF LUMOS_ARCH == LUMOS_ARCH_14K50
                      00035 SSR_DATA_BANK   EQU     0x060
                      00036 MAIN_DATA       EQU     0x088
                      00037 YY_BUF_LEN      EQU     .90 
                      00038   ELSE
                      00039    ERROR "Invalid architecture switch for SSR_DATA_BANK"
                      00040   ENDIF
                      00041  ENDIF
                      00042 
                      00043 ;
                      00044 ; SSR_FLAGS words for each output show state information about those
                      00045 ; channels.
                      00046 ;
  00000007            00047 FADE_UP         EQU     7       ; 1-------  This channel is fading up
  00000006            00048 FADE_DOWN       EQU     6       ; -1------  This channel is fading down
  00000005            00049 FADE_CYCLE      EQU     5       ; --1-----  This channel is fading up<-->down
  00000004            00050 MAX_OFF_TIME    EQU     4       ; ---1----  Use maximum off-time in cycle
  00000080            00051 BIT_FADE_UP     EQU     0x80
  00000040            00052 BIT_FADE_DOWN   EQU     0x40
  00000020            00053 BIT_FADE_CYCLE  EQU     0x20
  00000010            00054 BIT_MAX_OFF_TIME EQU    0x10
                      00055 
                      00056 SET_SSR_VALUE MACRO IDX, LEVEL
                      00057         BANKSEL SSR_DATA_BANK
                      00058          MOVLW  LEVEL
                      00059          MOVWF  SSR_00_VALUE+IDX, BANKED
                      00060          CLRF   SSR_00_STEP+IDX, BANKED
                      00061          CLRF   SSR_00_SPEED+IDX, BANKED
                      00062          CLRF   SSR_00_COUNTER+IDX, BANKED
                      00063          CLRF   SSR_00_FLAGS+IDX, BANKED
                      00064         ENDM
                      00065 
                      00066 SET_SSR_PATTERN MACRO IDX, LEVEL, STEP, SPEED, FLAGS
                      00067         BANKSEL SSR_DATA_BANK
                      00068          MOVLW  LEVEL
                      00069          MOVWF  SSR_00_VALUE+IDX, BANKED
                      00070          MOVLW  STEP
                      00071          MOVWF  SSR_00_STEP+IDX, BANKED
                      00072          MOVLW  SPEED
                      00073          MOVWF  SSR_00_SPEED+IDX, BANKED
                      00074          MOVWF  SSR_00_COUNTER+IDX, BANKED
                      00075          MOVLW  FLAGS
                      00076          MOVWF  SSR_00_FLAGS+IDX, BANKED
                      00077         ENDM
                      00078 
                      00079 SET_SSR_NORMAL_MODE MACRO IDX
                      00080          SET_SSR_PATTERN IDX, 0, 1, 3, BIT_FADE_UP|BIT_FADE_CYCLE
                      00081         ENDM
                      00082 
                      00083 SET_SSR_DMX_MODE MACRO IDX
                      00084          SET_SSR_PATTERN IDX, 0, 1, 1, BIT_FADE_UP|BIT_FADE_CYCLE
                      00085         ENDM
                      00086 
                      00087 SET_SSR_RAPID_FLASH MACRO IDX
                      00088          SET_SSR_PATTERN IDX, 255, 255, 30, BIT_FADE_DOWN|BIT_FADE_CYCLE
                      00089         ENDM
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00090 
                      00091 SET_SSR_BLINK_FADE MACRO IDX
                      00092          SET_SSR_PATTERN IDX, 255,   2,  1, BIT_FADE_DOWN
                      00093         ENDM
                      00094 
                      00095 SET_SSR_SLOW_FLASH MACRO IDX
                      00096          SET_SSR_PATTERN IDX, 255, 255, 30, BIT_FADE_DOWN|BIT_FADE_CYCLE|BIT_MAX_OFF_TIME
                      00097         ENDM
                      00098 
                      00099 SET_SSR_RAPID_FADE MACRO IDX
                      00100          SET_SSR_PATTERN IDX, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
                      00101         ENDM
                      00102 
                      00103 SET_SSR_SLOW_FADE MACRO IDX
                      00104          SET_SSR_PATTERN IDX, 0, 1, 1, BIT_FADE_UP|BIT_FADE_CYCLE
                      00105         ENDM
                      00106 
                      00107 SET_SSR_STEADY MACRO IDX
                      00108          SET_SSR_VALUE IDX, 255
                      00109         ENDM
                      00110 
                      00111 SET_SSR_OFF MACRO IDX
                      00112          SET_SSR_VALUE IDX, 0
                      00113         ENDM
                      00114 #endif
                      00063 #include "lumos_ssr_state.inc"
                      00001 ;
                      00002 ; SSR_STATE holds the execution state of the controller, including our
                      00003 ; main timing chain flags.
                      00004 ;
  00000007            00005 INCYC           EQU     7       ; 1-------  We are in a dimmer cycle now
  00000006            00006 PRECYC          EQU     6       ; -1------  We are in the pre-cycle countdown
  00000005            00007 SLICE_UPD       EQU     5       ; --1-----  Slice update needs to be done
  00000004            00008 PRIV_MODE       EQU     4       ; ---1----  We are in privileged (config) mode
  00000003            00009 SLEEP_MODE      EQU     3       ; ----1---  We are in sleep mode
  00000002            00010 DRAIN_TR        EQU     2       ; -----1--  Need to drain output queue then turn off transmitter
  00000001            00011 PRE_PRIV        EQU     1       ; ------1-  Entering privileged mode
  00000000            00012 TEST_MODE       EQU     0       ; -------1  In self-test mode
                      00013 ;
                      00014 ; SSR_STATE2 flags:
                      00015 ;
  00000007            00016 TEST_PAUSE      EQU     7       ; 1-------  We're pausing the test mode
  00000006            00017 TEST_UPD        EQU     6       ; -1------  Time to update the test count-down timer
  00000005            00018 TEST_BUTTON     EQU     5       ; --1-----  Waiting for button release in test mode
  00000004            00019 ALL_OFF         EQU     4       ; ---1----  All SSRs are currently completely off
  00000003            00020 PRIV_FORBID     EQU     3       ; ----1---  Forbidden to enter privileged mode again
  00000002            00021 INHIBIT_OUTPUT  EQU     2       ; -----1--  Forbid any further output
  00000001            00022 MSB_ESC         EQU     1       ; ------1-  MSB Escape pending
  00000000            00023 LITERAL_ESC     EQU     0       ; -------1  Literal Escape pending
                      00064 #include "quizshow_config.inc"
                      00001 ; vim:set syntax=pic ts=8:
                      00002 ;
                      00003                 LIST n=90
                      00004 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00005 ;@@                                                                         @@
                      00006 ;@@  @@@   @   @  @@@@@  @@@@@                QUIZ SHOW HARDWARE CONTROLLER @@
                      00007 ;@@ @   @  @   @    @        @                FIRMWARE VERSION 4.0          @@ 
                      00008 ;@@ @   @  @   @    @       @                                               @@
                      00009 ;@@ @   @  @   @    @      @                  FOR HARDWARE REVISION 4.0     @@
                      00010 ;@@ @ @ @  @   @    @     @                   QSCC - QUIZ SHOW CONTESTANT   @@
                      00011 ;@@ @  @@  @   @    @    @                    QSRC - QUIZ SHOW REMOTE       @@
                      00012 ;@@ @@@@@   @@@   @@@@@  @@@@@                                              @@
                      00013 ;@@                                                                         @@
                      00014 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00015 ;
                      00016 ; Copyright (c) 2014 by Steven L. Willoughby, Aloha, Oregon, USA.  
                      00017 ; All Rights Reserved.  Quiz Show portions are unreleased trade secret
                      00018 ; information.
                      00019 ;
                      00020 ; Based on previous works by the same author, some of which are released
                      00021 ; under the Open Software License, version 3.0, which portions are available
                      00022 ; separately for free download.
                      00023 ;
                      00024 ; -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*-
                      00025 ;
                      00026 ; Configuration options.  Set these as desired and then re-assemble the
                      00027 ; code to produce the desired version of the ROM.
                      00028 ;
                      00029 ; 
                      00030 ;==============================================================================
                      00031 ; CONFIGURATION OPTIONS
                      00032 ;==============================================================================
                      00033 ;
                      00034 ; Note: set LUMOS_CHIP_TYPE to LUMOS_CHIP_QSCC or _QSRC in lumos_config.inc
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00035 ;
                      00065 #include "qscc_hook_main_pins.inc"
                      00001 ; vim:set syntax=pic ts=8:
                      00002 ;
                      00003                 LIST n=90
                      00004 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00005 ;@@                                                                         @@
                      00006 ;@@  @@@   @   @  @@@@@  @@@@@                QUIZ SHOW HARDWARE CONTROLLER @@
                      00007 ;@@ @   @  @   @    @        @                FIRMWARE VERSION 4.0          @@ 
                      00008 ;@@ @   @  @   @    @       @                                               @@
                      00009 ;@@ @   @  @   @    @      @                  FOR HARDWARE REVISION 4.0     @@
                      00010 ;@@ @ @ @  @   @    @     @                   QSCC - QUIZ SHOW CONTESTANT   @@
                      00011 ;@@ @  @@  @   @    @    @                    QSRC - QUIZ SHOW REMOTE       @@
                      00012 ;@@ @@@@@   @@@   @@@@@  @@@@@                                              @@
                      00013 ;@@                                                                         @@
                      00014 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00015 ;
                      00016 ; Copyright (c) 2014 by Steven L. Willoughby, Aloha, Oregon, USA.  
                      00017 ; All Rights Reserved.  Quiz Show portions are unreleased trade secret
                      00018 ; information.
                      00019 ;
                      00020 ; Based on previous works by the same author, some of which are released
                      00021 ; under the Open Software License, version 3.0, which portions are available
                      00022 ; separately for free download.
                      00023 ;
                      00024 ; -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*-
                      00025 ;
                      00026 ; This hooks into the Lumos device initialization code which sets up I/O pins.
                      00027 ; We want them arranged differently than the Lumos controllers do, but we put
                      00028 ; the QuizShow code here to keep the Lumos product clean and separate.
                      00029 ; 
                      00030         IF LUMOS_CHIP_TYPE != LUMOS_CHIP_QSCC && LUMOS_CHIP_TYPE != LUMOS_CHIP_QSRC
                      00031          ERROR "qscc_hook_main_pins only used for QS*C systems"
                      00032         ENDIF
                      00033 
                      00034 ;
                      00035 ; QSCC
                      00036 ;
                      00037                     IF LUMOS_CHIP_TYPE == LUMOS_CHIP_QSCC
                      00038 N_BUTTONS            EQU        6       ; X L A B C D
                      00039 BTN_IDX_X0           EQU        0
                      00040 BTN_IDX_L0           EQU        1
                      00041 BTN_IDX_A0           EQU        2
                      00042 BTN_IDX_B0           EQU        3
                      00043 BTN_IDX_C0           EQU        4
                      00044 BTN_IDX_D0           EQU        5
                      00045 PORT_X0              EQU        PORTA
                      00046 PORT_L0              EQU        PORTA
                      00047 PORT_A0              EQU        PORTA
                      00048 PORT_B0              EQU        PORTA
                      00049 PORT_C0              EQU        PORTA
                      00050 PORT_D0              EQU        PORTA
                      00051 BIT_X0               EQU        1
                      00052 BIT_L0               EQU        0
                      00053 BIT_A0               EQU        5
                      00054 BIT_B0               EQU        4
                      00055 BIT_C0               EQU        3
                      00056 BIT_D0               EQU        2
                      00057 
                      00058 QS_SENS_PORT         EQU        PORTA           ;      76543210
                      00059 QS_SENS_MASK         EQU        B'00111111'     ; RA:  00ABCDXL
                      00060 QS_SENS_CONF         EQU        B'00101000'     ; A+C -> config mode
                      00061 
                      00062 PORT_RX              EQU        PORTC
                      00063 BIT_RX               EQU        7
                      00064 
                      00065 HAS_T_R              EQU        1
                      00066 HAS_ACTIVE           EQU        0
                      00067 HAS_SENSORS          EQU        0
                      00068 HAS_OPTION           EQU        0
                      00069 HAS_STATUS_LEDS      EQU        0
                      00070 HAS_POWER_CTRL       EQU        0
                      00071 
                      00072 PLAT_T_R             EQU        LATC
                      00073 PORT_T_R             EQU        PORTC
                      00074 TRIS_T_R             EQU        TRISC
                      00075 BIT_T_R              EQU        3
                      00076 
                      00077 CHAN_X0R             EQU        .0
                      00078 CHAN_X0G             EQU        .1
                      00079 CHAN_X0B             EQU        .2
                      00080 CHAN_L0R             EQU        .3
                      00081 CHAN_L0Y             EQU        .4
                      00082 CHAN_L0G             EQU        .5
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00083 CHAN_A0L             EQU        .6
                      00084 CHAN_B0L             EQU        .7
                      00085 CHAN_C0L             EQU        .8
                      00086 CHAN_D0L             EQU        .9
                      00087 CHAN_F_R             EQU        .10
                      00088 CHAN_F_G             EQU        .11
                      00089 CHAN_F_B             EQU        .12
                      00090 CHAN_F_W             EQU        .13
                      00091 
                      00092 PLAT_0               EQU        LATC    ; XR
                      00093 PLAT_1               EQU        LATC    ; XG
                      00094 PLAT_2               EQU        LATC    ; XB
                      00095 PLAT_3               EQU        LATE    ; LR
                      00096 PLAT_4               EQU        LATE    ; LY
                      00097 PLAT_5               EQU        LATE    ; LG
                      00098 PLAT_6               EQU        LATB    ; AL
                      00099 PLAT_7               EQU        LATB    ; BL
                      00100 PLAT_8               EQU        LATB    ; CL
                      00101 PLAT_9               EQU        LATB    ; DL
                      00102 PLAT_10              EQU        LATB    ; FR
                      00103 PLAT_11              EQU        LATB    ; FG
                      00104 PLAT_12              EQU        LATB    ; FB
                      00105 PLAT_13              EQU        LATB    ; FW
                      00106 SSR_MAX              EQU        13
                      00107 
                      00108 BIT_0                EQU        2       ; XR
                      00109 BIT_1                EQU        1       ; XG
                      00110 BIT_2                EQU        0       ; XB
                      00111 BIT_3                EQU        2       ; LR
                      00112 BIT_4                EQU        0       ; LY
                      00113 BIT_5                EQU        1       ; LG
                      00114 BIT_6                EQU        7       ; AL
                      00115 BIT_7                EQU        6       ; BL
                      00116 BIT_8                EQU        5       ; CL
                      00117 BIT_9                EQU        4       ; DL
                      00118 BIT_10               EQU        3       ; FR
                      00119 BIT_11               EQU        2       ; FG
                      00120 BIT_12               EQU        1       ; FB
                      00121 BIT_13               EQU        0       ; FW
                      00122                     ELSE
                      00123                      IF LUMOS_CHIP_TYPE == LUMOS_CHIP_QSRC
  00000010            00124 N_BUTTONS             EQU       10      ; X0 L0 X1 L1 ... X4 L4
  00000000            00125 BTN_IDX_X0            EQU       0
  00000001            00126 BTN_IDX_L0            EQU       1
  00000002            00127 BTN_IDX_X1            EQU       2
  00000003            00128 BTN_IDX_L1            EQU       3
  00000004            00129 BTN_IDX_X2            EQU       4
  00000005            00130 BTN_IDX_L2            EQU       5
  00000006            00131 BTN_IDX_X3            EQU       6
  00000007            00132 BTN_IDX_L3            EQU       7
  00000008            00133 BTN_IDX_X4            EQU       8
  00000009            00134 BTN_IDX_L4            EQU       9
                      00135 
  00000F80            00136 QS_SENS_PORT          EQU       PORTA           ;      76543210
  0000003F            00137 QS_SENS_MASK          EQU       B'00111111'     ; RA:  00LXXLXL
  00000028            00138 QS_SENS_CONF          EQU       B'00101000'     ;        220011
  00000006            00139 QS_SENS_STAND         EQU       B'00000110'     ; L2+X0: CONF; X1+L0: stand
                      00140 
  00000F80            00141 PORT_X0               EQU       PORTA
  00000F80            00142 PORT_L0               EQU       PORTA
  00000F80            00143 PORT_X1               EQU       PORTA
  00000F80            00144 PORT_L1               EQU       PORTA
  00000F80            00145 PORT_X2               EQU       PORTA
  00000F80            00146 PORT_L2               EQU       PORTA
  00000F82            00147 PORT_X3               EQU       PORTC
  00000F83            00148 PORT_L3               EQU       PORTD
  00000F83            00149 PORT_X4               EQU       PORTD
  00000F82            00150 PORT_L4               EQU       PORTC
  00000003            00151 BIT_X0                EQU       3
  00000002            00152 BIT_L0                EQU       2
  00000001            00153 BIT_X1                EQU       1
  00000000            00154 BIT_L1                EQU       0
  00000004            00155 BIT_X2                EQU       4
  00000005            00156 BIT_L2                EQU       5
  00000004            00157 BIT_X3                EQU       4
  00000000            00158 BIT_L3                EQU       0
  00000004            00159 BIT_X4                EQU       4
  00000005            00160 BIT_L4                EQU       5
                      00161 
  00000F82            00162 PORT_RX               EQU       PORTC
  00000007            00163 BIT_RX                EQU       7
                      00164 
  00000001            00165 HAS_T_R               EQU       1
  00000000            00166 HAS_ACTIVE            EQU       0
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000000            00167 HAS_SENSORS           EQU       0
  00000000            00168 HAS_OPTION            EQU       0
  00000000            00169 HAS_STATUS_LEDS       EQU       0
  00000000            00170 HAS_POWER_CTRL        EQU       0
                      00171 
  00000F8B            00172 PLAT_T_R              EQU       LATC
  00000F82            00173 PORT_T_R              EQU       PORTC
  00000F94            00174 TRIS_T_R              EQU       TRISC
  00000003            00175 BIT_T_R               EQU       3
                      00176 
  00000000            00177 CHAN_X0R              EQU       .0
  00000001            00178 CHAN_X0G              EQU       .1
  00000002            00179 CHAN_X0B              EQU       .2
  00000003            00180 CHAN_L0R              EQU       .3
  00000004            00181 CHAN_X1R              EQU       .4
  00000005            00182 CHAN_X1G              EQU       .5
  00000006            00183 CHAN_X1B              EQU       .6
  00000007            00184 CHAN_L1R              EQU       .7
  00000008            00185 CHAN_X2R              EQU       .8
  00000009            00186 CHAN_X2G              EQU       .9
  0000000A            00187 CHAN_X2B              EQU       .10
  0000000B            00188 CHAN_L2R              EQU       .11
  0000000C            00189 CHAN_X3R              EQU       .12
  0000000D            00190 CHAN_X3G              EQU       .13
  0000000E            00191 CHAN_X3B              EQU       .14
  0000000F            00192 CHAN_L3R              EQU       .15
  00000010            00193 CHAN_X4R              EQU       .16
  00000011            00194 CHAN_X4G              EQU       .17
  00000012            00195 CHAN_X4B              EQU       .18
  00000013            00196 CHAN_L4R              EQU       .19
  00000F8B            00197 PLAT_0                EQU       LATC    ; X0R
  00000F8B            00198 PLAT_1                EQU       LATC    ; X0G
  00000F8B            00199 PLAT_2                EQU       LATC    ; X0B
  00000F8D            00200 PLAT_3                EQU       LATE    ; L0R
  00000F8A            00201 PLAT_4                EQU       LATB    ; X1R
  00000F8A            00202 PLAT_5                EQU       LATB    ; X1G
  00000F8A            00203 PLAT_6                EQU       LATB    ; X1B
  00000F8A            00204 PLAT_7                EQU       LATB    ; L1R
  00000F8A            00205 PLAT_8                EQU       LATB    ; X2R
  00000F8A            00206 PLAT_9                EQU       LATB    ; X2G
  00000F8A            00207 PLAT_10               EQU       LATB    ; X2B
  00000F8D            00208 PLAT_11               EQU       LATE    ; L2R
  00000F8C            00209 PLAT_12               EQU       LATD    ; X3R
  00000F8C            00210 PLAT_13               EQU       LATD    ; X3G
  00000F8C            00211 PLAT_14               EQU       LATD    ; X3B
  00000F8D            00212 PLAT_15               EQU       LATE    ; L3R
  00000F8A            00213 PLAT_16               EQU       LATB    ; X4R
  00000F8C            00214 PLAT_17               EQU       LATD    ; X4G
  00000F8C            00215 PLAT_18               EQU       LATD    ; X4B
  00000F8C            00216 PLAT_19               EQU       LATD    ; L4R
  00000019            00217 SSR_MAX               EQU       19
                      00218 
  00000002            00219 BIT_0                 EQU       2       ; X0R
  00000001            00220 BIT_1                 EQU       1       ; X0G
  00000000            00221 BIT_2                 EQU       0       ; X0B
  00000002            00222 BIT_3                 EQU       2       ; L0R
  00000007            00223 BIT_4                 EQU       7       ; X1R
  00000006            00224 BIT_5                 EQU       6       ; X1G
  00000005            00225 BIT_6                 EQU       5       ; X1B
  00000004            00226 BIT_7                 EQU       4       ; L1R
  00000003            00227 BIT_8                 EQU       3       ; X2R
  00000002            00228 BIT_9                 EQU       2       ; X2G
  00000001            00229 BIT_10                EQU       1       ; X2B
  00000000            00230 BIT_11                EQU       0       ; L2R
  00000007            00231 BIT_12                EQU       7       ; X3R
  00000006            00232 BIT_13                EQU       6       ; X3G
  00000005            00233 BIT_14                EQU       5       ; X3B
  00000001            00234 BIT_15                EQU       1       ; L3R
  00000000            00235 BIT_16                EQU       0       ; X4R
  00000003            00236 BIT_17                EQU       3       ; X4G
  00000001            00237 BIT_18                EQU       1       ; X4B
  00000002            00238 BIT_19                EQU       2       ; L4R
                      00239                      ENDIF
                      00240                     ENDIF
                      00241 
                      00066 #include "qscc_bits.inc"
                      00001 ; vim:set syntax=pic ts=8:
                      00002 ;
                      00003                 LIST n=90
                      00004 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00005 ;@@                                                                         @@
                      00006 ;@@  @@@   @   @  @@@@@  @@@@@                QUIZ SHOW HARDWARE CONTROLLER @@
                      00007 ;@@ @   @  @   @    @        @                FIRMWARE VERSION 4.0          @@ 
                      00008 ;@@ @   @  @   @    @       @                                               @@
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00009 ;@@ @   @  @   @    @      @                  FOR HARDWARE REVISION 4.0     @@
                      00010 ;@@ @ @ @  @   @    @     @                   QSCC - QUIZ SHOW CONTESTANT   @@
                      00011 ;@@ @  @@  @   @    @    @                    QSRC - QUIZ SHOW REMOTE       @@
                      00012 ;@@ @@@@@   @@@   @@@@@  @@@@@                                              @@
                      00013 ;@@                                                                         @@
                      00014 ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                      00015 ;
                      00016 ; Copyright (c) 2014 by Steven L. Willoughby, Aloha, Oregon, USA.  
                      00017 ; All Rights Reserved.  Quiz Show portions are unreleased trade secret
                      00018 ; information.
                      00019 ;
                      00020 ; Based on previous works by the same author, some of which are released
                      00021 ; under the Open Software License, version 3.0, which portions are available
                      00022 ; separately for free download.
                      00023 ;
                      00024 ; -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*- -* -*- -*- -*- -*- -*-
                      00025 ;
                      00026 ; This defines the bits for bit-encoded flags, etc.
                      00027 ; 
                      00028 #ifndef QSCC_BITS_INC
                      00029 #define QSCC_BITS_INC
                      00030 
                      00031         IF LUMOS_CHIP_TYPE != LUMOS_CHIP_QSCC && LUMOS_CHIP_TYPE != LUMOS_CHIP_QSRC
                      00032          ERROR "qscc_bits only used for QS*C systems"
                      00033         ENDIF
                      00034                                         ; QUIZSHOW_FLAGS
  00000002            00035 QS_FLAG_DOING120 EQU    2               ; -----1--      Doing "every 1/120 sec tasks" now
  00000001            00036 QS_FLAG_ON_120_S EQU    1               ; ------1-      Need to do "every 1/120 sec tasks" now
  00000000            00037 QS_FLAG_SCANNING EQU    0               ; -------1      Scanner running
                      00038 
                      00039                                         ; BTN_??_FLAGS
  00000003            00040 BTN_FLG_ACTIVE  EQU     3               ; ----1---      Button being pressed now
  00000002            00041 BTN_FLG_LOCKED  EQU     2               ; -----1--      Button locked out
  00000001            00042 BTN_FLG_MASKED  EQU     1               ; ------1-      Button ignored
  00000000            00043 BTN_FLG_PRESSED EQU     0               ; -------1      Button pressed already
                      00044 
  00000C00            00045 QUIZSHOW_DATA   EQU     0xC00
                      00046 #endif
                      00067         RADIX   DEC
  0000                00068         EXTERN  QUIZSHOW_FLAGS
  0000                00069         EXTERN  QS_BTN_TMR_T
  0000                00070         EXTERN  QS_BTN_TMR_U
  0000                00071         EXTERN  SSR_STATE
  0000                00072         GLOBAL  BTN_X0_TIME_T
  0000                00073         GLOBAL  BTN_X0_TIME_U
  0000                00074         GLOBAL  BTN_X0_TIME_H
  0000                00075         GLOBAL  BTN_X0_TIME_L
  0000                00076         GLOBAL  BTN_X0_FLAGS
                      00077 ;#include "serial-io.inc"
                      00078 
                      00079 ; Works on Software Alchemy Quiz Show QSCC and QSRC boards revision 4.0.
                      00080 ;
                      00081 ; N.B. THE BOARD SELECT BITS IN LUMOS_CONFIG.INC MUST BE SELECTED
                      00082 ; FOR THE TARGET CONFIGURATION!  EACH ROM IS DIFFERENT!
                      00083 ;
                      00084 ; Target Microcontroller is PIC18F4685, Q=40MHz (100nS instruction cycle)
                      00085 ;
                      00086 ; Serial control (RS-485) at 19.2kbps by default.
                      00087 ; Configurable from 300 to 250000 baud.
                      00088 ;
                      00089 ; OPTION BUTTON:
                      00090 ; XXX The Lumos controllers have an OPTION button which starts configuration
                      00091 ; XXX mode.  QS*C boards don't have those, so instead boot the unit while
                      00092 ; XXX holding down the A and D buttons (QSCC) or the L2 and L0 buttons (QSRC)
                      00093 ; XXX to enter configuration mode.
                      00094 ; 
                      00095 ;=============================================================================
                      00096 ; IMPLEMENTATION NOTES
                      00097 ;-----------------------------------------------------------------------------
                      00098 ;
                      00099 ; The QUIZSHOW controller firmware consists of a number of somewhat 
                      00100 ; independent subsystems:
                      00101 ; 
                      00102 ; LUMOS
                      00103 ;       The QSCC and QSRC boards are also Lumos SSR controllers which implement
                      00104 ;       most of the standard Lumos commands.  The various lights used by the
                      00105 ;       quiz show are mapped to Lumos channels.  The Lumos firmware is included
                      00106 ;       into the quizshow firmware, with some special switches enabled to adapt
                      00107 ;       it to this hardware.
                      00108 ;
                      00109 ; START
                      00110 ;       Initializes the microcontroller, starts up the required peripherals,
                      00111 ;       and enters the main loop
                      00112 ;
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00113 ; SIO
                      00114 ;       Handles all serial I/O operations in the background (interrupt-driven)
                      00115 ;       so the rest of the code only needs to be concerned with higher-level
                      00116 ;       reads and writes.  Buffers hold 256 characters each of input and output.
                      00117 ;
                      00118 ; ISR
                      00119 ;       The interrupt service routine manages a set of counters and timers:
                      00120 ;       1. We run a 120 Hz timer which provides timing for the dimmers.
                      00121 ;
                      00122 ; MAIN_LOOP
                      00123 ;       Manages the display of the readerboards.
                      00124 ;       Updates the status of the SSR lines if it's time to do so
                      00125 ;       Receives a character from the serial line if one's waiting
                      00126 ;
                      00127 ; INTERPRETER
                      00128 ;       When a byte is received on the serial line, it is processed by
                      00129 ;       a small state machine.  The current state is held in YY_STATE (named
                      00130 ;       in honor of the venerable yacc).
                      00131 ;
                      00132 ;-----------------------------------------------------------------------------
                      00133 ; Command Protocol:
                      00134 ;                     ___7______6______5______4______3______2______1______0__
                      00135 ; Command Byte:      |      |                    |                           |
                      00136 ;                    |   1  |    Command code    |   Target device address   |
                      00137 ;                    |______|______|______|______|______|______|______|______|
                      00138 ;
                      00139 ; Any byte with its MSB set is the beginning of a command.  If the target 
                      00140 ; device matches this unit's address, the state machine kicks into gear and
                      00141 ; processes the command (which may require some following data bytes, all
                      00142 ; of which must have their MSB cleared).  Otherwise, the unit ignores the
                      00143 ; byte.
                      00144 ;
                      00145 ;                     ___7______6______5______4______3______2______1______0__
                      00146 ; Extended Command:  |      |                    |                           |
                      00147 ;                    |   1  |          7         |   Target device address   |
                      00148 ;                    |______|______|______|______|______|______|______|______|
                      00149 ;                    |      |                                                |
                      00150 ;                    |   0  |                  Command code                  |
                      00151 ;                    |______|______|______|______|______|______|______|______|
                      00152 ;
                      00153 ; The most common commands are given ID 0-6 so that they may be sent in as few
                      00154 ; bytes as possible (as few as a single byte), but we have more than 8 commands
                      00155 ; so we have an extended code.  If the command code is 7 (all bits set), then
                      00156 ; the following byte contains the actual command code which may be any value
                      00157 ; from 0-127.
                      00158 ;
                      00159 ;                     ___7______6______5______4______3______2______1______0__
                      00160 ; Data Byte:         |      |                                                |
                      00161 ;                    |   0  |                      Data                      |
                      00162 ;                    |______|______|______|______|______|______|______|______|
                      00163 ;
                      00164 ; Any byte with its MSB cleared is a data byte, and is ignored unless we're
                      00165 ; in the middle of interpreting a multi-byte command, in which case it's interpreted
                      00166 ; appropriately as data supporting the command being executed.  This way, other
                      00167 ; devices which share the same protocol format but not necessarily a compatible
                      00168 ; command set may safely know which bytes can be ignored without knowing the
                      00169 ; details of each other's command sets.
                      00170 ;
                      00171 ; Two special bytes are recognized:
                      00172 ;
                      00173 ;                     ___7______6______5______4______3______2______1______0__
                      00174 ; MSB Escape:        |      |                                                |
                      00175 ;                    |   0  |   1      1      1      1      1      1      0  |
                      00176 ;                    |______|______|______|______|______|______|______|______|
                      00177 ;
                      00178 ; If this ($7E) byte is received, it is ignored but the next byte received will
                      00179 ; have its MSB bit set.  This allows data bytes to have full 8-bit values without
                      00180 ; violating the communication protocol described above.  That second byte is not
                      00181 ; interpreted further.
                      00182 ;
                      00183 ;                     ___7______6______5______4______3______2______1______0__
                      00184 ; Literal Escape     |      |                                                |
                      00185 ;                    |   0  |   1      1      1      1      1      1      1  |
                      00186 ;                    |______|______|______|______|______|______|______|______|
                      00187 ;
                      00188 ; If this ($7F) byte is received, it is ignored but the next byte is accepted
                      00189 ; as-is without further interpretation.
                      00190 ;
                      00191 ; Specific Example Cases of interest:
                      00192 ;       Sequence    Resulting byte
                      00193 ;       $7E $7E     $FE
                      00194 ;       $7E $7F     $FF
                      00195 ;       $7F $7E     $7E
                      00196 ;       $7F $7F     $7F
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00197 ;
                      00198 ; A command byte (received with MSB already set) trumps all of the above.  It is
                      00199 ; taken as the start of a command and the escape sequence in progress is canceled.
                      00200 ;
                      00201 ; Commands recognized (L indicates Lumos commands):
                      00202 ;
                      00203 ;   COMMAND  CODE  BITS
                      00204 ;L  BLACKOUT 0     1000aaaa
                      00205 ;L  ON_OFF   1     1001aaaa 0scccccc            Turn channel <c> on (<s>=1) or off (<s>=0)
                      00206 ;L  SET_LVL  2     1010aaaa 0hcccccc 0vvvvvvv    Set dimmer level <v>:<h> on channel <c>
                      00207 ;L  BULK_UPD 3     1011aaaa 0mcccccc ...                Bulk-upload multiple channel levels
                      00208 ;L  RAMP_LVL 4     1100aaaa Cdcccccc ...         Ramp channel <c> smoothly up (<d>=1) or down (<C>=1 cyc
                            le)
                      00209 ;   SCAN_ST  5     1101aaaa                      Start scanning buttons
                      00210 ;   SCAN_Q   6     1110aaaa 0000000s             Read scan results / Stop
                      00211 ;   EXTENDED 7     1111aaaa                      Extended command, decoded further in next byte
                      00212 ;L@ SLEEP    7+0   1111aaaa 00000000 01011010 01011010  Put unit to sleep
                      00213 ;L@ WAKE     7+1   1111aaaa 00000001 01011010 01011010  Take unit out of sleep mode
                      00214 ;L  SHUTDOWN 7+2   1111aaaa 00000010 01011000 01011001  Take unit completely offline
                      00215 ;L< QUERY    7+3   1111aaaa 00000011 00100100 01010100  Report device status
                      00216 ;X! DEF_SEQ  7+4   1111aaaa 00000100 0iiiiiii ...       Define sequence <i>
                      00217 ;X  EXEC_SEQ 7+5   1111aaaa 00000101 0iiiiiii           Execute sequence <i> (0=stop)
                      00218 ;X! CLR_SEQ  7+8   1111aaaa 00001000 01000011 01000001  Erase all stored sequences
                      00219 ;L  XPRIV    7+9   1111aaaa 00001001                    Forbid priviliged mode
                      00220 ;            7+10  1111aaaa 00001010                    Reserved for future use
                      00221 ;             :        :        :                           :     :     :    : 
                      00222 ;            7+28  1111aaaa 00011100                    Reserved for future use                 
                      00223 ;   OUT_SCAN 7+29  1111aaaa 00011101                    SCAN_Q reply
                      00224 ;L  OUT_NAK  7+30  1111aaaa 00011110                    QUERY NAK                               
                      00225 ;L  OUT_RPLY 7+31  1111aaaa 00011111 ...                Reply to QUERY command_________________ 
                      00226 ;   IC_***** 7+32  11110000 00100000                    Reserved (Lumos internal)
                      00227 ;             :        :        :                           :     :   :      :         ////////
                      00228 ;            7+63  11110000 00111111                    Reserved for new commands______////////
                      00229 ;*! CF_PHASE 7+64  1111aaaa 010000pp 0ppppppp 01010000 01001111   Phase offset=<p>       CONFIG
                      00230 ;*! CF_ADDR  7+96  1111aaaa 0110AAAA 01001001 01000001 01000100   Change address to <A>  ||||||
                      00231 ;*  CF_NOPRV 7+112 1111aaaa 01110000                              Leave privileged mode  ||||||
                      00232 ;*  CF_CONF  7+113 1111aaaa 01110001 ...                          Configure device       ||||||
                      00233 ;*! CF_BAUD  7+114 1111aaaa 01110010 0bbbbbbb 00100110            Set baud rate to <b>   ||||||
                      00234 ;*! CF_RESET 7+115 1111aaaa 01110011 00100100 01110010            Reset factory defaults ||||||
                      00235 ;*  CF_XPRIV 7+116 1111aaaa 01110100                              Forbid priviliged mode ||||||
                      00236 ;*           7+117 1111aaaa 01110101                     Reserved for future config cmd  ||||||
                      00237 ;*                     :        :                            :     :     :      :    :   ||||||
                      00238 ;*           7+127 1111aaaa 01111111                     Reserved for future config cmd__||||||
                      00239 ;
                      00240 ; Legend:
                      00241 ;   X Not yet implemented; planned for future; subject to change
                      00242 ;   @ Unit may automatically take this action
                      00243 ;   * Privileged configuration-mode command
                      00244 ;   ! Permanent effect (written to EEPROM)
                      00245 ;   < Command generates response data (back to host)
                      00246 ;   a Device address (0-15)
                      00247 ;   b Baud rate code (0-127), but units may only define a small subset of those values
                      00248 ;   c Output channel (0-63, but unit may only support a lesser number)
                      00249 ;   d Direction: up (<d>=1) or down (<d>=0).
                      00250 ;   h High-res level bit (LSB of 8-bit value when in high-res mode)
                      00251 ;   m Mode (1=high-res, 0=low-res)
                      00252 ;   n Number of items affected
                      00253 ;   s Output state: 0=off, 1=on
                      00254 ;   v Value of dimmer (0-127) (most significant 7 bits of dimmer value)
                      00255 ;
                      00256 ; Payloads for many-byte commands
                      00257 ;
                      00258 ; BULK_UPD:  00cccccc 0nnnnnnn v0 v1 v2 ... vn 01010101
                      00259 ;       Updates <n>+1 channels starting at <c>, giving <v> values for each as per SET_LVL.
                      00260 ;
                      00261 ; RAMP_LVL:  Cdcccccc 0sssssss 0ttttttt   Channel <c> up/down in <s>+1 steps every <t>+1/120 sec
                      00262 ;
                      00263 ; DEF_SEQ:   0iiiiiii 0nnnnnnn (...)*<n+1> 01000100 01110011  Define sequence <i> of length <n+1>
                      00264 ;                                                             0 is boot sequence, 1-63 is EEPROM
                      00265 ;                                                             64-127 is RAM.
                      00266 ;
                      00267 ; CF_BAUD:   Values recognized:
                      00268 ;       00000000 ($00)      300 baud
                      00269 ;       00000001 ($01)      600
                      00270 ;       00000010 ($02)    1,200
                      00271 ;       00000011 ($03)    2,400
                      00272 ;       00000100 ($04)    4,800
                      00273 ;       00000101 ($05)    9,600
                      00274 ;       00000110 ($06)   19,200
                      00275 ;       00000111 ($07)   38,400
                      00276 ;       00001000 ($08)   57,600
                      00277 ;       00001001 ($09)  115,200
                      00278 ;       00001010 ($0A)  250,000
                      00279 ;
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00280 ;
                      00281 ; Response packet from QUERY command (37 bytes):
                      00282 ; note the ROM version byte also serves to indicate the format of the response
                      00283 ; bytes which follow.  If the query packet format changes, the ROM version byte
                      00284 ; MUST also change.
                      00285 ;
                      00286 ;    1111aaaa 00011111 00110000 0ABCDdcc 0ccccccc 0ABCDqsf 0ABCDXpp 0ppppppp 
                      00287 ;        \__/           \_/\__/  \__/|\_________/  \__/|||  \__/|\_________/  
                      00288 ;          |             maj |     | |   |           | |||   |  |      `--phase
                      00289 ;          `--reporting    minor   | |   `--DMX      | |||   |  `--config locked?
                      00290 ;              unit addr  rom      | |      channel  | |||   `--active
                      00291 ;                         vers.    | |               | ||`--mem full?
                      00292 ;                                  | `--DMX mode?    | |`--sleeping?
                      00293 ;                                  `--configured     | `--config mode?
                      00294 ;                                                    `--masks
                      00295 ;
                      00296 ;    0eeeeeee 0eeeeeee 0MMMMMMM 0MMMMMMM 0X0iiiii 0xxxxxxx 
                      00297 ;     \______________/  \______________/  | \___/  \_____/
                      00298 ;        `--EEPROM free    `--RAM free    |   |       `--executing seq.
                      00299 ;                                         |   `--device model
                      00300 ;                                         `--seq running?
                      00301 ;
                      00302 ;    0owE0000 0IIIIIII 0iiiiiii 0PPPPPPP        Sensor trigger info for A
                      00303 ;    0owE0001 0IIIIIII 0iiiiiii 0PPPPPPP        Sensor trigger info for B
                      00304 ;    0owE0010 0IIIIIII 0iiiiiii 0PPPPPPP        Sensor trigger info for C
                      00305 ;    0owE0011 0IIIIIII 0iiiiiii 0PPPPPPP        Sensor trigger info for D
                      00306 ;
                      00307 ;    0fffffff 0fffffff 000000pp 0ppppppp ssssssss ssssssss 00110011
                      00308 ;    \______/ \______/       \_________/ \______S/N______/
                      00309 ;        |        |               `--phase (channels 24-47)
                      00310 ;        |        `--fault code (channels 24-47)
                      00311 ;        `--fault code (channels 0-23)
                      00312 ;
                      00313 ; Response to SCAN_Q query commands:
                      00314 ; Note that the ROM version dictates these changes too, so if this format
                      00315 ; changes the ROM version MUST change (as reported in the QUERY response
                      00316 ; above).
                      00317 ;                               31       23       15       7      0
                      00318 ;    1111aaaa 00011101 0R0nnnnn tttttttt tttttttt tttttttt tttttttt ...
                      00319 ;        \__/           | \___/ \_________________________________/
                      00320 ;          |            |   |                    | (x n)
                      00321 ;          `--reporting | number of    0=not pressed yet
                      00322 ;              unit addr| buttons     >0=microseconds elapsed before press
                      00323 ;                       | reported
                      00324 ;                       0=scanning stopped
                      00325 ;                       1=scanner is still running
                      00326 ;                      
                      00327 ;    01010001 00101010 
                      00328 ;
                      00329 ; QSCC sends 6 buttons: X, L, A, B, C, D.
                      00330 ; QSRC sends 10 buttons: X0, L0, X1, L1, X2, L2, X3, L3, X4, L4.  
                      00331 ;
                      00332 ; Also note that the controller is allowed to send OUT_NAK packets to the
                      00333 ; host in response to QUERY commands.  This does not complete the exchange,
                      00334 ; but serves to ask the host to continue waiting if the device won't be able
                      00335 ; to reply to the QUERY for long enough that it risks a timeout.  The host
                      00336 ; is under no obligation to respect the OUT_NAK packets.
                      00337 ;
                      00338 ;   1111aaaa 00011110 
                      00339 ;
                      00340 ; A controller MUST never send data except in response to an explicit
                      00341 ; request from the host.  Controllers MUST immediately cease sending
                      00342 ; data upon receiving any bytes on the network (this indicates that
                      00343 ; the host is no longer waiting for a reply but has moved on to something
                      00344 ; else or is querying another device now).  No further data may be sent
                      00345 ; until again explicitly asked for.
                      00346 ;
                      00347 ;
                      00348 ;                     _______________________________________________________
                      00349 ; Channel ID:        |      |      |                                         |
                      00350 ;                    |  0   | ON   |               Channel ID                |
                      00351 ;                    |______|______|______|______|______|______|______|______|
                      00352 ; The ON bit <6> determines whether the channel is being turned on (1) or 
                      00353 ; off (0) for the "Set/clear single channel" command.  it is ignored when
                      00354 ; setting the channel to a specific dimmer value.
                      00355 ;
                      00356 ;=============================================================================
                      00357 ; HARDWARE DESCRIPTION
                      00358 ;-----------------------------------------------------------------------------
                      00359 ;
                      00360 ; The controllers use the PIC18F4685 microcontroller, and have identical
                      00361 ; circuit boards, although the assignment of I/O pins is very different
                      00362 ; between them.
                      00363 ;
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00364 ;  PIC18F4685 Microcontroller I/O pin assignments:
                      00365 ;
                      00366 ; QSRC    QSCC           ________   _________         QSCC    QSRC 
                      00367 ; BOARD:  BOARD:        |o       \_/         |        BOARD:  BOARD:
                      00368 ; /RESET  /RESET -->  1 | /MCLR RE3  PGD RB7 | 40 --> /AL     /X1R   
                      00369 ; /L1     /L     -->  2 | RA0        PGC RB6 | 39 --> /BL     /X1G    
                      00370 ; /X2     /X     -->  3 | RA1        PGM RB5 | 38 --> /CL     /X1B   
                      00371 ; /L0     /D     -->  4 | RA2            RB4 | 37 --> /DL     /L1R  
                      00372 ; /X0     /C     -->  5 | RA3            RB3 | 36 --> /FR     /X2R  
                      00373 ; /X2     /B     -->  6 | RA4       INT2 RB2 | 35 --> /FG     /X2G   
                      00374 ; /L2     /A     -->  7 | RA5       INT1 RB1 | 34 --> /FB     /X2B    
                      00375 ; /L2R    /LY    <--  8 | RE0       INT0 RB0 | 33 --> /FW     /X4R     
                      00376 ; /L3R    /LG    <--  9 | RE1            VDD | 32 --- +5V       
                      00377 ; /L0R    /LR    <-- 10 | RE2            VSS | 31 --- GND      
                      00378 ;            +5V --- 11 | VDD            RD7 | 30 --> D7      /X3R  
                      00379 ;            GND --- 12 | VSS            RD6 | 29 --> D6      /X3G  
                      00380 ;           xtal --- 13 | OSC            RD5 | 28 --> D5      /X3B  
                      00381 ;             +----- 14 | OSC            RD4 | 27 --- D4 ->   /X4 <-
                      00382 ; /X0B    /XB    <-- 15 | RC0         RX RC7 | 26 <-- Serial RxD
                      00383 ; /X0G    /XG    <-- 16 | RC1         TX RC6 | 25 --> Serial TxD
                      00384 ; /X0R    /XR    <-- 17 | RC2            RC5 | 24 --- PS0 ->  /L4 <-
                      00385 ; T/R     T/R    <-- 18 | RC3            RC4 | 23 --- PS1 ->  /X3 <- 
                      00386 ; /L3 ->  D0 <-  --- 19 | RD0            RD3 | 22 --> D3      /X4G  
                      00387 ; /X4B    D1     <-- 20 | RD1            RD2 | 21 --> D2      /L4R  
                      00388 ;                       |____________________|
                      00389 ;
                      00390 ;
                      00391 ; ========================================================================
                      00392 ; PROGRAM MEMORY MAP
                      00393 ; ______________________________________________________________________________
                      00394 ;
                      00395 ; 14K50 4685    _________________ ___
                      00396 ; $00000 $00000 | RESET Vector    | V_RST
                      00397 ; $00007 $00007 |_________________|___
                      00398 ; $00008 $00008 | High Int Vector | V_INT_H
                      00399 ; $00017 $00017 |_________________|___
                      00400 ; $00018 $00018 | Low Int Vector  | V_INT_L
                      00401 ; $0001F $0001F |_________________|
                      00402 ; $00020 $00020 |/////////////////|
                      00403 ; $000FF $000FF |/////////////////|___
                      00404 ; $00100 $00100 | Boot code       | _BOOT
                      00405 ;               |.................|___
                      00406 ;               | Interrupt hand- | _INT
                      00407 ;               |  lers           |      
                      00408 ;               |/////////////////|
                      00409 ; $007FF $007FF |/////////////////|___
                      00410 ; $00800 $00800 | Mainline code   | _MAIN
                      00411 ;               |.................|___
                      00412 ;           ??? | Device init     | LUMOS_CODE_INIT
                      00413 ;               |_________________|___
                      00414 ;           ??? | Serial I/O      | _SIO_CODE
                      00415 ;               | Module          |
                      00416 ;               |_________________|___
                      00417 ;               |/////////////////|
                      00418 ;               |/////////////////|
                      00419 ;               |/////////////////|
                      00420 ;               |/////////////////|
                      00421 ;               |/////////////////|___
                      00422 ; $02E00 $14000 | EEPROM defaults | _MAIN_EEPROM_TBL
                      00423 ; $02EFF $14FFF |_________________|___
                      00424 ; $02F00 $15000 |Serial I/O Mod   | _SIO_LOOKUP_TABLES
                      00425 ;               |lookup tables    |
                      00426 ;        $150FF |_________________|___
                      00427 ;        $15100 |                 |
                      00428 ;               |                 |
                      00429 ; $02FEF $16FEF |_________________|___
                      00430 ; $02FF0 $16FF0 |System Mfg Data  | _SYSTEM_MFG_DATA
                      00431 ; $02FFF $16FFF |_________________|___
                      00432 ; $03000 $17000 |                 | 
                      00433 ; $03FFF $17FFF |_________________|___
                      00434 ;               |/////////////////|
                      00435 ;               |/////////////////|
                      00436 ;$1FFFFF$1FFFFF |/////////////////|___
                      00437 ;
                      00438 ;
                      00439 ; ========================================================================
                      00440 ; DATA MEMORY MAP (4685)
                      00441 ;
                      00442 ;       _________________ ___ ___ ___ ___ ___ ___ ___ ___
                      00443 ; $000 | global state,   | _ADATA            BANK 0
                      00444 ; $05F | ISR data, etc.  |                (ACCESS AREA)
                      00445 ;      |.................|...............................
                      00446 ; $060 |                 |                   
                      00447 ;      |_________________|___ ___ ___ ___ ___ ___ ___ ___
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00448 ; $100 | Serial I/O TxD  | _SIO_TXBUF_DATA   BANK 1
                      00449 ;      | ring buffer     |
                      00450 ;      |_________________|___ ___ ___ ___ ___ ___ ___ ___
                      00451 ; $200 | Serial I/O RxD  | _SIO_RXBUF_DATA   BANK 2
                      00452 ;      | ring buffer     |
                      00453 ;      |_________________|___ ___ ___ ___ ___ ___ ___ ___
                      00454 ; $300 | Serial I/O mod  | _SIO_VAR_DATA     BANK 3
                      00455 ;      | variable space  |
                      00456 ;      |_________________|___ ___ ___ ___ ___ ___ ___ ___
                      00457 ; $400 | SSR state data  | _SSR_DATA         BANK 4
                      00458 ;      |                 |
                      00459 ;      |_________________|___ ___ ___ ___ ___ ___ ___ ___
                      00460 ; $500 | Parser buffer   | _MAINDATA         BANK 5
                      00461 ;      |.................|
                      00462 ; $5?? |                 |
                      00463 ;      |_________________|___ ___ ___ ___ ___ ___ ___ ___
                      00464 ; $600 | Stored sequences| _SEQ_DATA         BANK 6
                      00465 ;      | (1792 bytes)    |
                      00466 ;              .
                      00467 ;              .                 
                      00468 ;              .                
                      00469 ;      |                 |
                      00470 ;      |                 |
                      00471 ;      |_________________|___ ___ ___ ___ ___ ___ ___ ___
                      00472 ; $C00 | Quizshow Data   | _QUIZSHOW_DATA    BANK C
                      00473 ;      |                 |
                      00474 ;      |_________________|___ ___ ___ ___ ___ ___ ___ ___
                      00475 ; $D00 |                 |                   BANK D
                      00476 ;      | CAN special     |
                      00477 ;      | function        |___ ___ ___ ___ ___ ___ ___ ___
                      00478 ; $E00 | registers       |                   BANK E
                      00479 ;      | (not used for   |
                      00480 ;      | Lumos)          |___ ___ ___ ___ ___ ___ ___ ___
                      00481 ; $F00 |                 |                   BANK F
                      00482 ;      |                 |
                      00483 ; $F5F |.................|...............................
                      00484 ; $F60 | Special Function|                (ACCESS AREA)
                      00485 ;      | (device) regis- |
                      00486 ;      | ters            |
                      00487 ; $FFF |_________________|___ ___ ___ ___ ___ ___ ___ ___
                      00488 ;
                      00489 ; ========================================================================
                      00490 ; EEPROM MEMORY
                      00491 ;
                      00492 ;
                      00493 ;       ______________            ______________ 
                      00494 ; $000 |_0xFF_________|     $010 | Saved        |
                      00495 ; $001 |_Baud_Rate____|     $011 | Sequence     |
                      00496 ; $002 |_Device_ID____|     $012 | Storage      |
                      00497 ; $003 | Phase     MSB|     $013 |       |      |
                      00498 ; $004 |_Offset____LSB|     $014 |       |      |
                      00499 ; $005 |_DMX_Slot__MSB|     $015 |       |      |
                      00500 ; $006 |_DMX_Slot__LSB|       .          .
                      00501 ; $007 |_Sensor_cfg___|       .          .
                      00502 ; $008 |______________|       .          .
                      00503 ; $009 |______________|     $3F9 |       |      |
                      00504 ; $00A |______________|     $3FA |       |      |
                      00505 ; $00B |______________|     $3FB | (1008 |      |
                      00506 ; $00C |______________|     $3FC | bytes)|      |
                      00507 ; $00D |______________|     $3FD |       |      |
                      00508 ; $00E |______________|     $3FE |       |      |
                      00509 ; $00F |_0x42_________|     $3FF |_______V______|
                      00510 ;
                      00511 ;
                      00512 
                      00513 ; ========================================================================
                      00514 ; DEVICES USED
                      00515 ;
                      00516 ; TMR0 L  120 Hz interrupt source (for boards without zero-crossing detector)
                      00517 ; TMR1
                      00518 ; TMR2 L  Dimmer slice timer (1/260 of a 120 Hz half-cycle)
                      00519 ; TMR3 L  Break detector for DMX reception
                      00520 ; UART L  SIO module
                      00521 ;=============================================================================
                      00522 ;
                      00523 ;------------------------------------------------------------------------------
                      00524 ; Significant Registers (ACCESS BANK)
                      00525 ;------------------------------------------------------------------------------
                      00526 ;
                      00527 ;                     ___7______6______5______4______3______2______1______0__
                      00528 ; ISR_TMPL_STATUS    |                                                       |
                      00529 ;                    | Temporary storage for STATUS register in low-pri ISR  |
                      00530 ;                    |______|______|______|______|______|______|______|______|
                      00531 ; ISR_TMPL_BSR       |                                                       |
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00532 ;                    | Temporary storage for BSR register in low-priority ISR|
                      00533 ;                    |______|______|______|______|______|______|______|______|
                      00534 ; ISR_TMPL_WREG      |                                                       |
                      00535 ;                    | Temporary storage for W register in low-priority ISR  |
                      00536 ;                    |______|______|______|______|______|______|______|______|
                      00537 ; MY_ADDRESS         |                           |                           |
                      00538 ;                    |                           |       Unit address        |
                      00539 ;                    |______|______|______|______|______|______|______|______|
                      00540 ; PHASE_OFFSETH      |                                                       |
                      00541 ;                    |               Phase offset value (MSB)                |
                      00542 ;                    |______|______|______|______|______|______|______|______|
                      00543 ; PHASE_OFFSETL      |                                                       |
                      00544 ;                    |               Phase offset value (LSB)                |
                      00545 ;                    |______|______|______|______|______|______|______|______|
                      00546 ; SSR_STATE          |      |      |SLICE |PRIV_ |SLEEP |DRAIN |PRE_  |TEST_ |
                      00547 ;                    |INCYC |PRECYC| _UPD | MODE |_MODE |_TR   |PRIV  |MODE  |
                      00548 ;                    |______|______|______|______|______|______|______|______|
                      00549 ; SSR_STATE2         |TEST_ |TEST_ |TEST_ |ALL_  |PRIV_ |INHIBI|MSB_  |LITER |
                      00550 ;                    |PAUSE |UPD   |BUTTON|OFF   |FORBID|T_OUTP|ESC   |AL_ESC|
                      00551 ;                    |______|______|______|______|______|UT____|______|______|
                      00552 ; DMX_SLOTH          |DMX_EN|DMX_  |DMX_  |                           |DMX Sl|
                      00553 ;                    |      |SPEED |FRAME |                           |ot MSB|
                      00554 ;                    |______|______|______|______|______|______|______|______|
                      00555 ; DMX_SLOTL          |                                                       |
                      00556 ;                    |       Starting DMX Slot Number - 1 (low 8 bits)       |
                      00557 ;                    |______|______|______|______|______|______|______|______|
                      00558 ; YY_STATE           |                                                       |
                      00559 ;                    |                      Parser State                     |
                      00560 ;                    |______|______|______|______|______|______|______|______|
                      00561 ; YY_COMMAND         |                                                       |
                      00562 ;                    |                      Command Code                     |
                      00563 ;                    |______|______|______|______|______|______|______|______|
                      00564 ; YY_CMD_FLAGS       |                                                       |
                      00565 ;                    |               Command-specific Flag Bits              |
                      00566 ;                    |______|______|______|______|______|______|______|______|
                      00567 ; YY_DATA            |                                                       |
                      00568 ;                    |                      Command Data                     |
                      00569 ;                    |______|______|______|______|______|______|______|______|
                      00570 ; YY_LOOKAHEAD_MAX   |                                                       |
                      00571 ;                    |               Maximum length for look-ahead           |
                      00572 ;                    |______|______|______|______|______|______|______|______|
                      00573 ; YY_LOOK_FOR        |                                                       |
                      00574 ;                    |               Sentinel value to search for            |
                      00575 ;                    |______|______|______|______|______|______|______|______|
                      00576 ; YY_BUF_IDX         |                                                       |
                      00577 ;                    |     Offset in YY_BUFFER where we will write next      |
                      00578 ;                    |______|______|______|______|______|______|______|______|
                      00579 ; YY_NEXT_STATE      |                                                       |
                      00580 ;                    |     State to transition to when YY_LOOK_FOR is found  |
                      00581 ;                    |______|______|______|______|______|______|______|______|
                      00582 ; YY_YY              |                                                       |
                      00583 ;                    |     General-purpose storage for use inside commands   |
                      00584 ;                    |______|______|______|______|______|______|______|______|
                      00585 ; LAST_ERROR         |                                                       |
                      00586 ;                    |  Last error code encountered (cleared when reported)  |
                      00587 ;                    |______|______|______|______|______|______|______|______|
                      00588 ; CUR_PREH           |                                                       |
                      00589 ;                    |         Pre-cycle count-down ticks left (MSB)         |
                      00590 ;                    |______|______|______|______|______|______|______|______|
                      00591 ; CUR_PRE            |                                                       |
                      00592 ;                    |         Pre-cycle count-down ticks left (LSB)         |
                      00593 ;                    |______|______|______|______|______|______|______|______|
                      00594 ; CUR_SLICE          |                                                       |
                      00595 ;                    |      Slice number within active portion of cycle      |
                      00596 ;                    |______|______|______|______|______|______|______|______|
                      00597 ; TARGET_SSR         |NOT_MY|INVALI|                                         |
                      00598 ;                    | _SSR |D_SSR |    SSR number for current command       |
                      00599 ;                    |______|______|______|______|______|______|______|______|
                      00600 ; OPTION_DEBOUNCE    |                                                       |
                      00601 ;                    |      Counter to debounce OPTION button presses        |
                      00602 ;                    |______|______|______|______|______|______|______|______|
                      00603 ; OPTION_HOLD        |                                                       |
                      00604 ;                    |      Counter for how long OPTION button is held       |
                      00605 ;                    |______|______|______|______|______|______|______|______|
                      00606 ; TEST_CYCLE         |                                                       |
                      00607 ;                    |        Count-down of ZC cycles until next step        |
                      00608 ;                    |______|______|______|______|______|______|______|______|
                      00609 ; TEST_SSR           |             |                                         |
                      00610 ;                    |             |  current SSR being tested               |
                      00611 ;                    |______|______|______|______|______|______|______|______|
                      00612 ; AUTO_OFF_CTRH      |                                                       |
                      00613 ;                    |         countdown register until auto-power-off (MSB) |
                      00614 ;                    |______|______|______|______|______|______|______|______|
                      00615 ; AUTO_OFF_CTRL      |                                                       |
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00616 ;                    |         countdown register until auto-power-off (LSB) |
                      00617 ;                    |______|______|______|______|______|______|______|______|
                      00618 ; I                  |                                                       |
                      00619 ;                    |      General-purpose local counter variable           |
                      00620 ;                    |______|______|______|______|______|______|______|______|
                      00621 ; J                  |                                                       |
                      00622 ;                    |      General-purpose local counter variable           |
                      00623 ;                    |______|______|______|______|______|______|______|______|
                      00624 ; K                  |                                                       |
                      00625 ;                    |      General-purpose local counter variable           |
                      00626 ;                    |______|______|______|______|______|______|______|______|
                      00627 ; KK                 |                                                       |
                      00628 ;                    |      General-purpose local counter variable           |
                      00629 ;                    |______|______|______|______|______|______|______|______|
                      00630 ; TR_I               |                                                       |
                      00631 ;                    |      T/R delay timer delay counter                    |
                      00632 ;                    |______|______|______|______|______|______|______|______|
                      00633 ;
                      00634 ;
                      00635 ;------------------------------------------------------------------------------
                      00636 ; (SSR_DATA_BANK)
                      00637 ;------------------------------------------------------------------------------
                      00638 ;
                      00639 ; *** THE FOLLOWING BLOCKS *MUST* BE THE SAME SIZE AS EACH OTHER ***
                      00640 ;
                      00641 ;                     ___7______6______5______4______3______2______1______0__
                      00642 ; SSR_00_VALUE       |                                                       |
                      00643 ;                    | Brightness value of SSR #00 (00=off, ... FF=fully on) |
                      00644 ;                    |______|______|______|______|______|______|______|______|
                      00645 ;                    |                                                       |
                      00646 ;                    | Brightness value of SSR #01 (00=off, ... FF=fully on) |
                      00647 ;                    |______|______|______|______|______|______|______|______|
                      00648 ;                                                .
                      00649 ;                                                .
                      00650 ;                     ___________________________.___________________________
                      00651 ;                    |                                                       |
                      00652 ;                    | Brightness value of SSR #23 (00=off, ... FF=fully on) |
                      00653 ;                    |______|______|______|______|______|______|______|______|
                      00654 ;                    |                                                       |
                      00655 ;                    | Brightness value of Green   (00=off, ... FF=fully on) |
                      00656 ;                    |______|______|______|______|______|______|______|______|
                      00657 ;                    |                                                       |
                      00658 ;                    | Brightness value of Yellow  (00=off, ... FF=fully on) |
                      00659 ;                    |______|______|______|______|______|______|______|______|
                      00660 ;                    |                                                       |
                      00661 ;                    | Brightness value of Red     (00=off, ... FF=fully on) |
                      00662 ;                    |______|______|______|______|______|______|______|______|
                      00663 ;                    | IF MASTER/STANDALONE:                                 |
                      00664 ;                    | Brightness value of Active  (00=off, ... FF=fully on) |
                      00665 ;                    |______|______|______|______|______|______|______|______|
                      00666 ; SSR_00_FLAGS       | FADE | FADE | FADE_|MAX_OF|      |      |      |      |
                      00667 ;                    | _UP  | _DOWN| CYCLE|F_TIME|      |      |      |      |
                      00668 ;                    |______|______|______|______|______|______|______|______|
                      00669 ;                                                .
                      00670 ;                                                .
                      00671 ;                     ___________________________.___________________________
                      00672 ; SSR_00_STEP        |                                                       |
                      00673 ;                    |          Brightness increment (0..255)                |
                      00674 ;                    |______|______|______|______|______|______|______|______|
                      00675 ;                                                .
                      00676 ;                                                .
                      00677 ;                     ___________________________.___________________________
                      00678 ; SSR_00_SPEED       |                                                       |
                      00679 ;                    |          Cycles between each step (0..255)            |
                      00680 ;                    |______|______|______|______|______|______|______|______|
                      00681 ;                                                .
                      00682 ;                                                .
                      00683 ;                     ___________________________.___________________________
                      00684 ; SSR_00_COUNTER     |                                                       |
                      00685 ;                    |          Cycles until next step (0..255)              |
                      00686 ;                    |______|______|______|______|______|______|______|______|
                      00687 ;                                                .
                      00688 ;                                                .
                      00689 ;                                                .                           
                      00690 ;
  0000                00691         GLOBAL  QSCC_START
  0000                00692         GLOBAL  QSCC_MAIN
  0000                00693         GLOBAL  QSCC_CMD5_START
  0000                00694         GLOBAL  QS_STOP_SCANNER
                      00695 
                      00696 ;------------------------------------------------------------------------------
                      00697 ; QUIZSHOW_DATA BANK
                      00698 ;------------------------------------------------------------------------------
                      00699 ;
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00700 ;                     ___7______6______5______4______3______2______1______0__
                      00701 ; BTN_X0_TIME_T      |                                                       |
                      00702 ;                    |         Button press time (uS) <31:24>                |
                      00703 ;                    |______|______|______|______|______|______|______|______|
                      00704 ; BTN_X1_TIME_T      |                                                       |
                      00705 ;                    |         Button press time (uS) <31:24>                |
                      00706 ;                    |______|______|______|______|______|______|______|______|
                      00707 ;                                                :
                      00708 ;                     ___________________________:___________________________
                      00709 ; BTN_X0_TIME_U      |                                                       |
                      00710 ;                    |         Button press time (uS) <23:16>                |
                      00711 ;                    |______|______|______|______|______|______|______|______|
                      00712 ;                                                :
                      00713 ;                     ___________________________:___________________________
                      00714 ; BTN_X0_TIME_H      |                                                       |
                      00715 ;                    |         Button press time (uS) <15:8>                 |
                      00716 ;                    |______|______|______|______|______|______|______|______|
                      00717 ;                                                :
                      00718 ;                     ___________________________:___________________________
                      00719 ; BTN_X0_TIME_L      |                                                       |
                      00720 ;                    |         Button press time (uS) <7:0>                  |
                      00721 ;                    |______|______|______|______|______|______|______|______|
                      00722 ;                                                :
                      00723 ;                     ___________________________:___________________________
                      00724 ;
                      00725 ;      .
                      00726 ;      .        Ditto for L0, X1, L1, X2, L2, X3, L3, X4, L4            (QSRC)
                      00727 ;      .        Or... for L0, A, B, C, D                                (QSCC)
                      00728 ;
  00000C00            00729 QUIZSHOW_DATA   EQU     0xC00
                      00730 _QUIZSHOW_DATA  UDATA   QUIZSHOW_DATA
000C00                00731 BTN_X0_TIME_T   RES     N_BUTTONS       ; button press times (bits 31-24)
000C10                00732 BTN_X0_TIME_U   RES     N_BUTTONS       ; button press times (bits 23-16)
000C20                00733 BTN_X0_TIME_H   RES     N_BUTTONS       ; button press times (bits 15-08)
000C30                00734 BTN_X0_TIME_L   RES     N_BUTTONS       ; button press times (bits 07-00)
000C40                00735 BTN_X0_FLAGS    RES     N_BUTTONS       ; button flags
000C50                00736 BTN_X0_LOCKTMR  RES     N_BUTTONS       ; number of 1/120 sec remaining in lock
000C60                00737 BTN_X0_DEB_TMR  RES     N_BUTTONS       ; number of polls to satisfy debounce logic
000C70                00738 QUIZSHOW_LCKTM  RES     1               ; number of 1/120 sec we lock out offenders
                      00739 _QUIZSHOW_CODE  CODE
                      00740 
                      00741 
                      00742 ;
                      00743 ; Clear all button timers and states
                      00744 ;
                      00745 CLEAR_BUTTONS MACRO FULL_RESET
                      00746 CB_IDX  SET     0
                      00747         WHILE   CB_IDX < N_BUTTONS
                      00748          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
                      00749          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
                      00750          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
                      00751          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                      00752          IF FULL_RESET
                      00753           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                      00754           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                      00755           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                      00756          ELSE
                      00757           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                      00758          ENDIF
                      00759 CB_IDX   ++
                      00760         ENDW
                      00761         ENDM
                      00762                 
                      00763 ;
                      00764 ; Startup code (on top of what LUMOS_START does), right before the main loop
                      00765 ; is launched.
                      00766 ;
000000                00767 QSCC_START:
000000 0004           00768         CLRWDT
000002 010C           00769         BANKSEL QUIZSHOW_DATA
000004 6A00           00770         CLRF    QUIZSHOW_FLAGS, ACCESS
000006 0E3C           00771         MOVLW   .60
000008 6F00           00772         MOVWF   QUIZSHOW_LCKTM, BANKED                  ; lockout time is 1/2 second
                      00773         CLEAR_BUTTONS 1
  00000000                M CB_IDX  SET     0
                          M         WHILE   CB_IDX < N_BUTTONS
00000A 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
00000C 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
00000E 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
000010 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
000012 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
000014 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
000016 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000001                M CB_IDX   ++
000018 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
00001A 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
00001C 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
00001E 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
000020 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
000022 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
000024 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000002                M CB_IDX   ++
000026 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
000028 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
00002A 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
00002C 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
00002E 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
000030 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
000032 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000003                M CB_IDX   ++
000034 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
000036 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
000038 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
00003A 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
00003C 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
00003E 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
000040 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000004                M CB_IDX   ++
000042 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
000044 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
000046 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
000048 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
00004A 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
00004C 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
00004E 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000005                M CB_IDX   ++
000050 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
000052 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
000054 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
000056 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
000058 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
00005A 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
00005C 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000006                M CB_IDX   ++
00005E 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
000060 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
000062 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
000064 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
000066 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
000068 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
00006A 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000007                M CB_IDX   ++
00006C 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
00006E 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
000070 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
000072 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
000074 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
000076 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
000078 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000008                M CB_IDX   ++
00007A 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
00007C 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
00007E 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
000080 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
000082 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
000084 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
000086 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000009                M CB_IDX   ++
000088 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
00008A 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
00008C 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
00008E 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
000090 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
000092 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
000094 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  0000000A                M CB_IDX   ++
000096 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
000098 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
00009A 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
00009C 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
00009E 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
0000A0 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
0000A2 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  0000000B                M CB_IDX   ++
0000A4 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
0000A6 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
0000A8 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
0000AA 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
0000AC 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
0000AE 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
0000B0 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  0000000C                M CB_IDX   ++
0000B2 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
0000B4 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
0000B6 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
0000B8 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
0000BA 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
0000BC 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
0000BE 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  0000000D                M CB_IDX   ++
0000C0 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
0000C2 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
0000C4 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
0000C6 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
0000C8 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
0000CA 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
0000CC 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  0000000E                M CB_IDX   ++
0000CE 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
0000D0 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
0000D2 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
0000D4 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
0000D6 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
0000D8 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
0000DA 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  0000000F                M CB_IDX   ++
0000DC 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
0000DE 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
0000E0 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
0000E2 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 1
0000E4 6B00               M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
0000E6 6B00               M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
0000E8 6B00               M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
                          M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000010                M CB_IDX   ++
                          M         ENDW
0000EA 0004           00774         CLRWDT
                      00775         ;
                      00776         ; Special Modes
                      00777         ; If the unit powers up with A+C (X0+L2) held down, it goes into config mode.
                      00778         ; XXX If it powers up with L0+X1 held down, it goes into standalone mode. (future)
                      00779         ; 
0000EC 0E3F           00780         MOVLW   QS_SENS_MASK
0000EE 1480           00781         ANDWF   QS_SENS_PORT, W, ACCESS
0000F0 0A28           00782         XORLW   QS_SENS_CONF
0000F2 E1??           00783         BNZ     QSCC_SENS_END
                      00784 
0000F4 8800           00785         BSF     SSR_STATE, PRIV_MODE, ACCESS
                      00786         SET_SSR_RAPID_FADE 1    ; CHANGES BANK!
                          M          SET_SSR_PATTERN 1,   0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0000F6 0104               M         BANKSEL SSR_DATA_BANK
0000F8 0E00               M          MOVLW  0
0000FA 6F00               M          MOVWF  SSR_00_VALUE+1,   BANKED
0000FC 0E04               M          MOVLW  4
0000FE 6F00               M          MOVWF  SSR_00_STEP+1,   BANKED
000100 0E01               M          MOVLW  1
000102 6F00               M          MOVWF  SSR_00_SPEED+1,   BANKED
000104 6F00               M          MOVWF  SSR_00_COUNTER+1,   BANKED
000106 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000108 6F00               M          MOVWF  SSR_00_FLAGS+1,   BANKED
                      00787 
00010A                00788 QSCC_SENS_END:
                      00789         SET_SSR_SLOW_FADE 0     ; CHANGES BANK!
                          M          SET_SSR_PATTERN 0,   0, 1, 1, BIT_FADE_UP|BIT_FADE_CYCLE
00010A 0104               M         BANKSEL SSR_DATA_BANK
00010C 0E00               M          MOVLW  0
00010E 6F00               M          MOVWF  SSR_00_VALUE+0,   BANKED
000110 0E01               M          MOVLW  1
000112 6F00               M          MOVWF  SSR_00_STEP+0,   BANKED
000114 0E01               M          MOVLW  1
000116 6F00               M          MOVWF  SSR_00_SPEED+0,   BANKED
000118 6F00               M          MOVWF  SSR_00_COUNTER+0,   BANKED
00011A 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
00011C 6F00               M          MOVWF  SSR_00_FLAGS+0,   BANKED
00011E 0012           00790         RETURN
                      00791 ;
                      00792 ; Main loop code (in addition to Lumos' main loop code)
                      00793 ;
  0000                00794         EXTERN  SSR_00_VALUE
  0000                00795         EXTERN  SSR_00_FLAGS
  0000                00796         EXTERN  SSR_00_STEP
  0000                00797         EXTERN  SSR_00_SPEED
  0000                00798         EXTERN  SSR_00_COUNTER
                      00799 
000120                00800 QSCC_MAIN:
000120 0004           00801         CLRWDT
                      00802         ;
                      00803         ; Scan all the buttons to see which trigger something.
                      00804         ; We debounce them by making them hold the same reading for 256 *consecutive*
                      00805         ; polls before figuring it changed.
                      00806         ;
  00000000            00807 SCN_DBN SET     0
                      00808 
                      00809 SCAN_DEBOUNCE MACRO BTN_IDX, BTN_PORT, BTN_BIT, LT, LCK
                      00810         ; Sense button
                      00811         BTFSC   BTN_PORT, BTN_BIT, ACCESS
                      00812         BRA     SCN_DB_ACTIVE_#v(SCN_DBN)
                      00813 
                      00814         ; Button registers as being inactive now.  How long has this been the case?
                      00815         BTFSC   BTN_X0_FLAGS+BTN_IDX, BTN_FLG_ACTIVE, BANKED
                      00816         BRA     SCN_DB_CHANGED_#v(SCN_DBN)
                      00817 
                      00818         ; Still inactive? keep counting...
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00819         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX, F, BANKED
                      00820         BRA     SCN_DB_END_#v(SCN_DBN)
                      00821 
                      00822         ; It's still inactive after 256 polls.  Time to count it as officially off now.
                      00823         BCF     BTN_X0_FLAGS+BTN_IDX, BTN_FLG_ACTIVE, BANKED
                      00824         ;
                      00825         ; XXX Based on our current state, deal with the consequences of letting
                      00826         ; XXX go of the button now.
                      00827         ;
                      00828         ; I think actually there aren't any here.
                      00829         ;
                      00830         BRA     SCN_DB_END_#v(SCN_DBN)
                      00831 
                      00832 SCN_DB_ACTIVE_#v(SCN_DBN):
                      00833         ; Button registers as being active now.  How long has this been happening?
                      00834         BTFSS   BTN_X0_FLAGS+BTN_IDX, BTN_FLG_ACTIVE, BANKED
                      00835         BRA     SCN_DB_CHANGED_#v(SCN_DBN)
                      00836 
                      00837         ; Still active? keep counting...
                      00838         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX, F, BANKED
                      00839         BRA     SCN_DB_END_#v(SCN_DBN)
                      00840 
                      00841         ; It's still active after 256 polls.  Time to count it as officially on now.
                      00842         BSF     BTN_X0_FLAGS+BTN_IDX, BTN_FLG_ACTIVE, BANKED
                      00843         ;
                      00844         ; Based on our current state, deal with the consequences of hitting
                      00845         ; the button now.
                      00846         ;
                      00847         ; If already pressed: ignore
                      00848         ; ElseIf masked out: ignore
                      00849         ; ElseIf locked out: reset lockout timer to start [handled above]
                      00850         ; ElseIf scanning: copy timer into button stats, set pressed flag
                      00851         ; Else: set lockout state, reset lockout timer
                      00852         ;       
                      00853         BTFSS   BTN_X0_FLAGS+BTN_IDX, BTN_FLG_PRESSED, BANKED
                      00854         BTFSC   BTN_X0_FLAGS+BTN_IDX, BTN_FLG_MASKED, BANKED
                      00855         BRA     SCN_DB_END_#v(SCN_DBN)
                      00856 
                      00857         BTFSC   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
                      00858         BRA     SCN_DB_DING_#v(SCN_DBN)
                      00859 
                      00860         BSF     BTN_X0_FLAGS+BTN_IDX, BTN_FLG_LOCKED, BANKED
                      00861         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX  
                      00862         LOCAL_LIGHT_INDICATOR BTN_IDX, LT, LCK
                      00863         BRA     SCN_DB_END_#v(SCN_DBN)
                      00864 
                      00865 SCN_DB_DING_#v(SCN_DBN):
                      00866         BSF     BTN_X0_FLAGS+BTN_IDX, BTN_FLG_PRESSED, BANKED
                      00867         ; copy timer values
                      00868         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+BTN_IDX
                      00869         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+BTN_IDX
                      00870         MOVFF   TMR1L, BTN_X0_TIME_L+BTN_IDX
                      00871         MOVFF   TMR1H, BTN_X0_TIME_H+BTN_IDX
                      00872         ; update the lights
                      00873         LOCAL_LIGHT_INDICATOR BTN_IDX, LT, LCK
                      00874         BRA     SCN_DB_END_#v(SCN_DBN)
                      00875         
                      00876 SCN_DB_CHANGED_#v(SCN_DBN):
                      00877         ; Button has changed since last time: reset debounce counter and wait.
                      00878         CLRF    BTN_X0_DEB_TMR+BTN_IDX, BANKED
                      00879 
                      00880 SCN_DB_END_#v(SCN_DBN):
                      00881         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
                      00882         BRA     SCN_DB_DONE_#v(SCN_DBN)
                      00883         ;
                      00884         ; Every 1/120 second do this:
                      00885         ;
                      00886         ; Check for locked-out buttons. We hold them in this state as long as
                      00887         ; they are still being pressed.  Once they let go we start counting down time
                      00888         ; before releasing.
                      00889         ;
                      00890         BTFSS   BTN_X0_FLAGS+BTN_IDX, BTN_FLG_LOCKED, BANKED
                      00891         BRA     SCN_DB_DONE_#v(SCN_DBN)
                      00892 
                      00893         BTFSS   BTN_X0_FLAGS+BTN_IDX, BTN_FLG_ACTIVE, BANKED
                      00894         BRA     SCN_DB_LCK_#v(SCN_DBN)
                      00895 
                      00896         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX  ; active+locked: reset and hold timer
                      00897         BRA     SCN_DB_DONE_#v(SCN_DBN)
                      00898 
                      00899 SCN_DB_LCK_#v(SCN_DBN):
                      00900         DECFSZ  BTN_X0_LOCKTMR+BTN_IDX, F, BANKED       ; locked: count down to unlock time
                      00901         BRA     SCN_DB_DONE_#v(SCN_DBN)
                      00902 
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00903         BCF     BTN_X0_FLAGS+BTN_IDX, BTN_FLG_LOCKED, BANKED
                      00904         LOCAL_LIGHT_INDICATOR BTN_IDX, LT, LCK
                      00905         
                      00906 SCN_DB_DONE_#v(SCN_DBN):
                      00907 SCN_DBN ++
                      00908         ENDM
                      00909 
                      00910 ;
                      00911 ; LOCAL_LIGHT_INDICATOR <button index>, <light index>
                      00912 ;       Turns on lights to indicate button state that we manage locally here
                      00913 ;       on the console (as opposed to what the external host does)
                      00914 ;       
                      00915 ;       When the scanner starts, enabled buttons are illuminated white, disabled are off.
                      00916 ;       Anytime a button is locked, it is illuminated in flashing red.
                      00917 ; 
                      00918 ;
  00000000            00919 LLIM_N  SET     0
                      00920 LOCAL_LIGHT_INDICATOR MACRO BTN_IDX, LT, LCK
                      00921         BANKSEL QUIZSHOW_DATA
                      00922         BTFSS   BTN_X0_FLAGS+BTN_IDX, BTN_FLG_LOCKED, BANKED
                      00923         BRA     LLIM_NOT_LOCKED_#v(LLIM_N)
                      00924 
                      00925         SET_SSR_OFF LT
                      00926         SET_SSR_RAPID_FADE LCK
                      00927         BRA     LLIM_END_#v(LLIM_N)
                      00928 
                      00929 LLIM_NOT_LOCKED_#v(LLIM_N):
                      00930         BTFSS   BTN_X0_FLAGS+BTN_IDX, BTN_FLG_MASKED, BANKED
                      00931         BTFSC   BTN_X0_FLAGS+BTN_IDX, BTN_FLG_PRESSED, BANKED
                      00932         BRA     LLIM_OFF_#v(LLIM_N)
                      00933         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
                      00934         BRA     LLIM_OFF_#v(LLIM_N)
                      00935         ; We're scanning and not masked or pressed - light up button
                      00936         SET_SSR_OFF LCK
                      00937         SET_SSR_STEADY LT
                      00938         BRA     LLIM_END_#v(LLIM_N)
                      00939 
                      00940 LLIM_OFF_#v(LLIM_N):
                      00941         SET_SSR_OFF LT
                      00942         SET_SSR_OFF LCK
                      00943         
                      00944 LLIM_END_#v(LLIM_N):
                      00945         BANKSEL QUIZSHOW_DATA
                      00946 LLIM_N  ++
                      00947         ENDM
                      00948         
                      00949 
000122 010C           00950         BANKSEL QUIZSHOW_DATA
000124 A200           00951         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_ON_120_S, ACCESS
000126 D???           00952         BRA     SCAN_DEBOUNCERS
000128 8400           00953         BSF     QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
00012A 9200           00954         BCF     QUIZSHOW_FLAGS, QS_FLAG_ON_120_S, ACCESS
                      00955 
00012C                00956 SCAN_DEBOUNCERS:
                      00957         IF LUMOS_CHIP_TYPE == LUMOS_CHIP_QSCC
                      00958          SCAN_DEBOUNCE  BTN_IDX_X0, PORT_X0, BIT_X0, CHAN_X0G, CHAN_X0R
                      00959          SCAN_DEBOUNCE  BTN_IDX_L0, PORT_L0, BIT_L0, CHAN_L0G, CHAN_L0R
                      00960          SCAN_DEBOUNCE  BTN_IDX_A0, PORT_A0, BIT_A0, CHAN_A0L, CHAN_A0L
                      00961          SCAN_DEBOUNCE  BTN_IDX_B0, PORT_B0, BIT_B0, CHAN_B0L, CHAN_B0L
                      00962          SCAN_DEBOUNCE  BTN_IDX_C0, PORT_C0, BIT_C0, CHAN_C0L, CHAN_C0L
                      00963          SCAN_DEBOUNCE  BTN_IDX_D0, PORT_D0, BIT_D0, CHAN_D0L, CHAN_D0L
                      00964         ELSE
                      00965          IF LUMOS_CHIP_TYPE == LUMOS_CHIP_QSRC
                      00966           SCAN_DEBOUNCE BTN_IDX_X0, PORT_X0, BIT_X0, CHAN_X0G, CHAN_X0R
                          M         ; Sense button
00012C B680               M         BTFSC   PORT_X0,  BIT_X0,  ACCESS
00012E D???               M         BRA     SCN_DB_ACTIVE_0
                          M 
                          M         ; Button registers as being inactive now.  How long has this been the case?
000130 B700               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_ACTIVE, BANKED
000132 D???               M         BRA     SCN_DB_CHANGED_0
                          M 
                          M         ; Still inactive? keep counting...
000134 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_X0, F, BANKED
000136 D???               M         BRA     SCN_DB_END_0
                          M 
                          M         ; It's still inactive after 256 polls.  Time to count it as officially off now.
000138 9700               M         BCF     BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; XXX Based on our current state, deal with the consequences of letting
                          M         ; XXX go of the button now.
                          M         ;
                          M         ; I think actually there aren't any here.
                          M         ;
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00013A D???               M         BRA     SCN_DB_END_0
                          M 
00013C                    M SCN_DB_ACTIVE_0:
                          M         ; Button registers as being active now.  How long has this been happening?
00013C A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_ACTIVE, BANKED
00013E D???               M         BRA     SCN_DB_CHANGED_0
                          M 
                          M         ; Still active? keep counting...
000140 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_X0, F, BANKED
000142 D???               M         BRA     SCN_DB_END_0
                          M 
                          M         ; It's still active after 256 polls.  Time to count it as officially on now.
000144 8700               M         BSF     BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; Based on our current state, deal with the consequences of hitting
                          M         ; the button now.
                          M         ;
                          M         ; If already pressed: ignore
                          M         ; ElseIf masked out: ignore
                          M         ; ElseIf locked out: reset lockout timer to start [handled above]
                          M         ; ElseIf scanning: copy timer into button stats, set pressed flag
                          M         ; Else: set lockout state, reset lockout timer
                          M         ;       
000146 A100               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_PRESSED, BANKED
000148 B300               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_MASKED, BANKED
00014A D???               M         BRA     SCN_DB_END_0
                          M 
00014C B000               M         BTFSC   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
00014E D???               M         BRA     SCN_DB_DING_0
                          M 
000150 8500               M         BSF     BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_LOCKED, BANKED
000152 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_X0 
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X0, CHAN_X0G, CHAN_X0R
000156 010C               M         BANKSEL QUIZSHOW_DATA
000158 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_LOCKED, BANKED
00015A D???               M         BRA     LLIM_NOT_LOCKED_0
                          M 
                          M         SET_SSR_OFF CHAN_X0G
                          M          SET_SSR_VALUE CHAN_X0G, 0
00015C 0104               M         BANKSEL SSR_DATA_BANK
00015E 0E00               M          MOVLW  0
000160 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0G, BANKED
000162 6B00               M          CLRF   SSR_00_STEP+CHAN_X0G, BANKED
000164 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0G, BANKED
000166 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0G, BANKED
000168 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X0R
                          M          SET_SSR_PATTERN CHAN_X0R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
00016A 0104               M         BANKSEL SSR_DATA_BANK
00016C 0E00               M          MOVLW  0
00016E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
000170 0E04               M          MOVLW  4
000172 6F00               M          MOVWF  SSR_00_STEP+CHAN_X0R, BANKED
000174 0E01               M          MOVLW  1
000176 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X0R, BANKED
000178 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X0R, BANKED
00017A 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
00017C 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X0R, BANKED
00017E D???               M         BRA     LLIM_END_0
                          M 
000180                    M LLIM_NOT_LOCKED_0:
000180 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_MASKED, BANKED
000182 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_PRESSED, BANKED
000184 D???               M         BRA     LLIM_OFF_0
000186 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000188 D???               M         BRA     LLIM_OFF_0
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X0R
                          M          SET_SSR_VALUE CHAN_X0R, 0
00018A 0104               M         BANKSEL SSR_DATA_BANK
00018C 0E00               M          MOVLW  0
00018E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
000190 6B00               M          CLRF   SSR_00_STEP+CHAN_X0R, BANKED
000192 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0R, BANKED
000194 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0R, BANKED
000196 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0R, BANKED
                          M         SET_SSR_STEADY CHAN_X0G
                          M          SET_SSR_VALUE CHAN_X0G, 255
000198 0104               M         BANKSEL SSR_DATA_BANK
00019A 0EFF               M          MOVLW  255
00019C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0G, BANKED
00019E 6B00               M          CLRF   SSR_00_STEP+CHAN_X0G, BANKED
0001A0 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0G, BANKED
0001A2 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0G, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001A4 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0G, BANKED
0001A6 D???               M         BRA     LLIM_END_0
                          M 
0001A8                    M LLIM_OFF_0:
                          M         SET_SSR_OFF CHAN_X0G
                          M          SET_SSR_VALUE CHAN_X0G, 0
0001A8 0104               M         BANKSEL SSR_DATA_BANK
0001AA 0E00               M          MOVLW  0
0001AC 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0G, BANKED
0001AE 6B00               M          CLRF   SSR_00_STEP+CHAN_X0G, BANKED
0001B0 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0G, BANKED
0001B2 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0G, BANKED
0001B4 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0G, BANKED
                          M         SET_SSR_OFF CHAN_X0R
                          M          SET_SSR_VALUE CHAN_X0R, 0
0001B6 0104               M         BANKSEL SSR_DATA_BANK
0001B8 0E00               M          MOVLW  0
0001BA 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
0001BC 6B00               M          CLRF   SSR_00_STEP+CHAN_X0R, BANKED
0001BE 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0R, BANKED
0001C0 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0R, BANKED
0001C2 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0R, BANKED
                          M         
0001C4                    M LLIM_END_0:
0001C4 010C               M         BANKSEL QUIZSHOW_DATA
  00000001                M LLIM_N  ++
0001C6 D???               M         BRA     SCN_DB_END_0
                          M 
0001C8                    M SCN_DB_DING_0:
0001C8 8100               M         BSF     BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_PRESSED, BANKED
                          M         ; copy timer values
0001CA C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+BTN_IDX_X0
0001CE C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+BTN_IDX_X0
0001D2 CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+BTN_IDX_X0
0001D6 CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+BTN_IDX_X0
                          M         ; update the lights
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X0, CHAN_X0G, CHAN_X0R
0001DA 010C               M         BANKSEL QUIZSHOW_DATA
0001DC A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_LOCKED, BANKED
0001DE D???               M         BRA     LLIM_NOT_LOCKED_1
                          M 
                          M         SET_SSR_OFF CHAN_X0G
                          M          SET_SSR_VALUE CHAN_X0G, 0
0001E0 0104               M         BANKSEL SSR_DATA_BANK
0001E2 0E00               M          MOVLW  0
0001E4 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0G, BANKED
0001E6 6B00               M          CLRF   SSR_00_STEP+CHAN_X0G, BANKED
0001E8 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0G, BANKED
0001EA 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0G, BANKED
0001EC 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X0R
                          M          SET_SSR_PATTERN CHAN_X0R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0001EE 0104               M         BANKSEL SSR_DATA_BANK
0001F0 0E00               M          MOVLW  0
0001F2 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
0001F4 0E04               M          MOVLW  4
0001F6 6F00               M          MOVWF  SSR_00_STEP+CHAN_X0R, BANKED
0001F8 0E01               M          MOVLW  1
0001FA 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X0R, BANKED
0001FC 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X0R, BANKED
0001FE 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000200 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X0R, BANKED
000202 D???               M         BRA     LLIM_END_1
                          M 
000204                    M LLIM_NOT_LOCKED_1:
000204 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_MASKED, BANKED
000206 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_PRESSED, BANKED
000208 D???               M         BRA     LLIM_OFF_1
00020A A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
00020C D???               M         BRA     LLIM_OFF_1
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X0R
                          M          SET_SSR_VALUE CHAN_X0R, 0
00020E 0104               M         BANKSEL SSR_DATA_BANK
000210 0E00               M          MOVLW  0
000212 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
000214 6B00               M          CLRF   SSR_00_STEP+CHAN_X0R, BANKED
000216 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0R, BANKED
000218 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0R, BANKED
00021A 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0R, BANKED
                          M         SET_SSR_STEADY CHAN_X0G
                          M          SET_SSR_VALUE CHAN_X0G, 255
00021C 0104               M         BANKSEL SSR_DATA_BANK
00021E 0EFF               M          MOVLW  255
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000220 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0G, BANKED
000222 6B00               M          CLRF   SSR_00_STEP+CHAN_X0G, BANKED
000224 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0G, BANKED
000226 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0G, BANKED
000228 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0G, BANKED
00022A D???               M         BRA     LLIM_END_1
                          M 
00022C                    M LLIM_OFF_1:
                          M         SET_SSR_OFF CHAN_X0G
                          M          SET_SSR_VALUE CHAN_X0G, 0
00022C 0104               M         BANKSEL SSR_DATA_BANK
00022E 0E00               M          MOVLW  0
000230 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0G, BANKED
000232 6B00               M          CLRF   SSR_00_STEP+CHAN_X0G, BANKED
000234 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0G, BANKED
000236 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0G, BANKED
000238 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0G, BANKED
                          M         SET_SSR_OFF CHAN_X0R
                          M          SET_SSR_VALUE CHAN_X0R, 0
00023A 0104               M         BANKSEL SSR_DATA_BANK
00023C 0E00               M          MOVLW  0
00023E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
000240 6B00               M          CLRF   SSR_00_STEP+CHAN_X0R, BANKED
000242 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0R, BANKED
000244 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0R, BANKED
000246 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0R, BANKED
                          M         
000248                    M LLIM_END_1:
000248 010C               M         BANKSEL QUIZSHOW_DATA
  00000002                M LLIM_N  ++
00024A D???               M         BRA     SCN_DB_END_0
                          M         
00024C                    M SCN_DB_CHANGED_0:
                          M         ; Button has changed since last time: reset debounce counter and wait.
00024C 6B00               M         CLRF    BTN_X0_DEB_TMR+BTN_IDX_X0, BANKED
                          M 
00024E                    M SCN_DB_END_0:
00024E A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
000250 D???               M         BRA     SCN_DB_DONE_0
                          M         ;
                          M         ; Every 1/120 second do this:
                          M         ;
                          M         ; Check for locked-out buttons. We hold them in this state as long as
                          M         ; they are still being pressed.  Once they let go we start counting down time
                          M         ; before releasing.
                          M         ;
000252 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_LOCKED, BANKED
000254 D???               M         BRA     SCN_DB_DONE_0
                          M 
000256 A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_ACTIVE, BANKED
000258 D???               M         BRA     SCN_DB_LCK_0
                          M 
00025A C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_X0 ; active+locked: reset and hold timer
00025E D???               M         BRA     SCN_DB_DONE_0
                          M 
000260                    M SCN_DB_LCK_0:
000260 2F00               M         DECFSZ  BTN_X0_LOCKTMR+BTN_IDX_X0, F, BANKED    ; locked: count down to unlock time
000262 D???               M         BRA     SCN_DB_DONE_0
                          M 
000264 9500               M         BCF     BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_LOCKED, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X0, CHAN_X0G, CHAN_X0R
000266 010C               M         BANKSEL QUIZSHOW_DATA
000268 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_LOCKED, BANKED
00026A D???               M         BRA     LLIM_NOT_LOCKED_2
                          M 
                          M         SET_SSR_OFF CHAN_X0G
                          M          SET_SSR_VALUE CHAN_X0G, 0
00026C 0104               M         BANKSEL SSR_DATA_BANK
00026E 0E00               M          MOVLW  0
000270 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0G, BANKED
000272 6B00               M          CLRF   SSR_00_STEP+CHAN_X0G, BANKED
000274 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0G, BANKED
000276 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0G, BANKED
000278 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X0R
                          M          SET_SSR_PATTERN CHAN_X0R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
00027A 0104               M         BANKSEL SSR_DATA_BANK
00027C 0E00               M          MOVLW  0
00027E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
000280 0E04               M          MOVLW  4
000282 6F00               M          MOVWF  SSR_00_STEP+CHAN_X0R, BANKED
000284 0E01               M          MOVLW  1
000286 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X0R, BANKED
000288 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X0R, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00028A 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
00028C 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X0R, BANKED
00028E D???               M         BRA     LLIM_END_2
                          M 
000290                    M LLIM_NOT_LOCKED_2:
000290 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_MASKED, BANKED
000292 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_PRESSED, BANKED
000294 D???               M         BRA     LLIM_OFF_2
000296 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000298 D???               M         BRA     LLIM_OFF_2
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X0R
                          M          SET_SSR_VALUE CHAN_X0R, 0
00029A 0104               M         BANKSEL SSR_DATA_BANK
00029C 0E00               M          MOVLW  0
00029E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
0002A0 6B00               M          CLRF   SSR_00_STEP+CHAN_X0R, BANKED
0002A2 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0R, BANKED
0002A4 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0R, BANKED
0002A6 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0R, BANKED
                          M         SET_SSR_STEADY CHAN_X0G
                          M          SET_SSR_VALUE CHAN_X0G, 255
0002A8 0104               M         BANKSEL SSR_DATA_BANK
0002AA 0EFF               M          MOVLW  255
0002AC 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0G, BANKED
0002AE 6B00               M          CLRF   SSR_00_STEP+CHAN_X0G, BANKED
0002B0 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0G, BANKED
0002B2 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0G, BANKED
0002B4 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0G, BANKED
0002B6 D???               M         BRA     LLIM_END_2
                          M 
0002B8                    M LLIM_OFF_2:
                          M         SET_SSR_OFF CHAN_X0G
                          M          SET_SSR_VALUE CHAN_X0G, 0
0002B8 0104               M         BANKSEL SSR_DATA_BANK
0002BA 0E00               M          MOVLW  0
0002BC 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0G, BANKED
0002BE 6B00               M          CLRF   SSR_00_STEP+CHAN_X0G, BANKED
0002C0 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0G, BANKED
0002C2 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0G, BANKED
0002C4 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0G, BANKED
                          M         SET_SSR_OFF CHAN_X0R
                          M          SET_SSR_VALUE CHAN_X0R, 0
0002C6 0104               M         BANKSEL SSR_DATA_BANK
0002C8 0E00               M          MOVLW  0
0002CA 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
0002CC 6B00               M          CLRF   SSR_00_STEP+CHAN_X0R, BANKED
0002CE 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0R, BANKED
0002D0 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0R, BANKED
0002D2 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0R, BANKED
                          M         
0002D4                    M LLIM_END_2:
0002D4 010C               M         BANKSEL QUIZSHOW_DATA
  00000003                M LLIM_N  ++
                          M         
0002D6                    M SCN_DB_DONE_0:
  00000001                M SCN_DBN ++
                      00967           SCAN_DEBOUNCE BTN_IDX_L0, PORT_L0, BIT_L0, CHAN_L0R, CHAN_L0R
                          M         ; Sense button
0002D6 B480               M         BTFSC   PORT_L0,  BIT_L0,  ACCESS
0002D8 D???               M         BRA     SCN_DB_ACTIVE_1
                          M 
                          M         ; Button registers as being inactive now.  How long has this been the case?
0002DA B700               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_ACTIVE, BANKED
0002DC D???               M         BRA     SCN_DB_CHANGED_1
                          M 
                          M         ; Still inactive? keep counting...
0002DE 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_L0, F, BANKED
0002E0 D???               M         BRA     SCN_DB_END_1
                          M 
                          M         ; It's still inactive after 256 polls.  Time to count it as officially off now.
0002E2 9700               M         BCF     BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; XXX Based on our current state, deal with the consequences of letting
                          M         ; XXX go of the button now.
                          M         ;
                          M         ; I think actually there aren't any here.
                          M         ;
0002E4 D???               M         BRA     SCN_DB_END_1
                          M 
0002E6                    M SCN_DB_ACTIVE_1:
                          M         ; Button registers as being active now.  How long has this been happening?
0002E6 A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_ACTIVE, BANKED
0002E8 D???               M         BRA     SCN_DB_CHANGED_1
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
                          M         ; Still active? keep counting...
0002EA 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_L0, F, BANKED
0002EC D???               M         BRA     SCN_DB_END_1
                          M 
                          M         ; It's still active after 256 polls.  Time to count it as officially on now.
0002EE 8700               M         BSF     BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; Based on our current state, deal with the consequences of hitting
                          M         ; the button now.
                          M         ;
                          M         ; If already pressed: ignore
                          M         ; ElseIf masked out: ignore
                          M         ; ElseIf locked out: reset lockout timer to start [handled above]
                          M         ; ElseIf scanning: copy timer into button stats, set pressed flag
                          M         ; Else: set lockout state, reset lockout timer
                          M         ;       
0002F0 A100               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_PRESSED, BANKED
0002F2 B300               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_MASKED, BANKED
0002F4 D???               M         BRA     SCN_DB_END_1
                          M 
0002F6 B000               M         BTFSC   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0002F8 D???               M         BRA     SCN_DB_DING_1
                          M 
0002FA 8500               M         BSF     BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_LOCKED, BANKED
0002FC C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_L0 
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L0, CHAN_L0R, CHAN_L0R
000300 010C               M         BANKSEL QUIZSHOW_DATA
000302 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_LOCKED, BANKED
000304 D???               M         BRA     LLIM_NOT_LOCKED_3
                          M 
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
000306 0104               M         BANKSEL SSR_DATA_BANK
000308 0E00               M          MOVLW  0
00030A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
00030C 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
00030E 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
000310 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
000312 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L0R
                          M          SET_SSR_PATTERN CHAN_L0R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000314 0104               M         BANKSEL SSR_DATA_BANK
000316 0E00               M          MOVLW  0
000318 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
00031A 0E04               M          MOVLW  4
00031C 6F00               M          MOVWF  SSR_00_STEP+CHAN_L0R, BANKED
00031E 0E01               M          MOVLW  1
000320 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L0R, BANKED
000322 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L0R, BANKED
000324 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000326 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L0R, BANKED
000328 D???               M         BRA     LLIM_END_3
                          M 
00032A                    M LLIM_NOT_LOCKED_3:
00032A A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_MASKED, BANKED
00032C B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_PRESSED, BANKED
00032E D???               M         BRA     LLIM_OFF_3
000330 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000332 D???               M         BRA     LLIM_OFF_3
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
000334 0104               M         BANKSEL SSR_DATA_BANK
000336 0E00               M          MOVLW  0
000338 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
00033A 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
00033C 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
00033E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
000340 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         SET_SSR_STEADY CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 255
000342 0104               M         BANKSEL SSR_DATA_BANK
000344 0EFF               M          MOVLW  255
000346 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
000348 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
00034A 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
00034C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
00034E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
000350 D???               M         BRA     LLIM_END_3
                          M 
000352                    M LLIM_OFF_3:
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000352 0104               M         BANKSEL SSR_DATA_BANK
000354 0E00               M          MOVLW  0
000356 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
000358 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
00035A 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
00035C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
00035E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
000360 0104               M         BANKSEL SSR_DATA_BANK
000362 0E00               M          MOVLW  0
000364 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
000366 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
000368 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
00036A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
00036C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         
00036E                    M LLIM_END_3:
00036E 010C               M         BANKSEL QUIZSHOW_DATA
  00000004                M LLIM_N  ++
000370 D???               M         BRA     SCN_DB_END_1
                          M 
000372                    M SCN_DB_DING_1:
000372 8100               M         BSF     BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_PRESSED, BANKED
                          M         ; copy timer values
000374 C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+BTN_IDX_L0
000378 C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+BTN_IDX_L0
00037C CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+BTN_IDX_L0
000380 CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+BTN_IDX_L0
                          M         ; update the lights
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L0, CHAN_L0R, CHAN_L0R
000384 010C               M         BANKSEL QUIZSHOW_DATA
000386 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_LOCKED, BANKED
000388 D???               M         BRA     LLIM_NOT_LOCKED_4
                          M 
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
00038A 0104               M         BANKSEL SSR_DATA_BANK
00038C 0E00               M          MOVLW  0
00038E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
000390 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
000392 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
000394 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
000396 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L0R
                          M          SET_SSR_PATTERN CHAN_L0R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000398 0104               M         BANKSEL SSR_DATA_BANK
00039A 0E00               M          MOVLW  0
00039C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
00039E 0E04               M          MOVLW  4
0003A0 6F00               M          MOVWF  SSR_00_STEP+CHAN_L0R, BANKED
0003A2 0E01               M          MOVLW  1
0003A4 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L0R, BANKED
0003A6 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L0R, BANKED
0003A8 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0003AA 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L0R, BANKED
0003AC D???               M         BRA     LLIM_END_4
                          M 
0003AE                    M LLIM_NOT_LOCKED_4:
0003AE A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_MASKED, BANKED
0003B0 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_PRESSED, BANKED
0003B2 D???               M         BRA     LLIM_OFF_4
0003B4 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0003B6 D???               M         BRA     LLIM_OFF_4
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
0003B8 0104               M         BANKSEL SSR_DATA_BANK
0003BA 0E00               M          MOVLW  0
0003BC 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
0003BE 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
0003C0 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
0003C2 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
0003C4 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         SET_SSR_STEADY CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 255
0003C6 0104               M         BANKSEL SSR_DATA_BANK
0003C8 0EFF               M          MOVLW  255
0003CA 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
0003CC 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
0003CE 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
0003D0 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
0003D2 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
0003D4 D???               M         BRA     LLIM_END_4
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
0003D6                    M LLIM_OFF_4:
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
0003D6 0104               M         BANKSEL SSR_DATA_BANK
0003D8 0E00               M          MOVLW  0
0003DA 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
0003DC 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
0003DE 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
0003E0 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
0003E2 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
0003E4 0104               M         BANKSEL SSR_DATA_BANK
0003E6 0E00               M          MOVLW  0
0003E8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
0003EA 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
0003EC 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
0003EE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
0003F0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         
0003F2                    M LLIM_END_4:
0003F2 010C               M         BANKSEL QUIZSHOW_DATA
  00000005                M LLIM_N  ++
0003F4 D???               M         BRA     SCN_DB_END_1
                          M         
0003F6                    M SCN_DB_CHANGED_1:
                          M         ; Button has changed since last time: reset debounce counter and wait.
0003F6 6B00               M         CLRF    BTN_X0_DEB_TMR+BTN_IDX_L0, BANKED
                          M 
0003F8                    M SCN_DB_END_1:
0003F8 A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
0003FA D???               M         BRA     SCN_DB_DONE_1
                          M         ;
                          M         ; Every 1/120 second do this:
                          M         ;
                          M         ; Check for locked-out buttons. We hold them in this state as long as
                          M         ; they are still being pressed.  Once they let go we start counting down time
                          M         ; before releasing.
                          M         ;
0003FC A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_LOCKED, BANKED
0003FE D???               M         BRA     SCN_DB_DONE_1
                          M 
000400 A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_ACTIVE, BANKED
000402 D???               M         BRA     SCN_DB_LCK_1
                          M 
000404 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_L0 ; active+locked: reset and hold timer
000408 D???               M         BRA     SCN_DB_DONE_1
                          M 
00040A                    M SCN_DB_LCK_1:
00040A 2F00               M         DECFSZ  BTN_X0_LOCKTMR+BTN_IDX_L0, F, BANKED    ; locked: count down to unlock time
00040C D???               M         BRA     SCN_DB_DONE_1
                          M 
00040E 9500               M         BCF     BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_LOCKED, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L0, CHAN_L0R, CHAN_L0R
000410 010C               M         BANKSEL QUIZSHOW_DATA
000412 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_LOCKED, BANKED
000414 D???               M         BRA     LLIM_NOT_LOCKED_5
                          M 
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
000416 0104               M         BANKSEL SSR_DATA_BANK
000418 0E00               M          MOVLW  0
00041A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
00041C 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
00041E 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
000420 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
000422 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L0R
                          M          SET_SSR_PATTERN CHAN_L0R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000424 0104               M         BANKSEL SSR_DATA_BANK
000426 0E00               M          MOVLW  0
000428 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
00042A 0E04               M          MOVLW  4
00042C 6F00               M          MOVWF  SSR_00_STEP+CHAN_L0R, BANKED
00042E 0E01               M          MOVLW  1
000430 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L0R, BANKED
000432 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L0R, BANKED
000434 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000436 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L0R, BANKED
000438 D???               M         BRA     LLIM_END_5
                          M 
00043A                    M LLIM_NOT_LOCKED_5:
00043A A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_MASKED, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00043C B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_PRESSED, BANKED
00043E D???               M         BRA     LLIM_OFF_5
000440 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000442 D???               M         BRA     LLIM_OFF_5
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
000444 0104               M         BANKSEL SSR_DATA_BANK
000446 0E00               M          MOVLW  0
000448 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
00044A 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
00044C 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
00044E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
000450 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         SET_SSR_STEADY CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 255
000452 0104               M         BANKSEL SSR_DATA_BANK
000454 0EFF               M          MOVLW  255
000456 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
000458 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
00045A 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
00045C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
00045E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
000460 D???               M         BRA     LLIM_END_5
                          M 
000462                    M LLIM_OFF_5:
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
000462 0104               M         BANKSEL SSR_DATA_BANK
000464 0E00               M          MOVLW  0
000466 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
000468 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
00046A 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
00046C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
00046E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
000470 0104               M         BANKSEL SSR_DATA_BANK
000472 0E00               M          MOVLW  0
000474 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
000476 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
000478 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
00047A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
00047C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         
00047E                    M LLIM_END_5:
00047E 010C               M         BANKSEL QUIZSHOW_DATA
  00000006                M LLIM_N  ++
                          M         
000480                    M SCN_DB_DONE_1:
  00000002                M SCN_DBN ++
                      00968           SCAN_DEBOUNCE BTN_IDX_X1, PORT_X1, BIT_X1, CHAN_X1G, CHAN_X1R
                          M         ; Sense button
000480 B280               M         BTFSC   PORT_X1,  BIT_X1,  ACCESS
000482 D???               M         BRA     SCN_DB_ACTIVE_2
                          M 
                          M         ; Button registers as being inactive now.  How long has this been the case?
000484 B700               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_ACTIVE, BANKED
000486 D???               M         BRA     SCN_DB_CHANGED_2
                          M 
                          M         ; Still inactive? keep counting...
000488 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_X1, F, BANKED
00048A D???               M         BRA     SCN_DB_END_2
                          M 
                          M         ; It's still inactive after 256 polls.  Time to count it as officially off now.
00048C 9700               M         BCF     BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; XXX Based on our current state, deal with the consequences of letting
                          M         ; XXX go of the button now.
                          M         ;
                          M         ; I think actually there aren't any here.
                          M         ;
00048E D???               M         BRA     SCN_DB_END_2
                          M 
000490                    M SCN_DB_ACTIVE_2:
                          M         ; Button registers as being active now.  How long has this been happening?
000490 A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_ACTIVE, BANKED
000492 D???               M         BRA     SCN_DB_CHANGED_2
                          M 
                          M         ; Still active? keep counting...
000494 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_X1, F, BANKED
000496 D???               M         BRA     SCN_DB_END_2
                          M 
                          M         ; It's still active after 256 polls.  Time to count it as officially on now.
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000498 8700               M         BSF     BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; Based on our current state, deal with the consequences of hitting
                          M         ; the button now.
                          M         ;
                          M         ; If already pressed: ignore
                          M         ; ElseIf masked out: ignore
                          M         ; ElseIf locked out: reset lockout timer to start [handled above]
                          M         ; ElseIf scanning: copy timer into button stats, set pressed flag
                          M         ; Else: set lockout state, reset lockout timer
                          M         ;       
00049A A100               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_PRESSED, BANKED
00049C B300               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_MASKED, BANKED
00049E D???               M         BRA     SCN_DB_END_2
                          M 
0004A0 B000               M         BTFSC   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0004A2 D???               M         BRA     SCN_DB_DING_2
                          M 
0004A4 8500               M         BSF     BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_LOCKED, BANKED
0004A6 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_X1 
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X1, CHAN_X1G, CHAN_X1R
0004AA 010C               M         BANKSEL QUIZSHOW_DATA
0004AC A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_LOCKED, BANKED
0004AE D???               M         BRA     LLIM_NOT_LOCKED_6
                          M 
                          M         SET_SSR_OFF CHAN_X1G
                          M          SET_SSR_VALUE CHAN_X1G, 0
0004B0 0104               M         BANKSEL SSR_DATA_BANK
0004B2 0E00               M          MOVLW  0
0004B4 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1G, BANKED
0004B6 6B00               M          CLRF   SSR_00_STEP+CHAN_X1G, BANKED
0004B8 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1G, BANKED
0004BA 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1G, BANKED
0004BC 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X1R
                          M          SET_SSR_PATTERN CHAN_X1R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0004BE 0104               M         BANKSEL SSR_DATA_BANK
0004C0 0E00               M          MOVLW  0
0004C2 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
0004C4 0E04               M          MOVLW  4
0004C6 6F00               M          MOVWF  SSR_00_STEP+CHAN_X1R, BANKED
0004C8 0E01               M          MOVLW  1
0004CA 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X1R, BANKED
0004CC 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X1R, BANKED
0004CE 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0004D0 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X1R, BANKED
0004D2 D???               M         BRA     LLIM_END_6
                          M 
0004D4                    M LLIM_NOT_LOCKED_6:
0004D4 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_MASKED, BANKED
0004D6 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_PRESSED, BANKED
0004D8 D???               M         BRA     LLIM_OFF_6
0004DA A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0004DC D???               M         BRA     LLIM_OFF_6
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X1R
                          M          SET_SSR_VALUE CHAN_X1R, 0
0004DE 0104               M         BANKSEL SSR_DATA_BANK
0004E0 0E00               M          MOVLW  0
0004E2 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
0004E4 6B00               M          CLRF   SSR_00_STEP+CHAN_X1R, BANKED
0004E6 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1R, BANKED
0004E8 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1R, BANKED
0004EA 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1R, BANKED
                          M         SET_SSR_STEADY CHAN_X1G
                          M          SET_SSR_VALUE CHAN_X1G, 255
0004EC 0104               M         BANKSEL SSR_DATA_BANK
0004EE 0EFF               M          MOVLW  255
0004F0 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1G, BANKED
0004F2 6B00               M          CLRF   SSR_00_STEP+CHAN_X1G, BANKED
0004F4 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1G, BANKED
0004F6 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1G, BANKED
0004F8 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1G, BANKED
0004FA D???               M         BRA     LLIM_END_6
                          M 
0004FC                    M LLIM_OFF_6:
                          M         SET_SSR_OFF CHAN_X1G
                          M          SET_SSR_VALUE CHAN_X1G, 0
0004FC 0104               M         BANKSEL SSR_DATA_BANK
0004FE 0E00               M          MOVLW  0
000500 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1G, BANKED
000502 6B00               M          CLRF   SSR_00_STEP+CHAN_X1G, BANKED
000504 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1G, BANKED
000506 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1G, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000508 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1G, BANKED
                          M         SET_SSR_OFF CHAN_X1R
                          M          SET_SSR_VALUE CHAN_X1R, 0
00050A 0104               M         BANKSEL SSR_DATA_BANK
00050C 0E00               M          MOVLW  0
00050E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
000510 6B00               M          CLRF   SSR_00_STEP+CHAN_X1R, BANKED
000512 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1R, BANKED
000514 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1R, BANKED
000516 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1R, BANKED
                          M         
000518                    M LLIM_END_6:
000518 010C               M         BANKSEL QUIZSHOW_DATA
  00000007                M LLIM_N  ++
00051A D???               M         BRA     SCN_DB_END_2
                          M 
00051C                    M SCN_DB_DING_2:
00051C 8100               M         BSF     BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_PRESSED, BANKED
                          M         ; copy timer values
00051E C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+BTN_IDX_X1
000522 C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+BTN_IDX_X1
000526 CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+BTN_IDX_X1
00052A CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+BTN_IDX_X1
                          M         ; update the lights
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X1, CHAN_X1G, CHAN_X1R
00052E 010C               M         BANKSEL QUIZSHOW_DATA
000530 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_LOCKED, BANKED
000532 D???               M         BRA     LLIM_NOT_LOCKED_7
                          M 
                          M         SET_SSR_OFF CHAN_X1G
                          M          SET_SSR_VALUE CHAN_X1G, 0
000534 0104               M         BANKSEL SSR_DATA_BANK
000536 0E00               M          MOVLW  0
000538 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1G, BANKED
00053A 6B00               M          CLRF   SSR_00_STEP+CHAN_X1G, BANKED
00053C 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1G, BANKED
00053E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1G, BANKED
000540 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X1R
                          M          SET_SSR_PATTERN CHAN_X1R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000542 0104               M         BANKSEL SSR_DATA_BANK
000544 0E00               M          MOVLW  0
000546 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
000548 0E04               M          MOVLW  4
00054A 6F00               M          MOVWF  SSR_00_STEP+CHAN_X1R, BANKED
00054C 0E01               M          MOVLW  1
00054E 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X1R, BANKED
000550 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X1R, BANKED
000552 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000554 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X1R, BANKED
000556 D???               M         BRA     LLIM_END_7
                          M 
000558                    M LLIM_NOT_LOCKED_7:
000558 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_MASKED, BANKED
00055A B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_PRESSED, BANKED
00055C D???               M         BRA     LLIM_OFF_7
00055E A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000560 D???               M         BRA     LLIM_OFF_7
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X1R
                          M          SET_SSR_VALUE CHAN_X1R, 0
000562 0104               M         BANKSEL SSR_DATA_BANK
000564 0E00               M          MOVLW  0
000566 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
000568 6B00               M          CLRF   SSR_00_STEP+CHAN_X1R, BANKED
00056A 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1R, BANKED
00056C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1R, BANKED
00056E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1R, BANKED
                          M         SET_SSR_STEADY CHAN_X1G
                          M          SET_SSR_VALUE CHAN_X1G, 255
000570 0104               M         BANKSEL SSR_DATA_BANK
000572 0EFF               M          MOVLW  255
000574 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1G, BANKED
000576 6B00               M          CLRF   SSR_00_STEP+CHAN_X1G, BANKED
000578 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1G, BANKED
00057A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1G, BANKED
00057C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1G, BANKED
00057E D???               M         BRA     LLIM_END_7
                          M 
000580                    M LLIM_OFF_7:
                          M         SET_SSR_OFF CHAN_X1G
                          M          SET_SSR_VALUE CHAN_X1G, 0
000580 0104               M         BANKSEL SSR_DATA_BANK
000582 0E00               M          MOVLW  0
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000584 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1G, BANKED
000586 6B00               M          CLRF   SSR_00_STEP+CHAN_X1G, BANKED
000588 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1G, BANKED
00058A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1G, BANKED
00058C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1G, BANKED
                          M         SET_SSR_OFF CHAN_X1R
                          M          SET_SSR_VALUE CHAN_X1R, 0
00058E 0104               M         BANKSEL SSR_DATA_BANK
000590 0E00               M          MOVLW  0
000592 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
000594 6B00               M          CLRF   SSR_00_STEP+CHAN_X1R, BANKED
000596 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1R, BANKED
000598 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1R, BANKED
00059A 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1R, BANKED
                          M         
00059C                    M LLIM_END_7:
00059C 010C               M         BANKSEL QUIZSHOW_DATA
  00000008                M LLIM_N  ++
00059E D???               M         BRA     SCN_DB_END_2
                          M         
0005A0                    M SCN_DB_CHANGED_2:
                          M         ; Button has changed since last time: reset debounce counter and wait.
0005A0 6B00               M         CLRF    BTN_X0_DEB_TMR+BTN_IDX_X1, BANKED
                          M 
0005A2                    M SCN_DB_END_2:
0005A2 A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
0005A4 D???               M         BRA     SCN_DB_DONE_2
                          M         ;
                          M         ; Every 1/120 second do this:
                          M         ;
                          M         ; Check for locked-out buttons. We hold them in this state as long as
                          M         ; they are still being pressed.  Once they let go we start counting down time
                          M         ; before releasing.
                          M         ;
0005A6 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_LOCKED, BANKED
0005A8 D???               M         BRA     SCN_DB_DONE_2
                          M 
0005AA A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_ACTIVE, BANKED
0005AC D???               M         BRA     SCN_DB_LCK_2
                          M 
0005AE C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_X1 ; active+locked: reset and hold timer
0005B2 D???               M         BRA     SCN_DB_DONE_2
                          M 
0005B4                    M SCN_DB_LCK_2:
0005B4 2F00               M         DECFSZ  BTN_X0_LOCKTMR+BTN_IDX_X1, F, BANKED    ; locked: count down to unlock time
0005B6 D???               M         BRA     SCN_DB_DONE_2
                          M 
0005B8 9500               M         BCF     BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_LOCKED, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X1, CHAN_X1G, CHAN_X1R
0005BA 010C               M         BANKSEL QUIZSHOW_DATA
0005BC A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_LOCKED, BANKED
0005BE D???               M         BRA     LLIM_NOT_LOCKED_8
                          M 
                          M         SET_SSR_OFF CHAN_X1G
                          M          SET_SSR_VALUE CHAN_X1G, 0
0005C0 0104               M         BANKSEL SSR_DATA_BANK
0005C2 0E00               M          MOVLW  0
0005C4 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1G, BANKED
0005C6 6B00               M          CLRF   SSR_00_STEP+CHAN_X1G, BANKED
0005C8 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1G, BANKED
0005CA 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1G, BANKED
0005CC 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X1R
                          M          SET_SSR_PATTERN CHAN_X1R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0005CE 0104               M         BANKSEL SSR_DATA_BANK
0005D0 0E00               M          MOVLW  0
0005D2 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
0005D4 0E04               M          MOVLW  4
0005D6 6F00               M          MOVWF  SSR_00_STEP+CHAN_X1R, BANKED
0005D8 0E01               M          MOVLW  1
0005DA 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X1R, BANKED
0005DC 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X1R, BANKED
0005DE 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0005E0 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X1R, BANKED
0005E2 D???               M         BRA     LLIM_END_8
                          M 
0005E4                    M LLIM_NOT_LOCKED_8:
0005E4 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_MASKED, BANKED
0005E6 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_PRESSED, BANKED
0005E8 D???               M         BRA     LLIM_OFF_8
0005EA A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0005EC D???               M         BRA     LLIM_OFF_8
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X1R
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M          SET_SSR_VALUE CHAN_X1R, 0
0005EE 0104               M         BANKSEL SSR_DATA_BANK
0005F0 0E00               M          MOVLW  0
0005F2 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
0005F4 6B00               M          CLRF   SSR_00_STEP+CHAN_X1R, BANKED
0005F6 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1R, BANKED
0005F8 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1R, BANKED
0005FA 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1R, BANKED
                          M         SET_SSR_STEADY CHAN_X1G
                          M          SET_SSR_VALUE CHAN_X1G, 255
0005FC 0104               M         BANKSEL SSR_DATA_BANK
0005FE 0EFF               M          MOVLW  255
000600 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1G, BANKED
000602 6B00               M          CLRF   SSR_00_STEP+CHAN_X1G, BANKED
000604 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1G, BANKED
000606 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1G, BANKED
000608 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1G, BANKED
00060A D???               M         BRA     LLIM_END_8
                          M 
00060C                    M LLIM_OFF_8:
                          M         SET_SSR_OFF CHAN_X1G
                          M          SET_SSR_VALUE CHAN_X1G, 0
00060C 0104               M         BANKSEL SSR_DATA_BANK
00060E 0E00               M          MOVLW  0
000610 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1G, BANKED
000612 6B00               M          CLRF   SSR_00_STEP+CHAN_X1G, BANKED
000614 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1G, BANKED
000616 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1G, BANKED
000618 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1G, BANKED
                          M         SET_SSR_OFF CHAN_X1R
                          M          SET_SSR_VALUE CHAN_X1R, 0
00061A 0104               M         BANKSEL SSR_DATA_BANK
00061C 0E00               M          MOVLW  0
00061E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
000620 6B00               M          CLRF   SSR_00_STEP+CHAN_X1R, BANKED
000622 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1R, BANKED
000624 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1R, BANKED
000626 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1R, BANKED
                          M         
000628                    M LLIM_END_8:
000628 010C               M         BANKSEL QUIZSHOW_DATA
  00000009                M LLIM_N  ++
                          M         
00062A                    M SCN_DB_DONE_2:
  00000003                M SCN_DBN ++
                      00969           SCAN_DEBOUNCE BTN_IDX_L1, PORT_L1, BIT_L1, CHAN_L1R, CHAN_L1R
                          M         ; Sense button
00062A B080               M         BTFSC   PORT_L1,  BIT_L1,  ACCESS
00062C D???               M         BRA     SCN_DB_ACTIVE_3
                          M 
                          M         ; Button registers as being inactive now.  How long has this been the case?
00062E B700               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_ACTIVE, BANKED
000630 D???               M         BRA     SCN_DB_CHANGED_3
                          M 
                          M         ; Still inactive? keep counting...
000632 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_L1, F, BANKED
000634 D???               M         BRA     SCN_DB_END_3
                          M 
                          M         ; It's still inactive after 256 polls.  Time to count it as officially off now.
000636 9700               M         BCF     BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; XXX Based on our current state, deal with the consequences of letting
                          M         ; XXX go of the button now.
                          M         ;
                          M         ; I think actually there aren't any here.
                          M         ;
000638 D???               M         BRA     SCN_DB_END_3
                          M 
00063A                    M SCN_DB_ACTIVE_3:
                          M         ; Button registers as being active now.  How long has this been happening?
00063A A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_ACTIVE, BANKED
00063C D???               M         BRA     SCN_DB_CHANGED_3
                          M 
                          M         ; Still active? keep counting...
00063E 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_L1, F, BANKED
000640 D???               M         BRA     SCN_DB_END_3
                          M 
                          M         ; It's still active after 256 polls.  Time to count it as officially on now.
000642 8700               M         BSF     BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; Based on our current state, deal with the consequences of hitting
                          M         ; the button now.
                          M         ;
                          M         ; If already pressed: ignore
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ; ElseIf masked out: ignore
                          M         ; ElseIf locked out: reset lockout timer to start [handled above]
                          M         ; ElseIf scanning: copy timer into button stats, set pressed flag
                          M         ; Else: set lockout state, reset lockout timer
                          M         ;       
000644 A100               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_PRESSED, BANKED
000646 B300               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_MASKED, BANKED
000648 D???               M         BRA     SCN_DB_END_3
                          M 
00064A B000               M         BTFSC   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
00064C D???               M         BRA     SCN_DB_DING_3
                          M 
00064E 8500               M         BSF     BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_LOCKED, BANKED
000650 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_L1 
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L1, CHAN_L1R, CHAN_L1R
000654 010C               M         BANKSEL QUIZSHOW_DATA
000656 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_LOCKED, BANKED
000658 D???               M         BRA     LLIM_NOT_LOCKED_9
                          M 
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
00065A 0104               M         BANKSEL SSR_DATA_BANK
00065C 0E00               M          MOVLW  0
00065E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
000660 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
000662 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
000664 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
000666 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L1R
                          M          SET_SSR_PATTERN CHAN_L1R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000668 0104               M         BANKSEL SSR_DATA_BANK
00066A 0E00               M          MOVLW  0
00066C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
00066E 0E04               M          MOVLW  4
000670 6F00               M          MOVWF  SSR_00_STEP+CHAN_L1R, BANKED
000672 0E01               M          MOVLW  1
000674 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L1R, BANKED
000676 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L1R, BANKED
000678 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
00067A 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L1R, BANKED
00067C D???               M         BRA     LLIM_END_9
                          M 
00067E                    M LLIM_NOT_LOCKED_9:
00067E A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_MASKED, BANKED
000680 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_PRESSED, BANKED
000682 D???               M         BRA     LLIM_OFF_9
000684 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000686 D???               M         BRA     LLIM_OFF_9
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
000688 0104               M         BANKSEL SSR_DATA_BANK
00068A 0E00               M          MOVLW  0
00068C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
00068E 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
000690 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
000692 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
000694 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         SET_SSR_STEADY CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 255
000696 0104               M         BANKSEL SSR_DATA_BANK
000698 0EFF               M          MOVLW  255
00069A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
00069C 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
00069E 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
0006A0 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
0006A2 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
0006A4 D???               M         BRA     LLIM_END_9
                          M 
0006A6                    M LLIM_OFF_9:
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
0006A6 0104               M         BANKSEL SSR_DATA_BANK
0006A8 0E00               M          MOVLW  0
0006AA 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
0006AC 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
0006AE 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
0006B0 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
0006B2 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
0006B4 0104               M         BANKSEL SSR_DATA_BANK
0006B6 0E00               M          MOVLW  0
0006B8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006BA 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
0006BC 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
0006BE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
0006C0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         
0006C2                    M LLIM_END_9:
0006C2 010C               M         BANKSEL QUIZSHOW_DATA
  0000000A                M LLIM_N  ++
0006C4 D???               M         BRA     SCN_DB_END_3
                          M 
0006C6                    M SCN_DB_DING_3:
0006C6 8100               M         BSF     BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_PRESSED, BANKED
                          M         ; copy timer values
0006C8 C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+BTN_IDX_L1
0006CC C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+BTN_IDX_L1
0006D0 CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+BTN_IDX_L1
0006D4 CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+BTN_IDX_L1
                          M         ; update the lights
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L1, CHAN_L1R, CHAN_L1R
0006D8 010C               M         BANKSEL QUIZSHOW_DATA
0006DA A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_LOCKED, BANKED
0006DC D???               M         BRA     LLIM_NOT_LOCKED_10
                          M 
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
0006DE 0104               M         BANKSEL SSR_DATA_BANK
0006E0 0E00               M          MOVLW  0
0006E2 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
0006E4 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
0006E6 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
0006E8 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
0006EA 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L1R
                          M          SET_SSR_PATTERN CHAN_L1R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0006EC 0104               M         BANKSEL SSR_DATA_BANK
0006EE 0E00               M          MOVLW  0
0006F0 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
0006F2 0E04               M          MOVLW  4
0006F4 6F00               M          MOVWF  SSR_00_STEP+CHAN_L1R, BANKED
0006F6 0E01               M          MOVLW  1
0006F8 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L1R, BANKED
0006FA 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L1R, BANKED
0006FC 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0006FE 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L1R, BANKED
000700 D???               M         BRA     LLIM_END_10
                          M 
000702                    M LLIM_NOT_LOCKED_10:
000702 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_MASKED, BANKED
000704 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_PRESSED, BANKED
000706 D???               M         BRA     LLIM_OFF_10
000708 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
00070A D???               M         BRA     LLIM_OFF_10
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
00070C 0104               M         BANKSEL SSR_DATA_BANK
00070E 0E00               M          MOVLW  0
000710 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
000712 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
000714 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
000716 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
000718 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         SET_SSR_STEADY CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 255
00071A 0104               M         BANKSEL SSR_DATA_BANK
00071C 0EFF               M          MOVLW  255
00071E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
000720 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
000722 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
000724 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
000726 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
000728 D???               M         BRA     LLIM_END_10
                          M 
00072A                    M LLIM_OFF_10:
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
00072A 0104               M         BANKSEL SSR_DATA_BANK
00072C 0E00               M          MOVLW  0
00072E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
000730 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
000732 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
000734 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
000736 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         SET_SSR_OFF CHAN_L1R
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M          SET_SSR_VALUE CHAN_L1R, 0
000738 0104               M         BANKSEL SSR_DATA_BANK
00073A 0E00               M          MOVLW  0
00073C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
00073E 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
000740 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
000742 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
000744 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         
000746                    M LLIM_END_10:
000746 010C               M         BANKSEL QUIZSHOW_DATA
  0000000B                M LLIM_N  ++
000748 D???               M         BRA     SCN_DB_END_3
                          M         
00074A                    M SCN_DB_CHANGED_3:
                          M         ; Button has changed since last time: reset debounce counter and wait.
00074A 6B00               M         CLRF    BTN_X0_DEB_TMR+BTN_IDX_L1, BANKED
                          M 
00074C                    M SCN_DB_END_3:
00074C A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
00074E D???               M         BRA     SCN_DB_DONE_3
                          M         ;
                          M         ; Every 1/120 second do this:
                          M         ;
                          M         ; Check for locked-out buttons. We hold them in this state as long as
                          M         ; they are still being pressed.  Once they let go we start counting down time
                          M         ; before releasing.
                          M         ;
000750 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_LOCKED, BANKED
000752 D???               M         BRA     SCN_DB_DONE_3
                          M 
000754 A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_ACTIVE, BANKED
000756 D???               M         BRA     SCN_DB_LCK_3
                          M 
000758 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_L1 ; active+locked: reset and hold timer
00075C D???               M         BRA     SCN_DB_DONE_3
                          M 
00075E                    M SCN_DB_LCK_3:
00075E 2F00               M         DECFSZ  BTN_X0_LOCKTMR+BTN_IDX_L1, F, BANKED    ; locked: count down to unlock time
000760 D???               M         BRA     SCN_DB_DONE_3
                          M 
000762 9500               M         BCF     BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_LOCKED, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L1, CHAN_L1R, CHAN_L1R
000764 010C               M         BANKSEL QUIZSHOW_DATA
000766 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_LOCKED, BANKED
000768 D???               M         BRA     LLIM_NOT_LOCKED_11
                          M 
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
00076A 0104               M         BANKSEL SSR_DATA_BANK
00076C 0E00               M          MOVLW  0
00076E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
000770 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
000772 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
000774 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
000776 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L1R
                          M          SET_SSR_PATTERN CHAN_L1R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000778 0104               M         BANKSEL SSR_DATA_BANK
00077A 0E00               M          MOVLW  0
00077C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
00077E 0E04               M          MOVLW  4
000780 6F00               M          MOVWF  SSR_00_STEP+CHAN_L1R, BANKED
000782 0E01               M          MOVLW  1
000784 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L1R, BANKED
000786 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L1R, BANKED
000788 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
00078A 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L1R, BANKED
00078C D???               M         BRA     LLIM_END_11
                          M 
00078E                    M LLIM_NOT_LOCKED_11:
00078E A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_MASKED, BANKED
000790 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_PRESSED, BANKED
000792 D???               M         BRA     LLIM_OFF_11
000794 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000796 D???               M         BRA     LLIM_OFF_11
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
000798 0104               M         BANKSEL SSR_DATA_BANK
00079A 0E00               M          MOVLW  0
00079C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
00079E 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
0007A0 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007A2 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
0007A4 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         SET_SSR_STEADY CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 255
0007A6 0104               M         BANKSEL SSR_DATA_BANK
0007A8 0EFF               M          MOVLW  255
0007AA 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
0007AC 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
0007AE 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
0007B0 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
0007B2 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
0007B4 D???               M         BRA     LLIM_END_11
                          M 
0007B6                    M LLIM_OFF_11:
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
0007B6 0104               M         BANKSEL SSR_DATA_BANK
0007B8 0E00               M          MOVLW  0
0007BA 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
0007BC 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
0007BE 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
0007C0 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
0007C2 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
0007C4 0104               M         BANKSEL SSR_DATA_BANK
0007C6 0E00               M          MOVLW  0
0007C8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
0007CA 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
0007CC 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
0007CE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
0007D0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         
0007D2                    M LLIM_END_11:
0007D2 010C               M         BANKSEL QUIZSHOW_DATA
  0000000C                M LLIM_N  ++
                          M         
0007D4                    M SCN_DB_DONE_3:
  00000004                M SCN_DBN ++
                      00970           SCAN_DEBOUNCE BTN_IDX_X2, PORT_X2, BIT_X2, CHAN_X2G, CHAN_X2R
                          M         ; Sense button
0007D4 B880               M         BTFSC   PORT_X2,  BIT_X2,  ACCESS
0007D6 D???               M         BRA     SCN_DB_ACTIVE_4
                          M 
                          M         ; Button registers as being inactive now.  How long has this been the case?
0007D8 B700               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_ACTIVE, BANKED
0007DA D???               M         BRA     SCN_DB_CHANGED_4
                          M 
                          M         ; Still inactive? keep counting...
0007DC 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_X2, F, BANKED
0007DE D???               M         BRA     SCN_DB_END_4
                          M 
                          M         ; It's still inactive after 256 polls.  Time to count it as officially off now.
0007E0 9700               M         BCF     BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; XXX Based on our current state, deal with the consequences of letting
                          M         ; XXX go of the button now.
                          M         ;
                          M         ; I think actually there aren't any here.
                          M         ;
0007E2 D???               M         BRA     SCN_DB_END_4
                          M 
0007E4                    M SCN_DB_ACTIVE_4:
                          M         ; Button registers as being active now.  How long has this been happening?
0007E4 A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_ACTIVE, BANKED
0007E6 D???               M         BRA     SCN_DB_CHANGED_4
                          M 
                          M         ; Still active? keep counting...
0007E8 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_X2, F, BANKED
0007EA D???               M         BRA     SCN_DB_END_4
                          M 
                          M         ; It's still active after 256 polls.  Time to count it as officially on now.
0007EC 8700               M         BSF     BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; Based on our current state, deal with the consequences of hitting
                          M         ; the button now.
                          M         ;
                          M         ; If already pressed: ignore
                          M         ; ElseIf masked out: ignore
                          M         ; ElseIf locked out: reset lockout timer to start [handled above]
                          M         ; ElseIf scanning: copy timer into button stats, set pressed flag
                          M         ; Else: set lockout state, reset lockout timer
                          M         ;       
0007EE A100               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_PRESSED, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007F0 B300               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_MASKED, BANKED
0007F2 D???               M         BRA     SCN_DB_END_4
                          M 
0007F4 B000               M         BTFSC   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0007F6 D???               M         BRA     SCN_DB_DING_4
                          M 
0007F8 8500               M         BSF     BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_LOCKED, BANKED
0007FA C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_X2 
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X2, CHAN_X2G, CHAN_X2R
0007FE 010C               M         BANKSEL QUIZSHOW_DATA
000800 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_LOCKED, BANKED
000802 D???               M         BRA     LLIM_NOT_LOCKED_12
                          M 
                          M         SET_SSR_OFF CHAN_X2G
                          M          SET_SSR_VALUE CHAN_X2G, 0
000804 0104               M         BANKSEL SSR_DATA_BANK
000806 0E00               M          MOVLW  0
000808 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2G, BANKED
00080A 6B00               M          CLRF   SSR_00_STEP+CHAN_X2G, BANKED
00080C 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2G, BANKED
00080E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2G, BANKED
000810 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X2R
                          M          SET_SSR_PATTERN CHAN_X2R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000812 0104               M         BANKSEL SSR_DATA_BANK
000814 0E00               M          MOVLW  0
000816 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
000818 0E04               M          MOVLW  4
00081A 6F00               M          MOVWF  SSR_00_STEP+CHAN_X2R, BANKED
00081C 0E01               M          MOVLW  1
00081E 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X2R, BANKED
000820 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X2R, BANKED
000822 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000824 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X2R, BANKED
000826 D???               M         BRA     LLIM_END_12
                          M 
000828                    M LLIM_NOT_LOCKED_12:
000828 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_MASKED, BANKED
00082A B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_PRESSED, BANKED
00082C D???               M         BRA     LLIM_OFF_12
00082E A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000830 D???               M         BRA     LLIM_OFF_12
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X2R
                          M          SET_SSR_VALUE CHAN_X2R, 0
000832 0104               M         BANKSEL SSR_DATA_BANK
000834 0E00               M          MOVLW  0
000836 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
000838 6B00               M          CLRF   SSR_00_STEP+CHAN_X2R, BANKED
00083A 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2R, BANKED
00083C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2R, BANKED
00083E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2R, BANKED
                          M         SET_SSR_STEADY CHAN_X2G
                          M          SET_SSR_VALUE CHAN_X2G, 255
000840 0104               M         BANKSEL SSR_DATA_BANK
000842 0EFF               M          MOVLW  255
000844 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2G, BANKED
000846 6B00               M          CLRF   SSR_00_STEP+CHAN_X2G, BANKED
000848 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2G, BANKED
00084A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2G, BANKED
00084C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2G, BANKED
00084E D???               M         BRA     LLIM_END_12
                          M 
000850                    M LLIM_OFF_12:
                          M         SET_SSR_OFF CHAN_X2G
                          M          SET_SSR_VALUE CHAN_X2G, 0
000850 0104               M         BANKSEL SSR_DATA_BANK
000852 0E00               M          MOVLW  0
000854 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2G, BANKED
000856 6B00               M          CLRF   SSR_00_STEP+CHAN_X2G, BANKED
000858 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2G, BANKED
00085A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2G, BANKED
00085C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2G, BANKED
                          M         SET_SSR_OFF CHAN_X2R
                          M          SET_SSR_VALUE CHAN_X2R, 0
00085E 0104               M         BANKSEL SSR_DATA_BANK
000860 0E00               M          MOVLW  0
000862 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
000864 6B00               M          CLRF   SSR_00_STEP+CHAN_X2R, BANKED
000866 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2R, BANKED
000868 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2R, BANKED
00086A 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2R, BANKED
                          M         
00086C                    M LLIM_END_12:
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00086C 010C               M         BANKSEL QUIZSHOW_DATA
  0000000D                M LLIM_N  ++
00086E D???               M         BRA     SCN_DB_END_4
                          M 
000870                    M SCN_DB_DING_4:
000870 8100               M         BSF     BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_PRESSED, BANKED
                          M         ; copy timer values
000872 C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+BTN_IDX_X2
000876 C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+BTN_IDX_X2
00087A CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+BTN_IDX_X2
00087E CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+BTN_IDX_X2
                          M         ; update the lights
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X2, CHAN_X2G, CHAN_X2R
000882 010C               M         BANKSEL QUIZSHOW_DATA
000884 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_LOCKED, BANKED
000886 D???               M         BRA     LLIM_NOT_LOCKED_13
                          M 
                          M         SET_SSR_OFF CHAN_X2G
                          M          SET_SSR_VALUE CHAN_X2G, 0
000888 0104               M         BANKSEL SSR_DATA_BANK
00088A 0E00               M          MOVLW  0
00088C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2G, BANKED
00088E 6B00               M          CLRF   SSR_00_STEP+CHAN_X2G, BANKED
000890 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2G, BANKED
000892 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2G, BANKED
000894 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X2R
                          M          SET_SSR_PATTERN CHAN_X2R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000896 0104               M         BANKSEL SSR_DATA_BANK
000898 0E00               M          MOVLW  0
00089A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
00089C 0E04               M          MOVLW  4
00089E 6F00               M          MOVWF  SSR_00_STEP+CHAN_X2R, BANKED
0008A0 0E01               M          MOVLW  1
0008A2 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X2R, BANKED
0008A4 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X2R, BANKED
0008A6 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0008A8 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X2R, BANKED
0008AA D???               M         BRA     LLIM_END_13
                          M 
0008AC                    M LLIM_NOT_LOCKED_13:
0008AC A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_MASKED, BANKED
0008AE B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_PRESSED, BANKED
0008B0 D???               M         BRA     LLIM_OFF_13
0008B2 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0008B4 D???               M         BRA     LLIM_OFF_13
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X2R
                          M          SET_SSR_VALUE CHAN_X2R, 0
0008B6 0104               M         BANKSEL SSR_DATA_BANK
0008B8 0E00               M          MOVLW  0
0008BA 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
0008BC 6B00               M          CLRF   SSR_00_STEP+CHAN_X2R, BANKED
0008BE 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2R, BANKED
0008C0 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2R, BANKED
0008C2 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2R, BANKED
                          M         SET_SSR_STEADY CHAN_X2G
                          M          SET_SSR_VALUE CHAN_X2G, 255
0008C4 0104               M         BANKSEL SSR_DATA_BANK
0008C6 0EFF               M          MOVLW  255
0008C8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2G, BANKED
0008CA 6B00               M          CLRF   SSR_00_STEP+CHAN_X2G, BANKED
0008CC 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2G, BANKED
0008CE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2G, BANKED
0008D0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2G, BANKED
0008D2 D???               M         BRA     LLIM_END_13
                          M 
0008D4                    M LLIM_OFF_13:
                          M         SET_SSR_OFF CHAN_X2G
                          M          SET_SSR_VALUE CHAN_X2G, 0
0008D4 0104               M         BANKSEL SSR_DATA_BANK
0008D6 0E00               M          MOVLW  0
0008D8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2G, BANKED
0008DA 6B00               M          CLRF   SSR_00_STEP+CHAN_X2G, BANKED
0008DC 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2G, BANKED
0008DE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2G, BANKED
0008E0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2G, BANKED
                          M         SET_SSR_OFF CHAN_X2R
                          M          SET_SSR_VALUE CHAN_X2R, 0
0008E2 0104               M         BANKSEL SSR_DATA_BANK
0008E4 0E00               M          MOVLW  0
0008E6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
0008E8 6B00               M          CLRF   SSR_00_STEP+CHAN_X2R, BANKED
0008EA 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2R, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008EC 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2R, BANKED
0008EE 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2R, BANKED
                          M         
0008F0                    M LLIM_END_13:
0008F0 010C               M         BANKSEL QUIZSHOW_DATA
  0000000E                M LLIM_N  ++
0008F2 D???               M         BRA     SCN_DB_END_4
                          M         
0008F4                    M SCN_DB_CHANGED_4:
                          M         ; Button has changed since last time: reset debounce counter and wait.
0008F4 6B00               M         CLRF    BTN_X0_DEB_TMR+BTN_IDX_X2, BANKED
                          M 
0008F6                    M SCN_DB_END_4:
0008F6 A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
0008F8 D???               M         BRA     SCN_DB_DONE_4
                          M         ;
                          M         ; Every 1/120 second do this:
                          M         ;
                          M         ; Check for locked-out buttons. We hold them in this state as long as
                          M         ; they are still being pressed.  Once they let go we start counting down time
                          M         ; before releasing.
                          M         ;
0008FA A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_LOCKED, BANKED
0008FC D???               M         BRA     SCN_DB_DONE_4
                          M 
0008FE A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_ACTIVE, BANKED
000900 D???               M         BRA     SCN_DB_LCK_4
                          M 
000902 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_X2 ; active+locked: reset and hold timer
000906 D???               M         BRA     SCN_DB_DONE_4
                          M 
000908                    M SCN_DB_LCK_4:
000908 2F00               M         DECFSZ  BTN_X0_LOCKTMR+BTN_IDX_X2, F, BANKED    ; locked: count down to unlock time
00090A D???               M         BRA     SCN_DB_DONE_4
                          M 
00090C 9500               M         BCF     BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_LOCKED, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X2, CHAN_X2G, CHAN_X2R
00090E 010C               M         BANKSEL QUIZSHOW_DATA
000910 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_LOCKED, BANKED
000912 D???               M         BRA     LLIM_NOT_LOCKED_14
                          M 
                          M         SET_SSR_OFF CHAN_X2G
                          M          SET_SSR_VALUE CHAN_X2G, 0
000914 0104               M         BANKSEL SSR_DATA_BANK
000916 0E00               M          MOVLW  0
000918 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2G, BANKED
00091A 6B00               M          CLRF   SSR_00_STEP+CHAN_X2G, BANKED
00091C 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2G, BANKED
00091E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2G, BANKED
000920 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X2R
                          M          SET_SSR_PATTERN CHAN_X2R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000922 0104               M         BANKSEL SSR_DATA_BANK
000924 0E00               M          MOVLW  0
000926 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
000928 0E04               M          MOVLW  4
00092A 6F00               M          MOVWF  SSR_00_STEP+CHAN_X2R, BANKED
00092C 0E01               M          MOVLW  1
00092E 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X2R, BANKED
000930 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X2R, BANKED
000932 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000934 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X2R, BANKED
000936 D???               M         BRA     LLIM_END_14
                          M 
000938                    M LLIM_NOT_LOCKED_14:
000938 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_MASKED, BANKED
00093A B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_PRESSED, BANKED
00093C D???               M         BRA     LLIM_OFF_14
00093E A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000940 D???               M         BRA     LLIM_OFF_14
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X2R
                          M          SET_SSR_VALUE CHAN_X2R, 0
000942 0104               M         BANKSEL SSR_DATA_BANK
000944 0E00               M          MOVLW  0
000946 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
000948 6B00               M          CLRF   SSR_00_STEP+CHAN_X2R, BANKED
00094A 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2R, BANKED
00094C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2R, BANKED
00094E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2R, BANKED
                          M         SET_SSR_STEADY CHAN_X2G
                          M          SET_SSR_VALUE CHAN_X2G, 255
000950 0104               M         BANKSEL SSR_DATA_BANK
000952 0EFF               M          MOVLW  255
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000954 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2G, BANKED
000956 6B00               M          CLRF   SSR_00_STEP+CHAN_X2G, BANKED
000958 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2G, BANKED
00095A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2G, BANKED
00095C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2G, BANKED
00095E D???               M         BRA     LLIM_END_14
                          M 
000960                    M LLIM_OFF_14:
                          M         SET_SSR_OFF CHAN_X2G
                          M          SET_SSR_VALUE CHAN_X2G, 0
000960 0104               M         BANKSEL SSR_DATA_BANK
000962 0E00               M          MOVLW  0
000964 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2G, BANKED
000966 6B00               M          CLRF   SSR_00_STEP+CHAN_X2G, BANKED
000968 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2G, BANKED
00096A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2G, BANKED
00096C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2G, BANKED
                          M         SET_SSR_OFF CHAN_X2R
                          M          SET_SSR_VALUE CHAN_X2R, 0
00096E 0104               M         BANKSEL SSR_DATA_BANK
000970 0E00               M          MOVLW  0
000972 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
000974 6B00               M          CLRF   SSR_00_STEP+CHAN_X2R, BANKED
000976 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2R, BANKED
000978 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2R, BANKED
00097A 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2R, BANKED
                          M         
00097C                    M LLIM_END_14:
00097C 010C               M         BANKSEL QUIZSHOW_DATA
  0000000F                M LLIM_N  ++
                          M         
00097E                    M SCN_DB_DONE_4:
  00000005                M SCN_DBN ++
                      00971           SCAN_DEBOUNCE BTN_IDX_L2, PORT_L2, BIT_L2, CHAN_L2R, CHAN_L2R
                          M         ; Sense button
00097E BA80               M         BTFSC   PORT_L2,  BIT_L2,  ACCESS
000980 D???               M         BRA     SCN_DB_ACTIVE_5
                          M 
                          M         ; Button registers as being inactive now.  How long has this been the case?
000982 B700               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_ACTIVE, BANKED
000984 D???               M         BRA     SCN_DB_CHANGED_5
                          M 
                          M         ; Still inactive? keep counting...
000986 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_L2, F, BANKED
000988 D???               M         BRA     SCN_DB_END_5
                          M 
                          M         ; It's still inactive after 256 polls.  Time to count it as officially off now.
00098A 9700               M         BCF     BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; XXX Based on our current state, deal with the consequences of letting
                          M         ; XXX go of the button now.
                          M         ;
                          M         ; I think actually there aren't any here.
                          M         ;
00098C D???               M         BRA     SCN_DB_END_5
                          M 
00098E                    M SCN_DB_ACTIVE_5:
                          M         ; Button registers as being active now.  How long has this been happening?
00098E A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_ACTIVE, BANKED
000990 D???               M         BRA     SCN_DB_CHANGED_5
                          M 
                          M         ; Still active? keep counting...
000992 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_L2, F, BANKED
000994 D???               M         BRA     SCN_DB_END_5
                          M 
                          M         ; It's still active after 256 polls.  Time to count it as officially on now.
000996 8700               M         BSF     BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; Based on our current state, deal with the consequences of hitting
                          M         ; the button now.
                          M         ;
                          M         ; If already pressed: ignore
                          M         ; ElseIf masked out: ignore
                          M         ; ElseIf locked out: reset lockout timer to start [handled above]
                          M         ; ElseIf scanning: copy timer into button stats, set pressed flag
                          M         ; Else: set lockout state, reset lockout timer
                          M         ;       
000998 A100               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_PRESSED, BANKED
00099A B300               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_MASKED, BANKED
00099C D???               M         BRA     SCN_DB_END_5
                          M 
00099E B000               M         BTFSC   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0009A0 D???               M         BRA     SCN_DB_DING_5
                          M 
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009A2 8500               M         BSF     BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_LOCKED, BANKED
0009A4 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_L2 
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L2, CHAN_L2R, CHAN_L2R
0009A8 010C               M         BANKSEL QUIZSHOW_DATA
0009AA A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_LOCKED, BANKED
0009AC D???               M         BRA     LLIM_NOT_LOCKED_15
                          M 
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
0009AE 0104               M         BANKSEL SSR_DATA_BANK
0009B0 0E00               M          MOVLW  0
0009B2 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
0009B4 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
0009B6 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
0009B8 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
0009BA 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L2R
                          M          SET_SSR_PATTERN CHAN_L2R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0009BC 0104               M         BANKSEL SSR_DATA_BANK
0009BE 0E00               M          MOVLW  0
0009C0 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
0009C2 0E04               M          MOVLW  4
0009C4 6F00               M          MOVWF  SSR_00_STEP+CHAN_L2R, BANKED
0009C6 0E01               M          MOVLW  1
0009C8 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L2R, BANKED
0009CA 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L2R, BANKED
0009CC 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0009CE 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L2R, BANKED
0009D0 D???               M         BRA     LLIM_END_15
                          M 
0009D2                    M LLIM_NOT_LOCKED_15:
0009D2 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_MASKED, BANKED
0009D4 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_PRESSED, BANKED
0009D6 D???               M         BRA     LLIM_OFF_15
0009D8 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0009DA D???               M         BRA     LLIM_OFF_15
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
0009DC 0104               M         BANKSEL SSR_DATA_BANK
0009DE 0E00               M          MOVLW  0
0009E0 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
0009E2 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
0009E4 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
0009E6 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
0009E8 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         SET_SSR_STEADY CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 255
0009EA 0104               M         BANKSEL SSR_DATA_BANK
0009EC 0EFF               M          MOVLW  255
0009EE 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
0009F0 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
0009F2 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
0009F4 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
0009F6 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
0009F8 D???               M         BRA     LLIM_END_15
                          M 
0009FA                    M LLIM_OFF_15:
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
0009FA 0104               M         BANKSEL SSR_DATA_BANK
0009FC 0E00               M          MOVLW  0
0009FE 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000A00 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
000A02 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
000A04 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
000A06 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
000A08 0104               M         BANKSEL SSR_DATA_BANK
000A0A 0E00               M          MOVLW  0
000A0C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000A0E 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
000A10 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
000A12 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
000A14 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         
000A16                    M LLIM_END_15:
000A16 010C               M         BANKSEL QUIZSHOW_DATA
  00000010                M LLIM_N  ++
000A18 D???               M         BRA     SCN_DB_END_5
                          M 
000A1A                    M SCN_DB_DING_5:
000A1A 8100               M         BSF     BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_PRESSED, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ; copy timer values
000A1C C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+BTN_IDX_L2
000A20 C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+BTN_IDX_L2
000A24 CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+BTN_IDX_L2
000A28 CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+BTN_IDX_L2
                          M         ; update the lights
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L2, CHAN_L2R, CHAN_L2R
000A2C 010C               M         BANKSEL QUIZSHOW_DATA
000A2E A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_LOCKED, BANKED
000A30 D???               M         BRA     LLIM_NOT_LOCKED_16
                          M 
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
000A32 0104               M         BANKSEL SSR_DATA_BANK
000A34 0E00               M          MOVLW  0
000A36 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000A38 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
000A3A 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
000A3C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
000A3E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L2R
                          M          SET_SSR_PATTERN CHAN_L2R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000A40 0104               M         BANKSEL SSR_DATA_BANK
000A42 0E00               M          MOVLW  0
000A44 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000A46 0E04               M          MOVLW  4
000A48 6F00               M          MOVWF  SSR_00_STEP+CHAN_L2R, BANKED
000A4A 0E01               M          MOVLW  1
000A4C 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L2R, BANKED
000A4E 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L2R, BANKED
000A50 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000A52 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L2R, BANKED
000A54 D???               M         BRA     LLIM_END_16
                          M 
000A56                    M LLIM_NOT_LOCKED_16:
000A56 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_MASKED, BANKED
000A58 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_PRESSED, BANKED
000A5A D???               M         BRA     LLIM_OFF_16
000A5C A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000A5E D???               M         BRA     LLIM_OFF_16
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
000A60 0104               M         BANKSEL SSR_DATA_BANK
000A62 0E00               M          MOVLW  0
000A64 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000A66 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
000A68 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
000A6A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
000A6C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         SET_SSR_STEADY CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 255
000A6E 0104               M         BANKSEL SSR_DATA_BANK
000A70 0EFF               M          MOVLW  255
000A72 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000A74 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
000A76 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
000A78 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
000A7A 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
000A7C D???               M         BRA     LLIM_END_16
                          M 
000A7E                    M LLIM_OFF_16:
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
000A7E 0104               M         BANKSEL SSR_DATA_BANK
000A80 0E00               M          MOVLW  0
000A82 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000A84 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
000A86 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
000A88 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
000A8A 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
000A8C 0104               M         BANKSEL SSR_DATA_BANK
000A8E 0E00               M          MOVLW  0
000A90 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000A92 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
000A94 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
000A96 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
000A98 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         
000A9A                    M LLIM_END_16:
000A9A 010C               M         BANKSEL QUIZSHOW_DATA
  00000011                M LLIM_N  ++
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A9C D???               M         BRA     SCN_DB_END_5
                          M         
000A9E                    M SCN_DB_CHANGED_5:
                          M         ; Button has changed since last time: reset debounce counter and wait.
000A9E 6B00               M         CLRF    BTN_X0_DEB_TMR+BTN_IDX_L2, BANKED
                          M 
000AA0                    M SCN_DB_END_5:
000AA0 A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
000AA2 D???               M         BRA     SCN_DB_DONE_5
                          M         ;
                          M         ; Every 1/120 second do this:
                          M         ;
                          M         ; Check for locked-out buttons. We hold them in this state as long as
                          M         ; they are still being pressed.  Once they let go we start counting down time
                          M         ; before releasing.
                          M         ;
000AA4 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_LOCKED, BANKED
000AA6 D???               M         BRA     SCN_DB_DONE_5
                          M 
000AA8 A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_ACTIVE, BANKED
000AAA D???               M         BRA     SCN_DB_LCK_5
                          M 
000AAC C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_L2 ; active+locked: reset and hold timer
000AB0 D???               M         BRA     SCN_DB_DONE_5
                          M 
000AB2                    M SCN_DB_LCK_5:
000AB2 2F00               M         DECFSZ  BTN_X0_LOCKTMR+BTN_IDX_L2, F, BANKED    ; locked: count down to unlock time
000AB4 D???               M         BRA     SCN_DB_DONE_5
                          M 
000AB6 9500               M         BCF     BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_LOCKED, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L2, CHAN_L2R, CHAN_L2R
000AB8 010C               M         BANKSEL QUIZSHOW_DATA
000ABA A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_LOCKED, BANKED
000ABC D???               M         BRA     LLIM_NOT_LOCKED_17
                          M 
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
000ABE 0104               M         BANKSEL SSR_DATA_BANK
000AC0 0E00               M          MOVLW  0
000AC2 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000AC4 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
000AC6 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
000AC8 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
000ACA 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L2R
                          M          SET_SSR_PATTERN CHAN_L2R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000ACC 0104               M         BANKSEL SSR_DATA_BANK
000ACE 0E00               M          MOVLW  0
000AD0 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000AD2 0E04               M          MOVLW  4
000AD4 6F00               M          MOVWF  SSR_00_STEP+CHAN_L2R, BANKED
000AD6 0E01               M          MOVLW  1
000AD8 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L2R, BANKED
000ADA 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L2R, BANKED
000ADC 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000ADE 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L2R, BANKED
000AE0 D???               M         BRA     LLIM_END_17
                          M 
000AE2                    M LLIM_NOT_LOCKED_17:
000AE2 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_MASKED, BANKED
000AE4 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_PRESSED, BANKED
000AE6 D???               M         BRA     LLIM_OFF_17
000AE8 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000AEA D???               M         BRA     LLIM_OFF_17
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
000AEC 0104               M         BANKSEL SSR_DATA_BANK
000AEE 0E00               M          MOVLW  0
000AF0 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000AF2 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
000AF4 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
000AF6 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
000AF8 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         SET_SSR_STEADY CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 255
000AFA 0104               M         BANKSEL SSR_DATA_BANK
000AFC 0EFF               M          MOVLW  255
000AFE 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000B00 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
000B02 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
000B04 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
000B06 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
000B08 D???               M         BRA     LLIM_END_17
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000B0A                    M LLIM_OFF_17:
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
000B0A 0104               M         BANKSEL SSR_DATA_BANK
000B0C 0E00               M          MOVLW  0
000B0E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000B10 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
000B12 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
000B14 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
000B16 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
000B18 0104               M         BANKSEL SSR_DATA_BANK
000B1A 0E00               M          MOVLW  0
000B1C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
000B1E 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
000B20 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
000B22 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
000B24 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         
000B26                    M LLIM_END_17:
000B26 010C               M         BANKSEL QUIZSHOW_DATA
  00000012                M LLIM_N  ++
                          M         
000B28                    M SCN_DB_DONE_5:
  00000006                M SCN_DBN ++
                      00972           SCAN_DEBOUNCE BTN_IDX_X3, PORT_X3, BIT_X3, CHAN_X3G, CHAN_X3R
                          M         ; Sense button
000B28 B882               M         BTFSC   PORT_X3,  BIT_X3,  ACCESS
000B2A D???               M         BRA     SCN_DB_ACTIVE_6
                          M 
                          M         ; Button registers as being inactive now.  How long has this been the case?
000B2C B700               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_ACTIVE, BANKED
000B2E D???               M         BRA     SCN_DB_CHANGED_6
                          M 
                          M         ; Still inactive? keep counting...
000B30 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_X3, F, BANKED
000B32 D???               M         BRA     SCN_DB_END_6
                          M 
                          M         ; It's still inactive after 256 polls.  Time to count it as officially off now.
000B34 9700               M         BCF     BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; XXX Based on our current state, deal with the consequences of letting
                          M         ; XXX go of the button now.
                          M         ;
                          M         ; I think actually there aren't any here.
                          M         ;
000B36 D???               M         BRA     SCN_DB_END_6
                          M 
000B38                    M SCN_DB_ACTIVE_6:
                          M         ; Button registers as being active now.  How long has this been happening?
000B38 A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_ACTIVE, BANKED
000B3A D???               M         BRA     SCN_DB_CHANGED_6
                          M 
                          M         ; Still active? keep counting...
000B3C 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_X3, F, BANKED
000B3E D???               M         BRA     SCN_DB_END_6
                          M 
                          M         ; It's still active after 256 polls.  Time to count it as officially on now.
000B40 8700               M         BSF     BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; Based on our current state, deal with the consequences of hitting
                          M         ; the button now.
                          M         ;
                          M         ; If already pressed: ignore
                          M         ; ElseIf masked out: ignore
                          M         ; ElseIf locked out: reset lockout timer to start [handled above]
                          M         ; ElseIf scanning: copy timer into button stats, set pressed flag
                          M         ; Else: set lockout state, reset lockout timer
                          M         ;       
000B42 A100               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_PRESSED, BANKED
000B44 B300               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_MASKED, BANKED
000B46 D???               M         BRA     SCN_DB_END_6
                          M 
000B48 B000               M         BTFSC   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000B4A D???               M         BRA     SCN_DB_DING_6
                          M 
000B4C 8500               M         BSF     BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_LOCKED, BANKED
000B4E C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_X3 
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X3, CHAN_X3G, CHAN_X3R
000B52 010C               M         BANKSEL QUIZSHOW_DATA
000B54 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_LOCKED, BANKED
000B56 D???               M         BRA     LLIM_NOT_LOCKED_18
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
                          M         SET_SSR_OFF CHAN_X3G
                          M          SET_SSR_VALUE CHAN_X3G, 0
000B58 0104               M         BANKSEL SSR_DATA_BANK
000B5A 0E00               M          MOVLW  0
000B5C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3G, BANKED
000B5E 6B00               M          CLRF   SSR_00_STEP+CHAN_X3G, BANKED
000B60 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3G, BANKED
000B62 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3G, BANKED
000B64 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X3R
                          M          SET_SSR_PATTERN CHAN_X3R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000B66 0104               M         BANKSEL SSR_DATA_BANK
000B68 0E00               M          MOVLW  0
000B6A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
000B6C 0E04               M          MOVLW  4
000B6E 6F00               M          MOVWF  SSR_00_STEP+CHAN_X3R, BANKED
000B70 0E01               M          MOVLW  1
000B72 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X3R, BANKED
000B74 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X3R, BANKED
000B76 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000B78 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X3R, BANKED
000B7A D???               M         BRA     LLIM_END_18
                          M 
000B7C                    M LLIM_NOT_LOCKED_18:
000B7C A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_MASKED, BANKED
000B7E B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_PRESSED, BANKED
000B80 D???               M         BRA     LLIM_OFF_18
000B82 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000B84 D???               M         BRA     LLIM_OFF_18
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X3R
                          M          SET_SSR_VALUE CHAN_X3R, 0
000B86 0104               M         BANKSEL SSR_DATA_BANK
000B88 0E00               M          MOVLW  0
000B8A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
000B8C 6B00               M          CLRF   SSR_00_STEP+CHAN_X3R, BANKED
000B8E 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3R, BANKED
000B90 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3R, BANKED
000B92 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3R, BANKED
                          M         SET_SSR_STEADY CHAN_X3G
                          M          SET_SSR_VALUE CHAN_X3G, 255
000B94 0104               M         BANKSEL SSR_DATA_BANK
000B96 0EFF               M          MOVLW  255
000B98 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3G, BANKED
000B9A 6B00               M          CLRF   SSR_00_STEP+CHAN_X3G, BANKED
000B9C 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3G, BANKED
000B9E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3G, BANKED
000BA0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3G, BANKED
000BA2 D???               M         BRA     LLIM_END_18
                          M 
000BA4                    M LLIM_OFF_18:
                          M         SET_SSR_OFF CHAN_X3G
                          M          SET_SSR_VALUE CHAN_X3G, 0
000BA4 0104               M         BANKSEL SSR_DATA_BANK
000BA6 0E00               M          MOVLW  0
000BA8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3G, BANKED
000BAA 6B00               M          CLRF   SSR_00_STEP+CHAN_X3G, BANKED
000BAC 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3G, BANKED
000BAE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3G, BANKED
000BB0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3G, BANKED
                          M         SET_SSR_OFF CHAN_X3R
                          M          SET_SSR_VALUE CHAN_X3R, 0
000BB2 0104               M         BANKSEL SSR_DATA_BANK
000BB4 0E00               M          MOVLW  0
000BB6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
000BB8 6B00               M          CLRF   SSR_00_STEP+CHAN_X3R, BANKED
000BBA 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3R, BANKED
000BBC 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3R, BANKED
000BBE 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3R, BANKED
                          M         
000BC0                    M LLIM_END_18:
000BC0 010C               M         BANKSEL QUIZSHOW_DATA
  00000013                M LLIM_N  ++
000BC2 D???               M         BRA     SCN_DB_END_6
                          M 
000BC4                    M SCN_DB_DING_6:
000BC4 8100               M         BSF     BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_PRESSED, BANKED
                          M         ; copy timer values
000BC6 C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+BTN_IDX_X3
000BCA C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+BTN_IDX_X3
000BCE CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+BTN_IDX_X3
000BD2 CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+BTN_IDX_X3
                          M         ; update the lights
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X3, CHAN_X3G, CHAN_X3R
000BD6 010C               M         BANKSEL QUIZSHOW_DATA
000BD8 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_LOCKED, BANKED
000BDA D???               M         BRA     LLIM_NOT_LOCKED_19
                          M 
                          M         SET_SSR_OFF CHAN_X3G
                          M          SET_SSR_VALUE CHAN_X3G, 0
000BDC 0104               M         BANKSEL SSR_DATA_BANK
000BDE 0E00               M          MOVLW  0
000BE0 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3G, BANKED
000BE2 6B00               M          CLRF   SSR_00_STEP+CHAN_X3G, BANKED
000BE4 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3G, BANKED
000BE6 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3G, BANKED
000BE8 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X3R
                          M          SET_SSR_PATTERN CHAN_X3R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000BEA 0104               M         BANKSEL SSR_DATA_BANK
000BEC 0E00               M          MOVLW  0
000BEE 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
000BF0 0E04               M          MOVLW  4
000BF2 6F00               M          MOVWF  SSR_00_STEP+CHAN_X3R, BANKED
000BF4 0E01               M          MOVLW  1
000BF6 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X3R, BANKED
000BF8 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X3R, BANKED
000BFA 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000BFC 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X3R, BANKED
000BFE D???               M         BRA     LLIM_END_19
                          M 
000C00                    M LLIM_NOT_LOCKED_19:
000C00 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_MASKED, BANKED
000C02 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_PRESSED, BANKED
000C04 D???               M         BRA     LLIM_OFF_19
000C06 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000C08 D???               M         BRA     LLIM_OFF_19
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X3R
                          M          SET_SSR_VALUE CHAN_X3R, 0
000C0A 0104               M         BANKSEL SSR_DATA_BANK
000C0C 0E00               M          MOVLW  0
000C0E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
000C10 6B00               M          CLRF   SSR_00_STEP+CHAN_X3R, BANKED
000C12 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3R, BANKED
000C14 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3R, BANKED
000C16 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3R, BANKED
                          M         SET_SSR_STEADY CHAN_X3G
                          M          SET_SSR_VALUE CHAN_X3G, 255
000C18 0104               M         BANKSEL SSR_DATA_BANK
000C1A 0EFF               M          MOVLW  255
000C1C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3G, BANKED
000C1E 6B00               M          CLRF   SSR_00_STEP+CHAN_X3G, BANKED
000C20 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3G, BANKED
000C22 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3G, BANKED
000C24 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3G, BANKED
000C26 D???               M         BRA     LLIM_END_19
                          M 
000C28                    M LLIM_OFF_19:
                          M         SET_SSR_OFF CHAN_X3G
                          M          SET_SSR_VALUE CHAN_X3G, 0
000C28 0104               M         BANKSEL SSR_DATA_BANK
000C2A 0E00               M          MOVLW  0
000C2C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3G, BANKED
000C2E 6B00               M          CLRF   SSR_00_STEP+CHAN_X3G, BANKED
000C30 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3G, BANKED
000C32 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3G, BANKED
000C34 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3G, BANKED
                          M         SET_SSR_OFF CHAN_X3R
                          M          SET_SSR_VALUE CHAN_X3R, 0
000C36 0104               M         BANKSEL SSR_DATA_BANK
000C38 0E00               M          MOVLW  0
000C3A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
000C3C 6B00               M          CLRF   SSR_00_STEP+CHAN_X3R, BANKED
000C3E 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3R, BANKED
000C40 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3R, BANKED
000C42 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3R, BANKED
                          M         
000C44                    M LLIM_END_19:
000C44 010C               M         BANKSEL QUIZSHOW_DATA
  00000014                M LLIM_N  ++
000C46 D???               M         BRA     SCN_DB_END_6
                          M         
000C48                    M SCN_DB_CHANGED_6:
                          M         ; Button has changed since last time: reset debounce counter and wait.
000C48 6B00               M         CLRF    BTN_X0_DEB_TMR+BTN_IDX_X3, BANKED
                          M 
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C4A                    M SCN_DB_END_6:
000C4A A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
000C4C D???               M         BRA     SCN_DB_DONE_6
                          M         ;
                          M         ; Every 1/120 second do this:
                          M         ;
                          M         ; Check for locked-out buttons. We hold them in this state as long as
                          M         ; they are still being pressed.  Once they let go we start counting down time
                          M         ; before releasing.
                          M         ;
000C4E A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_LOCKED, BANKED
000C50 D???               M         BRA     SCN_DB_DONE_6
                          M 
000C52 A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_ACTIVE, BANKED
000C54 D???               M         BRA     SCN_DB_LCK_6
                          M 
000C56 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_X3 ; active+locked: reset and hold timer
000C5A D???               M         BRA     SCN_DB_DONE_6
                          M 
000C5C                    M SCN_DB_LCK_6:
000C5C 2F00               M         DECFSZ  BTN_X0_LOCKTMR+BTN_IDX_X3, F, BANKED    ; locked: count down to unlock time
000C5E D???               M         BRA     SCN_DB_DONE_6
                          M 
000C60 9500               M         BCF     BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_LOCKED, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X3, CHAN_X3G, CHAN_X3R
000C62 010C               M         BANKSEL QUIZSHOW_DATA
000C64 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_LOCKED, BANKED
000C66 D???               M         BRA     LLIM_NOT_LOCKED_20
                          M 
                          M         SET_SSR_OFF CHAN_X3G
                          M          SET_SSR_VALUE CHAN_X3G, 0
000C68 0104               M         BANKSEL SSR_DATA_BANK
000C6A 0E00               M          MOVLW  0
000C6C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3G, BANKED
000C6E 6B00               M          CLRF   SSR_00_STEP+CHAN_X3G, BANKED
000C70 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3G, BANKED
000C72 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3G, BANKED
000C74 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X3R
                          M          SET_SSR_PATTERN CHAN_X3R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000C76 0104               M         BANKSEL SSR_DATA_BANK
000C78 0E00               M          MOVLW  0
000C7A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
000C7C 0E04               M          MOVLW  4
000C7E 6F00               M          MOVWF  SSR_00_STEP+CHAN_X3R, BANKED
000C80 0E01               M          MOVLW  1
000C82 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X3R, BANKED
000C84 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X3R, BANKED
000C86 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000C88 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X3R, BANKED
000C8A D???               M         BRA     LLIM_END_20
                          M 
000C8C                    M LLIM_NOT_LOCKED_20:
000C8C A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_MASKED, BANKED
000C8E B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_PRESSED, BANKED
000C90 D???               M         BRA     LLIM_OFF_20
000C92 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000C94 D???               M         BRA     LLIM_OFF_20
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X3R
                          M          SET_SSR_VALUE CHAN_X3R, 0
000C96 0104               M         BANKSEL SSR_DATA_BANK
000C98 0E00               M          MOVLW  0
000C9A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
000C9C 6B00               M          CLRF   SSR_00_STEP+CHAN_X3R, BANKED
000C9E 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3R, BANKED
000CA0 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3R, BANKED
000CA2 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3R, BANKED
                          M         SET_SSR_STEADY CHAN_X3G
                          M          SET_SSR_VALUE CHAN_X3G, 255
000CA4 0104               M         BANKSEL SSR_DATA_BANK
000CA6 0EFF               M          MOVLW  255
000CA8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3G, BANKED
000CAA 6B00               M          CLRF   SSR_00_STEP+CHAN_X3G, BANKED
000CAC 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3G, BANKED
000CAE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3G, BANKED
000CB0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3G, BANKED
000CB2 D???               M         BRA     LLIM_END_20
                          M 
000CB4                    M LLIM_OFF_20:
                          M         SET_SSR_OFF CHAN_X3G
                          M          SET_SSR_VALUE CHAN_X3G, 0
000CB4 0104               M         BANKSEL SSR_DATA_BANK
000CB6 0E00               M          MOVLW  0
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000CB8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3G, BANKED
000CBA 6B00               M          CLRF   SSR_00_STEP+CHAN_X3G, BANKED
000CBC 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3G, BANKED
000CBE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3G, BANKED
000CC0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3G, BANKED
                          M         SET_SSR_OFF CHAN_X3R
                          M          SET_SSR_VALUE CHAN_X3R, 0
000CC2 0104               M         BANKSEL SSR_DATA_BANK
000CC4 0E00               M          MOVLW  0
000CC6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
000CC8 6B00               M          CLRF   SSR_00_STEP+CHAN_X3R, BANKED
000CCA 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3R, BANKED
000CCC 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3R, BANKED
000CCE 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3R, BANKED
                          M         
000CD0                    M LLIM_END_20:
000CD0 010C               M         BANKSEL QUIZSHOW_DATA
  00000015                M LLIM_N  ++
                          M         
000CD2                    M SCN_DB_DONE_6:
  00000007                M SCN_DBN ++
                      00973           SCAN_DEBOUNCE BTN_IDX_L3, PORT_L3, BIT_L3, CHAN_L3R, CHAN_L3R
                          M         ; Sense button
000CD2 B083               M         BTFSC   PORT_L3,  BIT_L3,  ACCESS
000CD4 D???               M         BRA     SCN_DB_ACTIVE_7
                          M 
                          M         ; Button registers as being inactive now.  How long has this been the case?
000CD6 B700               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_ACTIVE, BANKED
000CD8 D???               M         BRA     SCN_DB_CHANGED_7
                          M 
                          M         ; Still inactive? keep counting...
000CDA 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_L3, F, BANKED
000CDC D???               M         BRA     SCN_DB_END_7
                          M 
                          M         ; It's still inactive after 256 polls.  Time to count it as officially off now.
000CDE 9700               M         BCF     BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; XXX Based on our current state, deal with the consequences of letting
                          M         ; XXX go of the button now.
                          M         ;
                          M         ; I think actually there aren't any here.
                          M         ;
000CE0 D???               M         BRA     SCN_DB_END_7
                          M 
000CE2                    M SCN_DB_ACTIVE_7:
                          M         ; Button registers as being active now.  How long has this been happening?
000CE2 A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_ACTIVE, BANKED
000CE4 D???               M         BRA     SCN_DB_CHANGED_7
                          M 
                          M         ; Still active? keep counting...
000CE6 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_L3, F, BANKED
000CE8 D???               M         BRA     SCN_DB_END_7
                          M 
                          M         ; It's still active after 256 polls.  Time to count it as officially on now.
000CEA 8700               M         BSF     BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; Based on our current state, deal with the consequences of hitting
                          M         ; the button now.
                          M         ;
                          M         ; If already pressed: ignore
                          M         ; ElseIf masked out: ignore
                          M         ; ElseIf locked out: reset lockout timer to start [handled above]
                          M         ; ElseIf scanning: copy timer into button stats, set pressed flag
                          M         ; Else: set lockout state, reset lockout timer
                          M         ;       
000CEC A100               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_PRESSED, BANKED
000CEE B300               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_MASKED, BANKED
000CF0 D???               M         BRA     SCN_DB_END_7
                          M 
000CF2 B000               M         BTFSC   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000CF4 D???               M         BRA     SCN_DB_DING_7
                          M 
000CF6 8500               M         BSF     BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_LOCKED, BANKED
000CF8 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_L3 
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L3, CHAN_L3R, CHAN_L3R
000CFC 010C               M         BANKSEL QUIZSHOW_DATA
000CFE A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_LOCKED, BANKED
000D00 D???               M         BRA     LLIM_NOT_LOCKED_21
                          M 
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
000D02 0104               M         BANKSEL SSR_DATA_BANK
000D04 0E00               M          MOVLW  0
000D06 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D08 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000D0A 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000D0C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000D0E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L3R
                          M          SET_SSR_PATTERN CHAN_L3R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000D10 0104               M         BANKSEL SSR_DATA_BANK
000D12 0E00               M          MOVLW  0
000D14 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000D16 0E04               M          MOVLW  4
000D18 6F00               M          MOVWF  SSR_00_STEP+CHAN_L3R, BANKED
000D1A 0E01               M          MOVLW  1
000D1C 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L3R, BANKED
000D1E 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L3R, BANKED
000D20 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000D22 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L3R, BANKED
000D24 D???               M         BRA     LLIM_END_21
                          M 
000D26                    M LLIM_NOT_LOCKED_21:
000D26 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_MASKED, BANKED
000D28 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_PRESSED, BANKED
000D2A D???               M         BRA     LLIM_OFF_21
000D2C A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000D2E D???               M         BRA     LLIM_OFF_21
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
000D30 0104               M         BANKSEL SSR_DATA_BANK
000D32 0E00               M          MOVLW  0
000D34 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000D36 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000D38 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000D3A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000D3C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         SET_SSR_STEADY CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 255
000D3E 0104               M         BANKSEL SSR_DATA_BANK
000D40 0EFF               M          MOVLW  255
000D42 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000D44 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000D46 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000D48 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000D4A 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
000D4C D???               M         BRA     LLIM_END_21
                          M 
000D4E                    M LLIM_OFF_21:
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
000D4E 0104               M         BANKSEL SSR_DATA_BANK
000D50 0E00               M          MOVLW  0
000D52 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000D54 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000D56 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000D58 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000D5A 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
000D5C 0104               M         BANKSEL SSR_DATA_BANK
000D5E 0E00               M          MOVLW  0
000D60 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000D62 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000D64 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000D66 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000D68 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         
000D6A                    M LLIM_END_21:
000D6A 010C               M         BANKSEL QUIZSHOW_DATA
  00000016                M LLIM_N  ++
000D6C D???               M         BRA     SCN_DB_END_7
                          M 
000D6E                    M SCN_DB_DING_7:
000D6E 8100               M         BSF     BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_PRESSED, BANKED
                          M         ; copy timer values
000D70 C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+BTN_IDX_L3
000D74 C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+BTN_IDX_L3
000D78 CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+BTN_IDX_L3
000D7C CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+BTN_IDX_L3
                          M         ; update the lights
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L3, CHAN_L3R, CHAN_L3R
000D80 010C               M         BANKSEL QUIZSHOW_DATA
000D82 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_LOCKED, BANKED
000D84 D???               M         BRA     LLIM_NOT_LOCKED_22
                          M 
                          M         SET_SSR_OFF CHAN_L3R
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M          SET_SSR_VALUE CHAN_L3R, 0
000D86 0104               M         BANKSEL SSR_DATA_BANK
000D88 0E00               M          MOVLW  0
000D8A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000D8C 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000D8E 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000D90 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000D92 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L3R
                          M          SET_SSR_PATTERN CHAN_L3R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000D94 0104               M         BANKSEL SSR_DATA_BANK
000D96 0E00               M          MOVLW  0
000D98 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000D9A 0E04               M          MOVLW  4
000D9C 6F00               M          MOVWF  SSR_00_STEP+CHAN_L3R, BANKED
000D9E 0E01               M          MOVLW  1
000DA0 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L3R, BANKED
000DA2 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L3R, BANKED
000DA4 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000DA6 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L3R, BANKED
000DA8 D???               M         BRA     LLIM_END_22
                          M 
000DAA                    M LLIM_NOT_LOCKED_22:
000DAA A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_MASKED, BANKED
000DAC B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_PRESSED, BANKED
000DAE D???               M         BRA     LLIM_OFF_22
000DB0 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000DB2 D???               M         BRA     LLIM_OFF_22
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
000DB4 0104               M         BANKSEL SSR_DATA_BANK
000DB6 0E00               M          MOVLW  0
000DB8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000DBA 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000DBC 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000DBE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000DC0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         SET_SSR_STEADY CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 255
000DC2 0104               M         BANKSEL SSR_DATA_BANK
000DC4 0EFF               M          MOVLW  255
000DC6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000DC8 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000DCA 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000DCC 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000DCE 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
000DD0 D???               M         BRA     LLIM_END_22
                          M 
000DD2                    M LLIM_OFF_22:
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
000DD2 0104               M         BANKSEL SSR_DATA_BANK
000DD4 0E00               M          MOVLW  0
000DD6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000DD8 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000DDA 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000DDC 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000DDE 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
000DE0 0104               M         BANKSEL SSR_DATA_BANK
000DE2 0E00               M          MOVLW  0
000DE4 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000DE6 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000DE8 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000DEA 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000DEC 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         
000DEE                    M LLIM_END_22:
000DEE 010C               M         BANKSEL QUIZSHOW_DATA
  00000017                M LLIM_N  ++
000DF0 D???               M         BRA     SCN_DB_END_7
                          M         
000DF2                    M SCN_DB_CHANGED_7:
                          M         ; Button has changed since last time: reset debounce counter and wait.
000DF2 6B00               M         CLRF    BTN_X0_DEB_TMR+BTN_IDX_L3, BANKED
                          M 
000DF4                    M SCN_DB_END_7:
000DF4 A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
000DF6 D???               M         BRA     SCN_DB_DONE_7
                          M         ;
                          M         ; Every 1/120 second do this:
                          M         ;
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         ; Check for locked-out buttons. We hold them in this state as long as
                          M         ; they are still being pressed.  Once they let go we start counting down time
                          M         ; before releasing.
                          M         ;
000DF8 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_LOCKED, BANKED
000DFA D???               M         BRA     SCN_DB_DONE_7
                          M 
000DFC A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_ACTIVE, BANKED
000DFE D???               M         BRA     SCN_DB_LCK_7
                          M 
000E00 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_L3 ; active+locked: reset and hold timer
000E04 D???               M         BRA     SCN_DB_DONE_7
                          M 
000E06                    M SCN_DB_LCK_7:
000E06 2F00               M         DECFSZ  BTN_X0_LOCKTMR+BTN_IDX_L3, F, BANKED    ; locked: count down to unlock time
000E08 D???               M         BRA     SCN_DB_DONE_7
                          M 
000E0A 9500               M         BCF     BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_LOCKED, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L3, CHAN_L3R, CHAN_L3R
000E0C 010C               M         BANKSEL QUIZSHOW_DATA
000E0E A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_LOCKED, BANKED
000E10 D???               M         BRA     LLIM_NOT_LOCKED_23
                          M 
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
000E12 0104               M         BANKSEL SSR_DATA_BANK
000E14 0E00               M          MOVLW  0
000E16 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000E18 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000E1A 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000E1C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000E1E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L3R
                          M          SET_SSR_PATTERN CHAN_L3R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000E20 0104               M         BANKSEL SSR_DATA_BANK
000E22 0E00               M          MOVLW  0
000E24 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000E26 0E04               M          MOVLW  4
000E28 6F00               M          MOVWF  SSR_00_STEP+CHAN_L3R, BANKED
000E2A 0E01               M          MOVLW  1
000E2C 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L3R, BANKED
000E2E 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L3R, BANKED
000E30 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000E32 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L3R, BANKED
000E34 D???               M         BRA     LLIM_END_23
                          M 
000E36                    M LLIM_NOT_LOCKED_23:
000E36 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_MASKED, BANKED
000E38 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_PRESSED, BANKED
000E3A D???               M         BRA     LLIM_OFF_23
000E3C A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000E3E D???               M         BRA     LLIM_OFF_23
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
000E40 0104               M         BANKSEL SSR_DATA_BANK
000E42 0E00               M          MOVLW  0
000E44 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000E46 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000E48 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000E4A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000E4C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         SET_SSR_STEADY CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 255
000E4E 0104               M         BANKSEL SSR_DATA_BANK
000E50 0EFF               M          MOVLW  255
000E52 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000E54 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000E56 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000E58 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000E5A 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
000E5C D???               M         BRA     LLIM_END_23
                          M 
000E5E                    M LLIM_OFF_23:
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
000E5E 0104               M         BANKSEL SSR_DATA_BANK
000E60 0E00               M          MOVLW  0
000E62 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000E64 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000E66 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000E68 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000E6A 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         SET_SSR_OFF CHAN_L3R
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M          SET_SSR_VALUE CHAN_L3R, 0
000E6C 0104               M         BANKSEL SSR_DATA_BANK
000E6E 0E00               M          MOVLW  0
000E70 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
000E72 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
000E74 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
000E76 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
000E78 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         
000E7A                    M LLIM_END_23:
000E7A 010C               M         BANKSEL QUIZSHOW_DATA
  00000018                M LLIM_N  ++
                          M         
000E7C                    M SCN_DB_DONE_7:
  00000008                M SCN_DBN ++
                      00974           SCAN_DEBOUNCE BTN_IDX_X4, PORT_X4, BIT_X4, CHAN_X4G, CHAN_X4R
                          M         ; Sense button
000E7C B883               M         BTFSC   PORT_X4,  BIT_X4,  ACCESS
000E7E D???               M         BRA     SCN_DB_ACTIVE_8
                          M 
                          M         ; Button registers as being inactive now.  How long has this been the case?
000E80 B700               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_ACTIVE, BANKED
000E82 D???               M         BRA     SCN_DB_CHANGED_8
                          M 
                          M         ; Still inactive? keep counting...
000E84 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_X4, F, BANKED
000E86 D???               M         BRA     SCN_DB_END_8
                          M 
                          M         ; It's still inactive after 256 polls.  Time to count it as officially off now.
000E88 9700               M         BCF     BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; XXX Based on our current state, deal with the consequences of letting
                          M         ; XXX go of the button now.
                          M         ;
                          M         ; I think actually there aren't any here.
                          M         ;
000E8A D???               M         BRA     SCN_DB_END_8
                          M 
000E8C                    M SCN_DB_ACTIVE_8:
                          M         ; Button registers as being active now.  How long has this been happening?
000E8C A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_ACTIVE, BANKED
000E8E D???               M         BRA     SCN_DB_CHANGED_8
                          M 
                          M         ; Still active? keep counting...
000E90 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_X4, F, BANKED
000E92 D???               M         BRA     SCN_DB_END_8
                          M 
                          M         ; It's still active after 256 polls.  Time to count it as officially on now.
000E94 8700               M         BSF     BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; Based on our current state, deal with the consequences of hitting
                          M         ; the button now.
                          M         ;
                          M         ; If already pressed: ignore
                          M         ; ElseIf masked out: ignore
                          M         ; ElseIf locked out: reset lockout timer to start [handled above]
                          M         ; ElseIf scanning: copy timer into button stats, set pressed flag
                          M         ; Else: set lockout state, reset lockout timer
                          M         ;       
000E96 A100               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_PRESSED, BANKED
000E98 B300               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_MASKED, BANKED
000E9A D???               M         BRA     SCN_DB_END_8
                          M 
000E9C B000               M         BTFSC   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000E9E D???               M         BRA     SCN_DB_DING_8
                          M 
000EA0 8500               M         BSF     BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_LOCKED, BANKED
000EA2 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_X4 
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X4, CHAN_X4G, CHAN_X4R
000EA6 010C               M         BANKSEL QUIZSHOW_DATA
000EA8 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_LOCKED, BANKED
000EAA D???               M         BRA     LLIM_NOT_LOCKED_24
                          M 
                          M         SET_SSR_OFF CHAN_X4G
                          M          SET_SSR_VALUE CHAN_X4G, 0
000EAC 0104               M         BANKSEL SSR_DATA_BANK
000EAE 0E00               M          MOVLW  0
000EB0 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4G, BANKED
000EB2 6B00               M          CLRF   SSR_00_STEP+CHAN_X4G, BANKED
000EB4 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4G, BANKED
000EB6 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4G, BANKED
000EB8 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X4R
                          M          SET_SSR_PATTERN CHAN_X4R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000EBA 0104               M         BANKSEL SSR_DATA_BANK
000EBC 0E00               M          MOVLW  0
000EBE 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
000EC0 0E04               M          MOVLW  4
000EC2 6F00               M          MOVWF  SSR_00_STEP+CHAN_X4R, BANKED
000EC4 0E01               M          MOVLW  1
000EC6 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X4R, BANKED
000EC8 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X4R, BANKED
000ECA 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000ECC 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X4R, BANKED
000ECE D???               M         BRA     LLIM_END_24
                          M 
000ED0                    M LLIM_NOT_LOCKED_24:
000ED0 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_MASKED, BANKED
000ED2 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_PRESSED, BANKED
000ED4 D???               M         BRA     LLIM_OFF_24
000ED6 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000ED8 D???               M         BRA     LLIM_OFF_24
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X4R
                          M          SET_SSR_VALUE CHAN_X4R, 0
000EDA 0104               M         BANKSEL SSR_DATA_BANK
000EDC 0E00               M          MOVLW  0
000EDE 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
000EE0 6B00               M          CLRF   SSR_00_STEP+CHAN_X4R, BANKED
000EE2 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4R, BANKED
000EE4 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4R, BANKED
000EE6 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4R, BANKED
                          M         SET_SSR_STEADY CHAN_X4G
                          M          SET_SSR_VALUE CHAN_X4G, 255
000EE8 0104               M         BANKSEL SSR_DATA_BANK
000EEA 0EFF               M          MOVLW  255
000EEC 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4G, BANKED
000EEE 6B00               M          CLRF   SSR_00_STEP+CHAN_X4G, BANKED
000EF0 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4G, BANKED
000EF2 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4G, BANKED
000EF4 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4G, BANKED
000EF6 D???               M         BRA     LLIM_END_24
                          M 
000EF8                    M LLIM_OFF_24:
                          M         SET_SSR_OFF CHAN_X4G
                          M          SET_SSR_VALUE CHAN_X4G, 0
000EF8 0104               M         BANKSEL SSR_DATA_BANK
000EFA 0E00               M          MOVLW  0
000EFC 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4G, BANKED
000EFE 6B00               M          CLRF   SSR_00_STEP+CHAN_X4G, BANKED
000F00 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4G, BANKED
000F02 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4G, BANKED
000F04 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4G, BANKED
                          M         SET_SSR_OFF CHAN_X4R
                          M          SET_SSR_VALUE CHAN_X4R, 0
000F06 0104               M         BANKSEL SSR_DATA_BANK
000F08 0E00               M          MOVLW  0
000F0A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
000F0C 6B00               M          CLRF   SSR_00_STEP+CHAN_X4R, BANKED
000F0E 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4R, BANKED
000F10 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4R, BANKED
000F12 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4R, BANKED
                          M         
000F14                    M LLIM_END_24:
000F14 010C               M         BANKSEL QUIZSHOW_DATA
  00000019                M LLIM_N  ++
000F16 D???               M         BRA     SCN_DB_END_8
                          M 
000F18                    M SCN_DB_DING_8:
000F18 8100               M         BSF     BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_PRESSED, BANKED
                          M         ; copy timer values
000F1A C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+BTN_IDX_X4
000F1E C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+BTN_IDX_X4
000F22 CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+BTN_IDX_X4
000F26 CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+BTN_IDX_X4
                          M         ; update the lights
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X4, CHAN_X4G, CHAN_X4R
000F2A 010C               M         BANKSEL QUIZSHOW_DATA
000F2C A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_LOCKED, BANKED
000F2E D???               M         BRA     LLIM_NOT_LOCKED_25
                          M 
                          M         SET_SSR_OFF CHAN_X4G
                          M          SET_SSR_VALUE CHAN_X4G, 0
000F30 0104               M         BANKSEL SSR_DATA_BANK
000F32 0E00               M          MOVLW  0
000F34 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4G, BANKED
000F36 6B00               M          CLRF   SSR_00_STEP+CHAN_X4G, BANKED
000F38 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4G, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000F3A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4G, BANKED
000F3C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X4R
                          M          SET_SSR_PATTERN CHAN_X4R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000F3E 0104               M         BANKSEL SSR_DATA_BANK
000F40 0E00               M          MOVLW  0
000F42 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
000F44 0E04               M          MOVLW  4
000F46 6F00               M          MOVWF  SSR_00_STEP+CHAN_X4R, BANKED
000F48 0E01               M          MOVLW  1
000F4A 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X4R, BANKED
000F4C 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X4R, BANKED
000F4E 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000F50 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X4R, BANKED
000F52 D???               M         BRA     LLIM_END_25
                          M 
000F54                    M LLIM_NOT_LOCKED_25:
000F54 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_MASKED, BANKED
000F56 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_PRESSED, BANKED
000F58 D???               M         BRA     LLIM_OFF_25
000F5A A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000F5C D???               M         BRA     LLIM_OFF_25
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X4R
                          M          SET_SSR_VALUE CHAN_X4R, 0
000F5E 0104               M         BANKSEL SSR_DATA_BANK
000F60 0E00               M          MOVLW  0
000F62 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
000F64 6B00               M          CLRF   SSR_00_STEP+CHAN_X4R, BANKED
000F66 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4R, BANKED
000F68 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4R, BANKED
000F6A 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4R, BANKED
                          M         SET_SSR_STEADY CHAN_X4G
                          M          SET_SSR_VALUE CHAN_X4G, 255
000F6C 0104               M         BANKSEL SSR_DATA_BANK
000F6E 0EFF               M          MOVLW  255
000F70 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4G, BANKED
000F72 6B00               M          CLRF   SSR_00_STEP+CHAN_X4G, BANKED
000F74 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4G, BANKED
000F76 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4G, BANKED
000F78 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4G, BANKED
000F7A D???               M         BRA     LLIM_END_25
                          M 
000F7C                    M LLIM_OFF_25:
                          M         SET_SSR_OFF CHAN_X4G
                          M          SET_SSR_VALUE CHAN_X4G, 0
000F7C 0104               M         BANKSEL SSR_DATA_BANK
000F7E 0E00               M          MOVLW  0
000F80 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4G, BANKED
000F82 6B00               M          CLRF   SSR_00_STEP+CHAN_X4G, BANKED
000F84 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4G, BANKED
000F86 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4G, BANKED
000F88 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4G, BANKED
                          M         SET_SSR_OFF CHAN_X4R
                          M          SET_SSR_VALUE CHAN_X4R, 0
000F8A 0104               M         BANKSEL SSR_DATA_BANK
000F8C 0E00               M          MOVLW  0
000F8E 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
000F90 6B00               M          CLRF   SSR_00_STEP+CHAN_X4R, BANKED
000F92 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4R, BANKED
000F94 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4R, BANKED
000F96 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4R, BANKED
                          M         
000F98                    M LLIM_END_25:
000F98 010C               M         BANKSEL QUIZSHOW_DATA
  0000001A                M LLIM_N  ++
000F9A D???               M         BRA     SCN_DB_END_8
                          M         
000F9C                    M SCN_DB_CHANGED_8:
                          M         ; Button has changed since last time: reset debounce counter and wait.
000F9C 6B00               M         CLRF    BTN_X0_DEB_TMR+BTN_IDX_X4, BANKED
                          M 
000F9E                    M SCN_DB_END_8:
000F9E A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
000FA0 D???               M         BRA     SCN_DB_DONE_8
                          M         ;
                          M         ; Every 1/120 second do this:
                          M         ;
                          M         ; Check for locked-out buttons. We hold them in this state as long as
                          M         ; they are still being pressed.  Once they let go we start counting down time
                          M         ; before releasing.
                          M         ;
000FA2 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_LOCKED, BANKED
000FA4 D???               M         BRA     SCN_DB_DONE_8
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
000FA6 A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_ACTIVE, BANKED
000FA8 D???               M         BRA     SCN_DB_LCK_8
                          M 
000FAA C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_X4 ; active+locked: reset and hold timer
000FAE D???               M         BRA     SCN_DB_DONE_8
                          M 
000FB0                    M SCN_DB_LCK_8:
000FB0 2F00               M         DECFSZ  BTN_X0_LOCKTMR+BTN_IDX_X4, F, BANKED    ; locked: count down to unlock time
000FB2 D???               M         BRA     SCN_DB_DONE_8
                          M 
000FB4 9500               M         BCF     BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_LOCKED, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_X4, CHAN_X4G, CHAN_X4R
000FB6 010C               M         BANKSEL QUIZSHOW_DATA
000FB8 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_LOCKED, BANKED
000FBA D???               M         BRA     LLIM_NOT_LOCKED_26
                          M 
                          M         SET_SSR_OFF CHAN_X4G
                          M          SET_SSR_VALUE CHAN_X4G, 0
000FBC 0104               M         BANKSEL SSR_DATA_BANK
000FBE 0E00               M          MOVLW  0
000FC0 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4G, BANKED
000FC2 6B00               M          CLRF   SSR_00_STEP+CHAN_X4G, BANKED
000FC4 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4G, BANKED
000FC6 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4G, BANKED
000FC8 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X4R
                          M          SET_SSR_PATTERN CHAN_X4R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
000FCA 0104               M         BANKSEL SSR_DATA_BANK
000FCC 0E00               M          MOVLW  0
000FCE 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
000FD0 0E04               M          MOVLW  4
000FD2 6F00               M          MOVWF  SSR_00_STEP+CHAN_X4R, BANKED
000FD4 0E01               M          MOVLW  1
000FD6 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X4R, BANKED
000FD8 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X4R, BANKED
000FDA 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
000FDC 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X4R, BANKED
000FDE D???               M         BRA     LLIM_END_26
                          M 
000FE0                    M LLIM_NOT_LOCKED_26:
000FE0 A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_MASKED, BANKED
000FE2 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_PRESSED, BANKED
000FE4 D???               M         BRA     LLIM_OFF_26
000FE6 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
000FE8 D???               M         BRA     LLIM_OFF_26
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X4R
                          M          SET_SSR_VALUE CHAN_X4R, 0
000FEA 0104               M         BANKSEL SSR_DATA_BANK
000FEC 0E00               M          MOVLW  0
000FEE 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
000FF0 6B00               M          CLRF   SSR_00_STEP+CHAN_X4R, BANKED
000FF2 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4R, BANKED
000FF4 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4R, BANKED
000FF6 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4R, BANKED
                          M         SET_SSR_STEADY CHAN_X4G
                          M          SET_SSR_VALUE CHAN_X4G, 255
000FF8 0104               M         BANKSEL SSR_DATA_BANK
000FFA 0EFF               M          MOVLW  255
000FFC 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4G, BANKED
000FFE 6B00               M          CLRF   SSR_00_STEP+CHAN_X4G, BANKED
001000 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4G, BANKED
001002 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4G, BANKED
001004 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4G, BANKED
001006 D???               M         BRA     LLIM_END_26
                          M 
001008                    M LLIM_OFF_26:
                          M         SET_SSR_OFF CHAN_X4G
                          M          SET_SSR_VALUE CHAN_X4G, 0
001008 0104               M         BANKSEL SSR_DATA_BANK
00100A 0E00               M          MOVLW  0
00100C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4G, BANKED
00100E 6B00               M          CLRF   SSR_00_STEP+CHAN_X4G, BANKED
001010 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4G, BANKED
001012 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4G, BANKED
001014 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4G, BANKED
                          M         SET_SSR_OFF CHAN_X4R
                          M          SET_SSR_VALUE CHAN_X4R, 0
001016 0104               M         BANKSEL SSR_DATA_BANK
001018 0E00               M          MOVLW  0
00101A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
00101C 6B00               M          CLRF   SSR_00_STEP+CHAN_X4R, BANKED
00101E 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4R, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001020 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4R, BANKED
001022 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4R, BANKED
                          M         
001024                    M LLIM_END_26:
001024 010C               M         BANKSEL QUIZSHOW_DATA
  0000001B                M LLIM_N  ++
                          M         
001026                    M SCN_DB_DONE_8:
  00000009                M SCN_DBN ++
                      00975           SCAN_DEBOUNCE BTN_IDX_L4, PORT_L4, BIT_L4, CHAN_L4R, CHAN_L4R
                          M         ; Sense button
001026 BA82               M         BTFSC   PORT_L4,  BIT_L4,  ACCESS
001028 D???               M         BRA     SCN_DB_ACTIVE_9
                          M 
                          M         ; Button registers as being inactive now.  How long has this been the case?
00102A B700               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_ACTIVE, BANKED
00102C D???               M         BRA     SCN_DB_CHANGED_9
                          M 
                          M         ; Still inactive? keep counting...
00102E 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_L4, F, BANKED
001030 D???               M         BRA     SCN_DB_END_9
                          M 
                          M         ; It's still inactive after 256 polls.  Time to count it as officially off now.
001032 9700               M         BCF     BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; XXX Based on our current state, deal with the consequences of letting
                          M         ; XXX go of the button now.
                          M         ;
                          M         ; I think actually there aren't any here.
                          M         ;
001034 D???               M         BRA     SCN_DB_END_9
                          M 
001036                    M SCN_DB_ACTIVE_9:
                          M         ; Button registers as being active now.  How long has this been happening?
001036 A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_ACTIVE, BANKED
001038 D???               M         BRA     SCN_DB_CHANGED_9
                          M 
                          M         ; Still active? keep counting...
00103A 3F00               M         INCFSZ  BTN_X0_DEB_TMR+BTN_IDX_L4, F, BANKED
00103C D???               M         BRA     SCN_DB_END_9
                          M 
                          M         ; It's still active after 256 polls.  Time to count it as officially on now.
00103E 8700               M         BSF     BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_ACTIVE, BANKED
                          M         ;
                          M         ; Based on our current state, deal with the consequences of hitting
                          M         ; the button now.
                          M         ;
                          M         ; If already pressed: ignore
                          M         ; ElseIf masked out: ignore
                          M         ; ElseIf locked out: reset lockout timer to start [handled above]
                          M         ; ElseIf scanning: copy timer into button stats, set pressed flag
                          M         ; Else: set lockout state, reset lockout timer
                          M         ;       
001040 A100               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_PRESSED, BANKED
001042 B300               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_MASKED, BANKED
001044 D???               M         BRA     SCN_DB_END_9
                          M 
001046 B000               M         BTFSC   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
001048 D???               M         BRA     SCN_DB_DING_9
                          M 
00104A 8500               M         BSF     BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_LOCKED, BANKED
00104C C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_L4 
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L4, CHAN_L4R, CHAN_L4R
001050 010C               M         BANKSEL QUIZSHOW_DATA
001052 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_LOCKED, BANKED
001054 D???               M         BRA     LLIM_NOT_LOCKED_27
                          M 
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
001056 0104               M         BANKSEL SSR_DATA_BANK
001058 0E00               M          MOVLW  0
00105A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
00105C 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
00105E 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
001060 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
001062 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L4R
                          M          SET_SSR_PATTERN CHAN_L4R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
001064 0104               M         BANKSEL SSR_DATA_BANK
001066 0E00               M          MOVLW  0
001068 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
00106A 0E04               M          MOVLW  4
00106C 6F00               M          MOVWF  SSR_00_STEP+CHAN_L4R, BANKED
00106E 0E01               M          MOVLW  1
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001070 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L4R, BANKED
001072 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L4R, BANKED
001074 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
001076 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L4R, BANKED
001078 D???               M         BRA     LLIM_END_27
                          M 
00107A                    M LLIM_NOT_LOCKED_27:
00107A A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_MASKED, BANKED
00107C B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_PRESSED, BANKED
00107E D???               M         BRA     LLIM_OFF_27
001080 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
001082 D???               M         BRA     LLIM_OFF_27
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
001084 0104               M         BANKSEL SSR_DATA_BANK
001086 0E00               M          MOVLW  0
001088 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
00108A 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
00108C 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
00108E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
001090 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         SET_SSR_STEADY CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 255
001092 0104               M         BANKSEL SSR_DATA_BANK
001094 0EFF               M          MOVLW  255
001096 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
001098 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
00109A 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
00109C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
00109E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
0010A0 D???               M         BRA     LLIM_END_27
                          M 
0010A2                    M LLIM_OFF_27:
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
0010A2 0104               M         BANKSEL SSR_DATA_BANK
0010A4 0E00               M          MOVLW  0
0010A6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
0010A8 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
0010AA 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
0010AC 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
0010AE 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
0010B0 0104               M         BANKSEL SSR_DATA_BANK
0010B2 0E00               M          MOVLW  0
0010B4 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
0010B6 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
0010B8 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
0010BA 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
0010BC 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         
0010BE                    M LLIM_END_27:
0010BE 010C               M         BANKSEL QUIZSHOW_DATA
  0000001C                M LLIM_N  ++
0010C0 D???               M         BRA     SCN_DB_END_9
                          M 
0010C2                    M SCN_DB_DING_9:
0010C2 8100               M         BSF     BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_PRESSED, BANKED
                          M         ; copy timer values
0010C4 C??? F???          M         MOVFF   QS_BTN_TMR_U, BTN_X0_TIME_U+BTN_IDX_L4
0010C8 C??? F???          M         MOVFF   QS_BTN_TMR_T, BTN_X0_TIME_T+BTN_IDX_L4
0010CC CFCE F???          M         MOVFF   TMR1L, BTN_X0_TIME_L+BTN_IDX_L4
0010D0 CFCF F???          M         MOVFF   TMR1H, BTN_X0_TIME_H+BTN_IDX_L4
                          M         ; update the lights
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L4, CHAN_L4R, CHAN_L4R
0010D4 010C               M         BANKSEL QUIZSHOW_DATA
0010D6 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_LOCKED, BANKED
0010D8 D???               M         BRA     LLIM_NOT_LOCKED_28
                          M 
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
0010DA 0104               M         BANKSEL SSR_DATA_BANK
0010DC 0E00               M          MOVLW  0
0010DE 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
0010E0 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
0010E2 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
0010E4 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
0010E6 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L4R
                          M          SET_SSR_PATTERN CHAN_L4R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0010E8 0104               M         BANKSEL SSR_DATA_BANK
0010EA 0E00               M          MOVLW  0
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0010EC 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
0010EE 0E04               M          MOVLW  4
0010F0 6F00               M          MOVWF  SSR_00_STEP+CHAN_L4R, BANKED
0010F2 0E01               M          MOVLW  1
0010F4 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L4R, BANKED
0010F6 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L4R, BANKED
0010F8 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0010FA 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L4R, BANKED
0010FC D???               M         BRA     LLIM_END_28
                          M 
0010FE                    M LLIM_NOT_LOCKED_28:
0010FE A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_MASKED, BANKED
001100 B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_PRESSED, BANKED
001102 D???               M         BRA     LLIM_OFF_28
001104 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
001106 D???               M         BRA     LLIM_OFF_28
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
001108 0104               M         BANKSEL SSR_DATA_BANK
00110A 0E00               M          MOVLW  0
00110C 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
00110E 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
001110 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
001112 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
001114 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         SET_SSR_STEADY CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 255
001116 0104               M         BANKSEL SSR_DATA_BANK
001118 0EFF               M          MOVLW  255
00111A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
00111C 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
00111E 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
001120 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
001122 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
001124 D???               M         BRA     LLIM_END_28
                          M 
001126                    M LLIM_OFF_28:
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
001126 0104               M         BANKSEL SSR_DATA_BANK
001128 0E00               M          MOVLW  0
00112A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
00112C 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
00112E 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
001130 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
001132 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
001134 0104               M         BANKSEL SSR_DATA_BANK
001136 0E00               M          MOVLW  0
001138 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
00113A 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
00113C 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
00113E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
001140 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         
001142                    M LLIM_END_28:
001142 010C               M         BANKSEL QUIZSHOW_DATA
  0000001D                M LLIM_N  ++
001144 D???               M         BRA     SCN_DB_END_9
                          M         
001146                    M SCN_DB_CHANGED_9:
                          M         ; Button has changed since last time: reset debounce counter and wait.
001146 6B00               M         CLRF    BTN_X0_DEB_TMR+BTN_IDX_L4, BANKED
                          M 
001148                    M SCN_DB_END_9:
001148 A400               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
00114A D???               M         BRA     SCN_DB_DONE_9
                          M         ;
                          M         ; Every 1/120 second do this:
                          M         ;
                          M         ; Check for locked-out buttons. We hold them in this state as long as
                          M         ; they are still being pressed.  Once they let go we start counting down time
                          M         ; before releasing.
                          M         ;
00114C A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_LOCKED, BANKED
00114E D???               M         BRA     SCN_DB_DONE_9
                          M 
001150 A700               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_ACTIVE, BANKED
001152 D???               M         BRA     SCN_DB_LCK_9
                          M 
001154 C??? F???          M         MOVFF   QUIZSHOW_LCKTM, BTN_X0_LOCKTMR+BTN_IDX_L4 ; active+locked: reset and hold timer
001158 D???               M         BRA     SCN_DB_DONE_9
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
00115A                    M SCN_DB_LCK_9:
00115A 2F00               M         DECFSZ  BTN_X0_LOCKTMR+BTN_IDX_L4, F, BANKED    ; locked: count down to unlock time
00115C D???               M         BRA     SCN_DB_DONE_9
                          M 
00115E 9500               M         BCF     BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_LOCKED, BANKED
                          M         LOCAL_LIGHT_INDICATOR BTN_IDX_L4, CHAN_L4R, CHAN_L4R
001160 010C               M         BANKSEL QUIZSHOW_DATA
001162 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_LOCKED, BANKED
001164 D???               M         BRA     LLIM_NOT_LOCKED_29
                          M 
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
001166 0104               M         BANKSEL SSR_DATA_BANK
001168 0E00               M          MOVLW  0
00116A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
00116C 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
00116E 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
001170 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
001172 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L4R
                          M          SET_SSR_PATTERN CHAN_L4R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
001174 0104               M         BANKSEL SSR_DATA_BANK
001176 0E00               M          MOVLW  0
001178 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
00117A 0E04               M          MOVLW  4
00117C 6F00               M          MOVWF  SSR_00_STEP+CHAN_L4R, BANKED
00117E 0E01               M          MOVLW  1
001180 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L4R, BANKED
001182 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L4R, BANKED
001184 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
001186 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L4R, BANKED
001188 D???               M         BRA     LLIM_END_29
                          M 
00118A                    M LLIM_NOT_LOCKED_29:
00118A A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_MASKED, BANKED
00118C B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_PRESSED, BANKED
00118E D???               M         BRA     LLIM_OFF_29
001190 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
001192 D???               M         BRA     LLIM_OFF_29
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
001194 0104               M         BANKSEL SSR_DATA_BANK
001196 0E00               M          MOVLW  0
001198 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
00119A 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
00119C 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
00119E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
0011A0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         SET_SSR_STEADY CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 255
0011A2 0104               M         BANKSEL SSR_DATA_BANK
0011A4 0EFF               M          MOVLW  255
0011A6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
0011A8 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
0011AA 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
0011AC 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
0011AE 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
0011B0 D???               M         BRA     LLIM_END_29
                          M 
0011B2                    M LLIM_OFF_29:
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
0011B2 0104               M         BANKSEL SSR_DATA_BANK
0011B4 0E00               M          MOVLW  0
0011B6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
0011B8 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
0011BA 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
0011BC 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
0011BE 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
0011C0 0104               M         BANKSEL SSR_DATA_BANK
0011C2 0E00               M          MOVLW  0
0011C4 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
0011C6 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
0011C8 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
0011CA 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
0011CC 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         
0011CE                    M LLIM_END_29:
0011CE 010C               M         BANKSEL QUIZSHOW_DATA
  0000001E                M LLIM_N  ++
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         
0011D0                    M SCN_DB_DONE_9:
  0000000A                M SCN_DBN ++
                      00976          ELSE
                      00977           ERROR "Improper LUMOS_CHIP_TYPE setting!"
                      00978          ENDIF
                      00979         ENDIF
0011D0 9400           00980         BCF     QUIZSHOW_FLAGS, QS_FLAG_DOING120, ACCESS
0011D2 0012           00981         RETURN
                      00982 
                      00983 
                      00984 ; if standalone mode:
                      00985 ;       if L4 pressed:
                      00986 ;               reset all buttons and lights, stop scanner
                      00987 ;       if X4 pressed:
                      00988 ;               start scanning
                      00989 ;       if anything else pressed:
                      00990 ;               light up X4 to indicate player who was in first
                      00991 ;               set flag to ignore further results (or, I suppose, keep re-comparing them :)
                      00992 ;       
                      00993 
                      00994 
                      00995 
                      00996 
                      00997 ;
                      00998 ; Start scanning for button presses
                      00999 ;
                      01000 ; Resets all button timers and debounce circuits, starts scanning
                      01001 ; This is stopped via the QS_QUERY command.
                      01002 ; This is a global command, only recognized when sent to address 15.
                      01003 ;
0011D4                01004 QSCC_CMD5_START:
0011D4 0004           01005         CLRWDT
                      01006         CLEAR_BUTTONS 0
  00000000                M CB_IDX  SET     0
                          M         WHILE   CB_IDX < N_BUTTONS
0011D6 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
0011D8 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
0011DA 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
0011DC 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
0011DE 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000001                M CB_IDX   ++
0011E0 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
0011E2 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
0011E4 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
0011E6 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
0011E8 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000002                M CB_IDX   ++
0011EA 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
0011EC 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
0011EE 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
0011F0 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
0011F2 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000003                M CB_IDX   ++
0011F4 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
0011F6 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
0011F8 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
0011FA 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
0011FC 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000004                M CB_IDX   ++
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0011FE 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
001200 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
001202 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
001204 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
001206 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000005                M CB_IDX   ++
001208 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
00120A 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
00120C 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
00120E 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
001210 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000006                M CB_IDX   ++
001212 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
001214 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
001216 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
001218 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
00121A 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000007                M CB_IDX   ++
00121C 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
00121E 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
001220 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
001222 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
001224 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000008                M CB_IDX   ++
001226 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
001228 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
00122A 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
00122C 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
00122E 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000009                M CB_IDX   ++
001230 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
001232 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
001234 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
001236 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
001238 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  0000000A                M CB_IDX   ++
00123A 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
00123C 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
00123E 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
001240 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
001242 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  0000000B                M CB_IDX   ++
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001244 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
001246 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
001248 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
00124A 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
00124C 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  0000000C                M CB_IDX   ++
00124E 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
001250 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
001252 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
001254 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
001256 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  0000000D                M CB_IDX   ++
001258 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
00125A 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
00125C 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
00125E 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
001260 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  0000000E                M CB_IDX   ++
001262 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
001264 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
001266 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
001268 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
00126A 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  0000000F                M CB_IDX   ++
00126C 6B00               M          CLRF   BTN_X0_TIME_T+CB_IDX, BANKED
00126E 6B00               M          CLRF   BTN_X0_TIME_U+CB_IDX, BANKED
001270 6B00               M          CLRF   BTN_X0_TIME_H+CB_IDX, BANKED
001272 6B00               M          CLRF   BTN_X0_TIME_L+CB_IDX, BANKED
                          M          IF 0
                          M           CLRF  BTN_X0_FLAGS+CB_IDX, BANKED
                          M           CLRF  BTN_X0_LOCKTMR+CB_IDX, BANKED
                          M           CLRF  BTN_X0_DEB_TMR+CB_IDX, BANKED
                          M          ELSE
001274 9100               M           BCF   BTN_X0_FLAGS+CB_IDX, BTN_FLG_PRESSED, BANKED
                          M          ENDIF
  00000010                M CB_IDX   ++
                          M         ENDW
001276 8000           01007         BSF     QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
                      01008         ; start timer
001278 6A00           01009         CLRF    QS_BTN_TMR_T, ACCESS
00127A 6A00           01010         CLRF    QS_BTN_TMR_U, ACCESS
00127C 6ACF           01011         CLRF    TMR1H, ACCESS
00127E 6ACE           01012         CLRF    TMR1L, ACCESS
001280 909E           01013         BCF     PIR1, TMR1IF, ACCESS
001282 809F           01014         BSF     IPR1, TMR1IP, ACCESS
001284 809D           01015         BSF     PIE1, TMR1IE, ACCESS
001286 80CD           01016         BSF     T1CON, TMR1ON, ACCESS
                      01017         ; light up non-masked buttons
001288 D???           01018         RCALL   SET_ALL_BUTTON_LIGHTS
00128A 0012           01019         RETURN
                      01020 
00128C                01021 SET_ALL_BUTTON_LIGHTS:
00128C 0004           01022         CLRWDT
00128E 010C           01023         BANKSEL QUIZSHOW_DATA
                      01024         IF LUMOS_CHIP_TYPE == LUMOS_CHIP_QSCC
                      01025          LOCAL_LIGHT_INDICATOR BTN_IDX_X0, CHAN_X0G, CHAN_X0R
                      01026          LOCAL_LIGHT_INDICATOR BTN_IDX_L0, CHAN_L0G, CHAN_L0R
                      01027          LOCAL_LIGHT_INDICATOR BTN_IDX_A0, CHAN_A0L, CHAN_A0L
                      01028          LOCAL_LIGHT_INDICATOR BTN_IDX_B0, CHAN_B0L, CHAN_B0L
                      01029          LOCAL_LIGHT_INDICATOR BTN_IDX_C0, CHAN_C0L, CHAN_C0L
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01030          LOCAL_LIGHT_INDICATOR BTN_IDX_D0, CHAN_D0L, CHAN_D0L
                      01031         ELSE
                      01032          IF LUMOS_CHIP_TYPE == LUMOS_CHIP_QSRC
                      01033           LOCAL_LIGHT_INDICATOR BTN_IDX_X0, CHAN_X0G, CHAN_X0R
001290 010C               M         BANKSEL QUIZSHOW_DATA
001292 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_LOCKED, BANKED
001294 D???               M         BRA     LLIM_NOT_LOCKED_30
                          M 
                          M         SET_SSR_OFF CHAN_X0G
                          M          SET_SSR_VALUE CHAN_X0G, 0
001296 0104               M         BANKSEL SSR_DATA_BANK
001298 0E00               M          MOVLW  0
00129A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0G, BANKED
00129C 6B00               M          CLRF   SSR_00_STEP+CHAN_X0G, BANKED
00129E 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0G, BANKED
0012A0 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0G, BANKED
0012A2 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X0R
                          M          SET_SSR_PATTERN CHAN_X0R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0012A4 0104               M         BANKSEL SSR_DATA_BANK
0012A6 0E00               M          MOVLW  0
0012A8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
0012AA 0E04               M          MOVLW  4
0012AC 6F00               M          MOVWF  SSR_00_STEP+CHAN_X0R, BANKED
0012AE 0E01               M          MOVLW  1
0012B0 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X0R, BANKED
0012B2 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X0R, BANKED
0012B4 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0012B6 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X0R, BANKED
0012B8 D???               M         BRA     LLIM_END_30
                          M 
0012BA                    M LLIM_NOT_LOCKED_30:
0012BA A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_MASKED, BANKED
0012BC B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X0, BTN_FLG_PRESSED, BANKED
0012BE D???               M         BRA     LLIM_OFF_30
0012C0 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0012C2 D???               M         BRA     LLIM_OFF_30
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X0R
                          M          SET_SSR_VALUE CHAN_X0R, 0
0012C4 0104               M         BANKSEL SSR_DATA_BANK
0012C6 0E00               M          MOVLW  0
0012C8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
0012CA 6B00               M          CLRF   SSR_00_STEP+CHAN_X0R, BANKED
0012CC 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0R, BANKED
0012CE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0R, BANKED
0012D0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0R, BANKED
                          M         SET_SSR_STEADY CHAN_X0G
                          M          SET_SSR_VALUE CHAN_X0G, 255
0012D2 0104               M         BANKSEL SSR_DATA_BANK
0012D4 0EFF               M          MOVLW  255
0012D6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0G, BANKED
0012D8 6B00               M          CLRF   SSR_00_STEP+CHAN_X0G, BANKED
0012DA 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0G, BANKED
0012DC 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0G, BANKED
0012DE 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0G, BANKED
0012E0 D???               M         BRA     LLIM_END_30
                          M 
0012E2                    M LLIM_OFF_30:
                          M         SET_SSR_OFF CHAN_X0G
                          M          SET_SSR_VALUE CHAN_X0G, 0
0012E2 0104               M         BANKSEL SSR_DATA_BANK
0012E4 0E00               M          MOVLW  0
0012E6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0G, BANKED
0012E8 6B00               M          CLRF   SSR_00_STEP+CHAN_X0G, BANKED
0012EA 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0G, BANKED
0012EC 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0G, BANKED
0012EE 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0G, BANKED
                          M         SET_SSR_OFF CHAN_X0R
                          M          SET_SSR_VALUE CHAN_X0R, 0
0012F0 0104               M         BANKSEL SSR_DATA_BANK
0012F2 0E00               M          MOVLW  0
0012F4 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X0R, BANKED
0012F6 6B00               M          CLRF   SSR_00_STEP+CHAN_X0R, BANKED
0012F8 6B00               M          CLRF   SSR_00_SPEED+CHAN_X0R, BANKED
0012FA 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X0R, BANKED
0012FC 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X0R, BANKED
                          M         
0012FE                    M LLIM_END_30:
0012FE 010C               M         BANKSEL QUIZSHOW_DATA
  0000001F                M LLIM_N  ++
                      01034           LOCAL_LIGHT_INDICATOR BTN_IDX_L0, CHAN_L0R, CHAN_L0R
001300 010C               M         BANKSEL QUIZSHOW_DATA
001302 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_LOCKED, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001304 D???               M         BRA     LLIM_NOT_LOCKED_31
                          M 
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
001306 0104               M         BANKSEL SSR_DATA_BANK
001308 0E00               M          MOVLW  0
00130A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
00130C 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
00130E 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
001310 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
001312 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L0R
                          M          SET_SSR_PATTERN CHAN_L0R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
001314 0104               M         BANKSEL SSR_DATA_BANK
001316 0E00               M          MOVLW  0
001318 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
00131A 0E04               M          MOVLW  4
00131C 6F00               M          MOVWF  SSR_00_STEP+CHAN_L0R, BANKED
00131E 0E01               M          MOVLW  1
001320 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L0R, BANKED
001322 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L0R, BANKED
001324 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
001326 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L0R, BANKED
001328 D???               M         BRA     LLIM_END_31
                          M 
00132A                    M LLIM_NOT_LOCKED_31:
00132A A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_MASKED, BANKED
00132C B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L0, BTN_FLG_PRESSED, BANKED
00132E D???               M         BRA     LLIM_OFF_31
001330 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
001332 D???               M         BRA     LLIM_OFF_31
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
001334 0104               M         BANKSEL SSR_DATA_BANK
001336 0E00               M          MOVLW  0
001338 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
00133A 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
00133C 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
00133E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
001340 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         SET_SSR_STEADY CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 255
001342 0104               M         BANKSEL SSR_DATA_BANK
001344 0EFF               M          MOVLW  255
001346 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
001348 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
00134A 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
00134C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
00134E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
001350 D???               M         BRA     LLIM_END_31
                          M 
001352                    M LLIM_OFF_31:
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
001352 0104               M         BANKSEL SSR_DATA_BANK
001354 0E00               M          MOVLW  0
001356 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
001358 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
00135A 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
00135C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
00135E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         SET_SSR_OFF CHAN_L0R
                          M          SET_SSR_VALUE CHAN_L0R, 0
001360 0104               M         BANKSEL SSR_DATA_BANK
001362 0E00               M          MOVLW  0
001364 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L0R, BANKED
001366 6B00               M          CLRF   SSR_00_STEP+CHAN_L0R, BANKED
001368 6B00               M          CLRF   SSR_00_SPEED+CHAN_L0R, BANKED
00136A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L0R, BANKED
00136C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L0R, BANKED
                          M         
00136E                    M LLIM_END_31:
00136E 010C               M         BANKSEL QUIZSHOW_DATA
  00000020                M LLIM_N  ++
                      01035           LOCAL_LIGHT_INDICATOR BTN_IDX_X1, CHAN_X1G, CHAN_X1R
001370 010C               M         BANKSEL QUIZSHOW_DATA
001372 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_LOCKED, BANKED
001374 D???               M         BRA     LLIM_NOT_LOCKED_32
                          M 
                          M         SET_SSR_OFF CHAN_X1G
                          M          SET_SSR_VALUE CHAN_X1G, 0
001376 0104               M         BANKSEL SSR_DATA_BANK
001378 0E00               M          MOVLW  0
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00137A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1G, BANKED
00137C 6B00               M          CLRF   SSR_00_STEP+CHAN_X1G, BANKED
00137E 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1G, BANKED
001380 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1G, BANKED
001382 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X1R
                          M          SET_SSR_PATTERN CHAN_X1R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
001384 0104               M         BANKSEL SSR_DATA_BANK
001386 0E00               M          MOVLW  0
001388 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
00138A 0E04               M          MOVLW  4
00138C 6F00               M          MOVWF  SSR_00_STEP+CHAN_X1R, BANKED
00138E 0E01               M          MOVLW  1
001390 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X1R, BANKED
001392 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X1R, BANKED
001394 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
001396 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X1R, BANKED
001398 D???               M         BRA     LLIM_END_32
                          M 
00139A                    M LLIM_NOT_LOCKED_32:
00139A A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_MASKED, BANKED
00139C B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X1, BTN_FLG_PRESSED, BANKED
00139E D???               M         BRA     LLIM_OFF_32
0013A0 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0013A2 D???               M         BRA     LLIM_OFF_32
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X1R
                          M          SET_SSR_VALUE CHAN_X1R, 0
0013A4 0104               M         BANKSEL SSR_DATA_BANK
0013A6 0E00               M          MOVLW  0
0013A8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
0013AA 6B00               M          CLRF   SSR_00_STEP+CHAN_X1R, BANKED
0013AC 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1R, BANKED
0013AE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1R, BANKED
0013B0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1R, BANKED
                          M         SET_SSR_STEADY CHAN_X1G
                          M          SET_SSR_VALUE CHAN_X1G, 255
0013B2 0104               M         BANKSEL SSR_DATA_BANK
0013B4 0EFF               M          MOVLW  255
0013B6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1G, BANKED
0013B8 6B00               M          CLRF   SSR_00_STEP+CHAN_X1G, BANKED
0013BA 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1G, BANKED
0013BC 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1G, BANKED
0013BE 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1G, BANKED
0013C0 D???               M         BRA     LLIM_END_32
                          M 
0013C2                    M LLIM_OFF_32:
                          M         SET_SSR_OFF CHAN_X1G
                          M          SET_SSR_VALUE CHAN_X1G, 0
0013C2 0104               M         BANKSEL SSR_DATA_BANK
0013C4 0E00               M          MOVLW  0
0013C6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1G, BANKED
0013C8 6B00               M          CLRF   SSR_00_STEP+CHAN_X1G, BANKED
0013CA 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1G, BANKED
0013CC 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1G, BANKED
0013CE 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1G, BANKED
                          M         SET_SSR_OFF CHAN_X1R
                          M          SET_SSR_VALUE CHAN_X1R, 0
0013D0 0104               M         BANKSEL SSR_DATA_BANK
0013D2 0E00               M          MOVLW  0
0013D4 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X1R, BANKED
0013D6 6B00               M          CLRF   SSR_00_STEP+CHAN_X1R, BANKED
0013D8 6B00               M          CLRF   SSR_00_SPEED+CHAN_X1R, BANKED
0013DA 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X1R, BANKED
0013DC 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X1R, BANKED
                          M         
0013DE                    M LLIM_END_32:
0013DE 010C               M         BANKSEL QUIZSHOW_DATA
  00000021                M LLIM_N  ++
                      01036           LOCAL_LIGHT_INDICATOR BTN_IDX_L1, CHAN_L1R, CHAN_L1R
0013E0 010C               M         BANKSEL QUIZSHOW_DATA
0013E2 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_LOCKED, BANKED
0013E4 D???               M         BRA     LLIM_NOT_LOCKED_33
                          M 
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
0013E6 0104               M         BANKSEL SSR_DATA_BANK
0013E8 0E00               M          MOVLW  0
0013EA 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
0013EC 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
0013EE 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
0013F0 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
0013F2 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L1R
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M          SET_SSR_PATTERN CHAN_L1R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0013F4 0104               M         BANKSEL SSR_DATA_BANK
0013F6 0E00               M          MOVLW  0
0013F8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
0013FA 0E04               M          MOVLW  4
0013FC 6F00               M          MOVWF  SSR_00_STEP+CHAN_L1R, BANKED
0013FE 0E01               M          MOVLW  1
001400 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L1R, BANKED
001402 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L1R, BANKED
001404 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
001406 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L1R, BANKED
001408 D???               M         BRA     LLIM_END_33
                          M 
00140A                    M LLIM_NOT_LOCKED_33:
00140A A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_MASKED, BANKED
00140C B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L1, BTN_FLG_PRESSED, BANKED
00140E D???               M         BRA     LLIM_OFF_33
001410 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
001412 D???               M         BRA     LLIM_OFF_33
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
001414 0104               M         BANKSEL SSR_DATA_BANK
001416 0E00               M          MOVLW  0
001418 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
00141A 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
00141C 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
00141E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
001420 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         SET_SSR_STEADY CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 255
001422 0104               M         BANKSEL SSR_DATA_BANK
001424 0EFF               M          MOVLW  255
001426 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
001428 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
00142A 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
00142C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
00142E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
001430 D???               M         BRA     LLIM_END_33
                          M 
001432                    M LLIM_OFF_33:
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
001432 0104               M         BANKSEL SSR_DATA_BANK
001434 0E00               M          MOVLW  0
001436 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
001438 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
00143A 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
00143C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
00143E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         SET_SSR_OFF CHAN_L1R
                          M          SET_SSR_VALUE CHAN_L1R, 0
001440 0104               M         BANKSEL SSR_DATA_BANK
001442 0E00               M          MOVLW  0
001444 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L1R, BANKED
001446 6B00               M          CLRF   SSR_00_STEP+CHAN_L1R, BANKED
001448 6B00               M          CLRF   SSR_00_SPEED+CHAN_L1R, BANKED
00144A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L1R, BANKED
00144C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L1R, BANKED
                          M         
00144E                    M LLIM_END_33:
00144E 010C               M         BANKSEL QUIZSHOW_DATA
  00000022                M LLIM_N  ++
                      01037           LOCAL_LIGHT_INDICATOR BTN_IDX_X2, CHAN_X2G, CHAN_X2R
001450 010C               M         BANKSEL QUIZSHOW_DATA
001452 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_LOCKED, BANKED
001454 D???               M         BRA     LLIM_NOT_LOCKED_34
                          M 
                          M         SET_SSR_OFF CHAN_X2G
                          M          SET_SSR_VALUE CHAN_X2G, 0
001456 0104               M         BANKSEL SSR_DATA_BANK
001458 0E00               M          MOVLW  0
00145A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2G, BANKED
00145C 6B00               M          CLRF   SSR_00_STEP+CHAN_X2G, BANKED
00145E 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2G, BANKED
001460 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2G, BANKED
001462 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X2R
                          M          SET_SSR_PATTERN CHAN_X2R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
001464 0104               M         BANKSEL SSR_DATA_BANK
001466 0E00               M          MOVLW  0
001468 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
00146A 0E04               M          MOVLW  4
00146C 6F00               M          MOVWF  SSR_00_STEP+CHAN_X2R, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00146E 0E01               M          MOVLW  1
001470 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X2R, BANKED
001472 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X2R, BANKED
001474 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
001476 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X2R, BANKED
001478 D???               M         BRA     LLIM_END_34
                          M 
00147A                    M LLIM_NOT_LOCKED_34:
00147A A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_MASKED, BANKED
00147C B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X2, BTN_FLG_PRESSED, BANKED
00147E D???               M         BRA     LLIM_OFF_34
001480 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
001482 D???               M         BRA     LLIM_OFF_34
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X2R
                          M          SET_SSR_VALUE CHAN_X2R, 0
001484 0104               M         BANKSEL SSR_DATA_BANK
001486 0E00               M          MOVLW  0
001488 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
00148A 6B00               M          CLRF   SSR_00_STEP+CHAN_X2R, BANKED
00148C 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2R, BANKED
00148E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2R, BANKED
001490 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2R, BANKED
                          M         SET_SSR_STEADY CHAN_X2G
                          M          SET_SSR_VALUE CHAN_X2G, 255
001492 0104               M         BANKSEL SSR_DATA_BANK
001494 0EFF               M          MOVLW  255
001496 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2G, BANKED
001498 6B00               M          CLRF   SSR_00_STEP+CHAN_X2G, BANKED
00149A 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2G, BANKED
00149C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2G, BANKED
00149E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2G, BANKED
0014A0 D???               M         BRA     LLIM_END_34
                          M 
0014A2                    M LLIM_OFF_34:
                          M         SET_SSR_OFF CHAN_X2G
                          M          SET_SSR_VALUE CHAN_X2G, 0
0014A2 0104               M         BANKSEL SSR_DATA_BANK
0014A4 0E00               M          MOVLW  0
0014A6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2G, BANKED
0014A8 6B00               M          CLRF   SSR_00_STEP+CHAN_X2G, BANKED
0014AA 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2G, BANKED
0014AC 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2G, BANKED
0014AE 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2G, BANKED
                          M         SET_SSR_OFF CHAN_X2R
                          M          SET_SSR_VALUE CHAN_X2R, 0
0014B0 0104               M         BANKSEL SSR_DATA_BANK
0014B2 0E00               M          MOVLW  0
0014B4 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X2R, BANKED
0014B6 6B00               M          CLRF   SSR_00_STEP+CHAN_X2R, BANKED
0014B8 6B00               M          CLRF   SSR_00_SPEED+CHAN_X2R, BANKED
0014BA 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X2R, BANKED
0014BC 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X2R, BANKED
                          M         
0014BE                    M LLIM_END_34:
0014BE 010C               M         BANKSEL QUIZSHOW_DATA
  00000023                M LLIM_N  ++
                      01038           LOCAL_LIGHT_INDICATOR BTN_IDX_L2, CHAN_L2R, CHAN_L2R
0014C0 010C               M         BANKSEL QUIZSHOW_DATA
0014C2 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_LOCKED, BANKED
0014C4 D???               M         BRA     LLIM_NOT_LOCKED_35
                          M 
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
0014C6 0104               M         BANKSEL SSR_DATA_BANK
0014C8 0E00               M          MOVLW  0
0014CA 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
0014CC 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
0014CE 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
0014D0 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
0014D2 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L2R
                          M          SET_SSR_PATTERN CHAN_L2R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0014D4 0104               M         BANKSEL SSR_DATA_BANK
0014D6 0E00               M          MOVLW  0
0014D8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
0014DA 0E04               M          MOVLW  4
0014DC 6F00               M          MOVWF  SSR_00_STEP+CHAN_L2R, BANKED
0014DE 0E01               M          MOVLW  1
0014E0 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L2R, BANKED
0014E2 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L2R, BANKED
0014E4 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0014E6 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L2R, BANKED
0014E8 D???               M         BRA     LLIM_END_35
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M 
0014EA                    M LLIM_NOT_LOCKED_35:
0014EA A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_MASKED, BANKED
0014EC B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L2, BTN_FLG_PRESSED, BANKED
0014EE D???               M         BRA     LLIM_OFF_35
0014F0 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0014F2 D???               M         BRA     LLIM_OFF_35
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
0014F4 0104               M         BANKSEL SSR_DATA_BANK
0014F6 0E00               M          MOVLW  0
0014F8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
0014FA 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
0014FC 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
0014FE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
001500 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         SET_SSR_STEADY CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 255
001502 0104               M         BANKSEL SSR_DATA_BANK
001504 0EFF               M          MOVLW  255
001506 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
001508 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
00150A 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
00150C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
00150E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
001510 D???               M         BRA     LLIM_END_35
                          M 
001512                    M LLIM_OFF_35:
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
001512 0104               M         BANKSEL SSR_DATA_BANK
001514 0E00               M          MOVLW  0
001516 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
001518 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
00151A 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
00151C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
00151E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         SET_SSR_OFF CHAN_L2R
                          M          SET_SSR_VALUE CHAN_L2R, 0
001520 0104               M         BANKSEL SSR_DATA_BANK
001522 0E00               M          MOVLW  0
001524 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L2R, BANKED
001526 6B00               M          CLRF   SSR_00_STEP+CHAN_L2R, BANKED
001528 6B00               M          CLRF   SSR_00_SPEED+CHAN_L2R, BANKED
00152A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L2R, BANKED
00152C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L2R, BANKED
                          M         
00152E                    M LLIM_END_35:
00152E 010C               M         BANKSEL QUIZSHOW_DATA
  00000024                M LLIM_N  ++
                      01039           LOCAL_LIGHT_INDICATOR BTN_IDX_X3, CHAN_X3G, CHAN_X3R
001530 010C               M         BANKSEL QUIZSHOW_DATA
001532 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_LOCKED, BANKED
001534 D???               M         BRA     LLIM_NOT_LOCKED_36
                          M 
                          M         SET_SSR_OFF CHAN_X3G
                          M          SET_SSR_VALUE CHAN_X3G, 0
001536 0104               M         BANKSEL SSR_DATA_BANK
001538 0E00               M          MOVLW  0
00153A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3G, BANKED
00153C 6B00               M          CLRF   SSR_00_STEP+CHAN_X3G, BANKED
00153E 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3G, BANKED
001540 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3G, BANKED
001542 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X3R
                          M          SET_SSR_PATTERN CHAN_X3R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
001544 0104               M         BANKSEL SSR_DATA_BANK
001546 0E00               M          MOVLW  0
001548 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
00154A 0E04               M          MOVLW  4
00154C 6F00               M          MOVWF  SSR_00_STEP+CHAN_X3R, BANKED
00154E 0E01               M          MOVLW  1
001550 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X3R, BANKED
001552 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X3R, BANKED
001554 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
001556 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X3R, BANKED
001558 D???               M         BRA     LLIM_END_36
                          M 
00155A                    M LLIM_NOT_LOCKED_36:
00155A A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_MASKED, BANKED
00155C B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X3, BTN_FLG_PRESSED, BANKED
00155E D???               M         BRA     LLIM_OFF_36
001560 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001562 D???               M         BRA     LLIM_OFF_36
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X3R
                          M          SET_SSR_VALUE CHAN_X3R, 0
001564 0104               M         BANKSEL SSR_DATA_BANK
001566 0E00               M          MOVLW  0
001568 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
00156A 6B00               M          CLRF   SSR_00_STEP+CHAN_X3R, BANKED
00156C 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3R, BANKED
00156E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3R, BANKED
001570 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3R, BANKED
                          M         SET_SSR_STEADY CHAN_X3G
                          M          SET_SSR_VALUE CHAN_X3G, 255
001572 0104               M         BANKSEL SSR_DATA_BANK
001574 0EFF               M          MOVLW  255
001576 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3G, BANKED
001578 6B00               M          CLRF   SSR_00_STEP+CHAN_X3G, BANKED
00157A 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3G, BANKED
00157C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3G, BANKED
00157E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3G, BANKED
001580 D???               M         BRA     LLIM_END_36
                          M 
001582                    M LLIM_OFF_36:
                          M         SET_SSR_OFF CHAN_X3G
                          M          SET_SSR_VALUE CHAN_X3G, 0
001582 0104               M         BANKSEL SSR_DATA_BANK
001584 0E00               M          MOVLW  0
001586 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3G, BANKED
001588 6B00               M          CLRF   SSR_00_STEP+CHAN_X3G, BANKED
00158A 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3G, BANKED
00158C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3G, BANKED
00158E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3G, BANKED
                          M         SET_SSR_OFF CHAN_X3R
                          M          SET_SSR_VALUE CHAN_X3R, 0
001590 0104               M         BANKSEL SSR_DATA_BANK
001592 0E00               M          MOVLW  0
001594 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X3R, BANKED
001596 6B00               M          CLRF   SSR_00_STEP+CHAN_X3R, BANKED
001598 6B00               M          CLRF   SSR_00_SPEED+CHAN_X3R, BANKED
00159A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X3R, BANKED
00159C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X3R, BANKED
                          M         
00159E                    M LLIM_END_36:
00159E 010C               M         BANKSEL QUIZSHOW_DATA
  00000025                M LLIM_N  ++
                      01040           LOCAL_LIGHT_INDICATOR BTN_IDX_L3, CHAN_L3R, CHAN_L3R
0015A0 010C               M         BANKSEL QUIZSHOW_DATA
0015A2 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_LOCKED, BANKED
0015A4 D???               M         BRA     LLIM_NOT_LOCKED_37
                          M 
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
0015A6 0104               M         BANKSEL SSR_DATA_BANK
0015A8 0E00               M          MOVLW  0
0015AA 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
0015AC 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
0015AE 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
0015B0 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
0015B2 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L3R
                          M          SET_SSR_PATTERN CHAN_L3R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
0015B4 0104               M         BANKSEL SSR_DATA_BANK
0015B6 0E00               M          MOVLW  0
0015B8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
0015BA 0E04               M          MOVLW  4
0015BC 6F00               M          MOVWF  SSR_00_STEP+CHAN_L3R, BANKED
0015BE 0E01               M          MOVLW  1
0015C0 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L3R, BANKED
0015C2 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L3R, BANKED
0015C4 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0015C6 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L3R, BANKED
0015C8 D???               M         BRA     LLIM_END_37
                          M 
0015CA                    M LLIM_NOT_LOCKED_37:
0015CA A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_MASKED, BANKED
0015CC B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L3, BTN_FLG_PRESSED, BANKED
0015CE D???               M         BRA     LLIM_OFF_37
0015D0 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0015D2 D???               M         BRA     LLIM_OFF_37
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
0015D4 0104               M         BANKSEL SSR_DATA_BANK
0015D6 0E00               M          MOVLW  0
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0015D8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
0015DA 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
0015DC 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
0015DE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
0015E0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         SET_SSR_STEADY CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 255
0015E2 0104               M         BANKSEL SSR_DATA_BANK
0015E4 0EFF               M          MOVLW  255
0015E6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
0015E8 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
0015EA 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
0015EC 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
0015EE 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
0015F0 D???               M         BRA     LLIM_END_37
                          M 
0015F2                    M LLIM_OFF_37:
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
0015F2 0104               M         BANKSEL SSR_DATA_BANK
0015F4 0E00               M          MOVLW  0
0015F6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
0015F8 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
0015FA 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
0015FC 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
0015FE 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         SET_SSR_OFF CHAN_L3R
                          M          SET_SSR_VALUE CHAN_L3R, 0
001600 0104               M         BANKSEL SSR_DATA_BANK
001602 0E00               M          MOVLW  0
001604 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L3R, BANKED
001606 6B00               M          CLRF   SSR_00_STEP+CHAN_L3R, BANKED
001608 6B00               M          CLRF   SSR_00_SPEED+CHAN_L3R, BANKED
00160A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L3R, BANKED
00160C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L3R, BANKED
                          M         
00160E                    M LLIM_END_37:
00160E 010C               M         BANKSEL QUIZSHOW_DATA
  00000026                M LLIM_N  ++
                      01041           LOCAL_LIGHT_INDICATOR BTN_IDX_X4, CHAN_X4G, CHAN_X4R
001610 010C               M         BANKSEL QUIZSHOW_DATA
001612 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_LOCKED, BANKED
001614 D???               M         BRA     LLIM_NOT_LOCKED_38
                          M 
                          M         SET_SSR_OFF CHAN_X4G
                          M          SET_SSR_VALUE CHAN_X4G, 0
001616 0104               M         BANKSEL SSR_DATA_BANK
001618 0E00               M          MOVLW  0
00161A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4G, BANKED
00161C 6B00               M          CLRF   SSR_00_STEP+CHAN_X4G, BANKED
00161E 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4G, BANKED
001620 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4G, BANKED
001622 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4G, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_X4R
                          M          SET_SSR_PATTERN CHAN_X4R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
001624 0104               M         BANKSEL SSR_DATA_BANK
001626 0E00               M          MOVLW  0
001628 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
00162A 0E04               M          MOVLW  4
00162C 6F00               M          MOVWF  SSR_00_STEP+CHAN_X4R, BANKED
00162E 0E01               M          MOVLW  1
001630 6F00               M          MOVWF  SSR_00_SPEED+CHAN_X4R, BANKED
001632 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_X4R, BANKED
001634 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
001636 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_X4R, BANKED
001638 D???               M         BRA     LLIM_END_38
                          M 
00163A                    M LLIM_NOT_LOCKED_38:
00163A A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_MASKED, BANKED
00163C B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_X4, BTN_FLG_PRESSED, BANKED
00163E D???               M         BRA     LLIM_OFF_38
001640 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
001642 D???               M         BRA     LLIM_OFF_38
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_X4R
                          M          SET_SSR_VALUE CHAN_X4R, 0
001644 0104               M         BANKSEL SSR_DATA_BANK
001646 0E00               M          MOVLW  0
001648 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
00164A 6B00               M          CLRF   SSR_00_STEP+CHAN_X4R, BANKED
00164C 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4R, BANKED
00164E 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4R, BANKED
001650 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4R, BANKED
                          M         SET_SSR_STEADY CHAN_X4G
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M          SET_SSR_VALUE CHAN_X4G, 255
001652 0104               M         BANKSEL SSR_DATA_BANK
001654 0EFF               M          MOVLW  255
001656 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4G, BANKED
001658 6B00               M          CLRF   SSR_00_STEP+CHAN_X4G, BANKED
00165A 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4G, BANKED
00165C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4G, BANKED
00165E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4G, BANKED
001660 D???               M         BRA     LLIM_END_38
                          M 
001662                    M LLIM_OFF_38:
                          M         SET_SSR_OFF CHAN_X4G
                          M          SET_SSR_VALUE CHAN_X4G, 0
001662 0104               M         BANKSEL SSR_DATA_BANK
001664 0E00               M          MOVLW  0
001666 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4G, BANKED
001668 6B00               M          CLRF   SSR_00_STEP+CHAN_X4G, BANKED
00166A 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4G, BANKED
00166C 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4G, BANKED
00166E 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4G, BANKED
                          M         SET_SSR_OFF CHAN_X4R
                          M          SET_SSR_VALUE CHAN_X4R, 0
001670 0104               M         BANKSEL SSR_DATA_BANK
001672 0E00               M          MOVLW  0
001674 6F00               M          MOVWF  SSR_00_VALUE+CHAN_X4R, BANKED
001676 6B00               M          CLRF   SSR_00_STEP+CHAN_X4R, BANKED
001678 6B00               M          CLRF   SSR_00_SPEED+CHAN_X4R, BANKED
00167A 6B00               M          CLRF   SSR_00_COUNTER+CHAN_X4R, BANKED
00167C 6B00               M          CLRF   SSR_00_FLAGS+CHAN_X4R, BANKED
                          M         
00167E                    M LLIM_END_38:
00167E 010C               M         BANKSEL QUIZSHOW_DATA
  00000027                M LLIM_N  ++
                      01042           LOCAL_LIGHT_INDICATOR BTN_IDX_L4, CHAN_L4R, CHAN_L4R
001680 010C               M         BANKSEL QUIZSHOW_DATA
001682 A500               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_LOCKED, BANKED
001684 D???               M         BRA     LLIM_NOT_LOCKED_39
                          M 
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
001686 0104               M         BANKSEL SSR_DATA_BANK
001688 0E00               M          MOVLW  0
00168A 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
00168C 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
00168E 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
001690 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
001692 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         SET_SSR_RAPID_FADE CHAN_L4R
                          M          SET_SSR_PATTERN CHAN_L4R, 0, 4, 1, BIT_FADE_UP|BIT_FADE_CYCLE
001694 0104               M         BANKSEL SSR_DATA_BANK
001696 0E00               M          MOVLW  0
001698 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
00169A 0E04               M          MOVLW  4
00169C 6F00               M          MOVWF  SSR_00_STEP+CHAN_L4R, BANKED
00169E 0E01               M          MOVLW  1
0016A0 6F00               M          MOVWF  SSR_00_SPEED+CHAN_L4R, BANKED
0016A2 6F00               M          MOVWF  SSR_00_COUNTER+CHAN_L4R, BANKED
0016A4 0EA0               M          MOVLW  BIT_FADE_UP|BIT_FADE_CYCLE
0016A6 6F00               M          MOVWF  SSR_00_FLAGS+CHAN_L4R, BANKED
0016A8 D???               M         BRA     LLIM_END_39
                          M 
0016AA                    M LLIM_NOT_LOCKED_39:
0016AA A300               M         BTFSS   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_MASKED, BANKED
0016AC B100               M         BTFSC   BTN_X0_FLAGS+BTN_IDX_L4, BTN_FLG_PRESSED, BANKED
0016AE D???               M         BRA     LLIM_OFF_39
0016B0 A000               M         BTFSS   QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
0016B2 D???               M         BRA     LLIM_OFF_39
                          M         ; We're scanning and not masked or pressed - light up button
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
0016B4 0104               M         BANKSEL SSR_DATA_BANK
0016B6 0E00               M          MOVLW  0
0016B8 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
0016BA 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
0016BC 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
0016BE 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
0016C0 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         SET_SSR_STEADY CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 255
0016C2 0104               M         BANKSEL SSR_DATA_BANK
0016C4 0EFF               M          MOVLW  255
0016C6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
0016C8 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
0016CA 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0016CC 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
0016CE 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
0016D0 D???               M         BRA     LLIM_END_39
                          M 
0016D2                    M LLIM_OFF_39:
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
0016D2 0104               M         BANKSEL SSR_DATA_BANK
0016D4 0E00               M          MOVLW  0
0016D6 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
0016D8 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
0016DA 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
0016DC 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
0016DE 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         SET_SSR_OFF CHAN_L4R
                          M          SET_SSR_VALUE CHAN_L4R, 0
0016E0 0104               M         BANKSEL SSR_DATA_BANK
0016E2 0E00               M          MOVLW  0
0016E4 6F00               M          MOVWF  SSR_00_VALUE+CHAN_L4R, BANKED
0016E6 6B00               M          CLRF   SSR_00_STEP+CHAN_L4R, BANKED
0016E8 6B00               M          CLRF   SSR_00_SPEED+CHAN_L4R, BANKED
0016EA 6B00               M          CLRF   SSR_00_COUNTER+CHAN_L4R, BANKED
0016EC 6B00               M          CLRF   SSR_00_FLAGS+CHAN_L4R, BANKED
                          M         
0016EE                    M LLIM_END_39:
0016EE 010C               M         BANKSEL QUIZSHOW_DATA
  00000028                M LLIM_N  ++
                      01043          ELSE
                      01044           ERROR "Incorrect chip type setting!"
                      01045          ENDIF
                      01046         ENDIF
0016F0 0012           01047         RETURN
                      01048 
0016F2                01049 QS_STOP_SCANNER:
0016F2 0004           01050         CLRWDT
0016F4 9000           01051         BCF     QUIZSHOW_FLAGS, QS_FLAG_SCANNING, ACCESS
                      01052         ; stop timer
0016F6 90CD           01053         BCF     T1CON, TMR1ON, ACCESS
0016F8 909D           01054         BCF     PIE1, TMR1IE, ACCESS
0016FA 909E           01055         BCF     PIR1, TMR1IF, ACCESS
                      01056         ; extinguish non-masked buttons
0016FC D???           01057         RCALL SET_ALL_BUTTON_LIGHTS
0016FE 0012           01058         RETURN
                      01059 
                      01060         END
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 75


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ABAT                              00000004
ABDEN                             00000000
ABDOVF                            00000007
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACQT0                             00000003
ACQT1                             00000004
ACQT2                             00000005
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCON2                            00000FC0
ADCS0                             00000000
ADCS1                             00000001
ADCS2                             00000002
ADDEN                             00000003
ADEN                              00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADON                              00000000
ADRES                             00000FC3
ADRESH                            00000FC4
ADRESL                            00000FC3
ALL_OFF                           00000004
AN0                               00000000
AN1                               00000001
AN10                              00000000
AN2                               00000002
AN3                               00000003
AN4                               00000005
AN5                               00000000
AN6                               00000001
AN7                               00000002
AN8                               00000001
AN9                               00000004
B0CON                             00000E20
B0D0                              00000E26
B0D00                             00000000
B0D01                             00000001
B0D02                             00000002
B0D03                             00000003
B0D04                             00000004
B0D05                             00000005
B0D06                             00000006
B0D07                             00000007
B0D1                              00000E27
B0D10                             00000000
B0D11                             00000001
B0D12                             00000002
B0D13                             00000003
B0D14                             00000004
B0D15                             00000005
B0D16                             00000006
B0D17                             00000007
B0D2                              00000E28
B0D20                             00000000
B0D21                             00000001
B0D22                             00000002
B0D23                             00000003
B0D24                             00000004
B0D25                             00000005
B0D26                             00000006
B0D27                             00000007
B0D3                              00000E29
B0D30                             00000000
B0D31                             00000001
B0D32                             00000002
B0D33                             00000003
B0D34                             00000004
B0D35                             00000005
B0D36                             00000006
B0D37                             00000007
B0D4                              00000E2A
B0D40                             00000000
B0D41                             00000001
B0D42                             00000002
B0D43                             00000003
B0D44                             00000004
B0D45                             00000005
B0D46                             00000006
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 76


SYMBOL TABLE
  LABEL                             VALUE 

B0D47                             00000007
B0D5                              00000E2B
B0D50                             00000000
B0D51                             00000001
B0D52                             00000002
B0D53                             00000003
B0D54                             00000004
B0D55                             00000005
B0D56                             00000006
B0D57                             00000007
B0D6                              00000E2C
B0D60                             00000000
B0D61                             00000001
B0D62                             00000002
B0D63                             00000003
B0D64                             00000004
B0D65                             00000005
B0D66                             00000006
B0D67                             00000007
B0D7                              00000E2D
B0D70                             00000000
B0D71                             00000001
B0D72                             00000002
B0D73                             00000003
B0D74                             00000004
B0D75                             00000005
B0D76                             00000006
B0D77                             00000007
B0DLC                             00000E25
B0EIDH                            00000E23
B0EIDL                            00000E24
B0IE                              00000002
B0SIDH                            00000E21
B0SIDL                            00000E22
B0TXEN                            00000002
B1CON                             00000E30
B1D0                              00000E36
B1D00                             00000000
B1D01                             00000001
B1D02                             00000002
B1D03                             00000003
B1D04                             00000004
B1D05                             00000005
B1D06                             00000006
B1D07                             00000007
B1D1                              00000E37
B1D10                             00000000
B1D11                             00000001
B1D12                             00000002
B1D13                             00000003
B1D14                             00000004
B1D15                             00000005
B1D16                             00000006
B1D17                             00000007
B1D2                              00000E38
B1D20                             00000000
B1D21                             00000001
B1D22                             00000002
B1D23                             00000003
B1D24                             00000004
B1D25                             00000005
B1D26                             00000006
B1D27                             00000007
B1D3                              00000E39
B1D30                             00000000
B1D31                             00000001
B1D32                             00000002
B1D33                             00000003
B1D34                             00000004
B1D35                             00000005
B1D36                             00000006
B1D37                             00000007
B1D4                              00000E3A
B1D40                             00000000
B1D41                             00000001
B1D42                             00000002
B1D43                             00000003
B1D44                             00000004
B1D45                             00000005
B1D46                             00000006
B1D47                             00000007
B1D5                              00000E3B
B1D50                             00000000
B1D51                             00000001
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 77


SYMBOL TABLE
  LABEL                             VALUE 

B1D52                             00000002
B1D53                             00000003
B1D54                             00000004
B1D55                             00000005
B1D56                             00000006
B1D57                             00000007
B1D6                              00000E3C
B1D60                             00000000
B1D61                             00000001
B1D62                             00000002
B1D63                             00000003
B1D64                             00000004
B1D65                             00000005
B1D66                             00000006
B1D67                             00000007
B1D7                              00000E3D
B1D70                             00000000
B1D71                             00000001
B1D72                             00000002
B1D73                             00000003
B1D74                             00000004
B1D75                             00000005
B1D76                             00000006
B1D77                             00000007
B1DLC                             00000E35
B1EIDH                            00000E33
B1EIDL                            00000E34
B1IE                              00000003
B1SIDH                            00000E31
B1SIDL                            00000E32
B1TXEN                            00000003
B2CON                             00000E40
B2D0                              00000E46
B2D00                             00000000
B2D01                             00000001
B2D02                             00000002
B2D03                             00000003
B2D04                             00000004
B2D05                             00000005
B2D06                             00000006
B2D07                             00000007
B2D1                              00000E47
B2D10                             00000000
B2D11                             00000001
B2D12                             00000002
B2D13                             00000003
B2D14                             00000004
B2D15                             00000005
B2D16                             00000006
B2D17                             00000007
B2D2                              00000E48
B2D20                             00000000
B2D21                             00000001
B2D22                             00000002
B2D23                             00000003
B2D24                             00000004
B2D25                             00000005
B2D26                             00000006
B2D27                             00000007
B2D3                              00000E49
B2D30                             00000000
B2D31                             00000001
B2D32                             00000002
B2D33                             00000003
B2D34                             00000004
B2D35                             00000005
B2D36                             00000006
B2D37                             00000007
B2D4                              00000E4A
B2D40                             00000000
B2D41                             00000001
B2D42                             00000002
B2D43                             00000003
B2D44                             00000004
B2D45                             00000005
B2D46                             00000006
B2D47                             00000007
B2D5                              00000E4B
B2D50                             00000000
B2D51                             00000001
B2D52                             00000002
B2D53                             00000003
B2D54                             00000004
B2D55                             00000005
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 78


SYMBOL TABLE
  LABEL                             VALUE 

B2D56                             00000006
B2D57                             00000007
B2D6                              00000E4C
B2D60                             00000000
B2D61                             00000001
B2D62                             00000002
B2D63                             00000003
B2D64                             00000004
B2D65                             00000005
B2D66                             00000006
B2D67                             00000007
B2D7                              00000E4D
B2D70                             00000000
B2D71                             00000001
B2D72                             00000002
B2D73                             00000003
B2D74                             00000004
B2D75                             00000005
B2D76                             00000006
B2D77                             00000007
B2DLC                             00000E45
B2EIDH                            00000E43
B2EIDL                            00000E44
B2IE                              00000004
B2SIDH                            00000E41
B2SIDL                            00000E42
B2TXEN                            00000004
B3CON                             00000E50
B3D0                              00000E56
B3D00                             00000000
B3D01                             00000001
B3D02                             00000002
B3D03                             00000003
B3D04                             00000004
B3D05                             00000005
B3D06                             00000006
B3D07                             00000007
B3D1                              00000E57
B3D10                             00000000
B3D11                             00000001
B3D12                             00000002
B3D13                             00000003
B3D14                             00000004
B3D15                             00000005
B3D16                             00000006
B3D17                             00000007
B3D2                              00000E58
B3D20                             00000000
B3D21                             00000001
B3D22                             00000002
B3D23                             00000003
B3D24                             00000004
B3D25                             00000005
B3D26                             00000006
B3D27                             00000007
B3D3                              00000E59
B3D30                             00000000
B3D31                             00000001
B3D32                             00000002
B3D33                             00000003
B3D34                             00000004
B3D35                             00000005
B3D36                             00000006
B3D37                             00000007
B3D4                              00000E5A
B3D40                             00000000
B3D41                             00000001
B3D42                             00000002
B3D43                             00000003
B3D44                             00000004
B3D45                             00000005
B3D46                             00000006
B3D47                             00000007
B3D5                              00000E5B
B3D50                             00000000
B3D51                             00000001
B3D52                             00000002
B3D53                             00000003
B3D54                             00000004
B3D55                             00000005
B3D56                             00000006
B3D57                             00000007
B3D6                              00000E5C
B3D60                             00000000
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 79


SYMBOL TABLE
  LABEL                             VALUE 

B3D61                             00000001
B3D62                             00000002
B3D63                             00000003
B3D64                             00000004
B3D65                             00000005
B3D66                             00000006
B3D67                             00000007
B3D7                              00000E5D
B3D70                             00000000
B3D71                             00000001
B3D72                             00000002
B3D73                             00000003
B3D74                             00000004
B3D75                             00000005
B3D76                             00000006
B3D77                             00000007
B3DLC                             00000E55
B3EIDH                            00000E53
B3EIDL                            00000E54
B3IE                              00000005
B3SIDH                            00000E51
B3SIDL                            00000E52
B3TXEN                            00000005
B46D77                            00000007
B4CON                             00000E60
B4D0                              00000E66
B4D00                             00000000
B4D01                             00000001
B4D02                             00000002
B4D03                             00000003
B4D04                             00000004
B4D05                             00000005
B4D06                             00000006
B4D07                             00000007
B4D1                              00000E67
B4D10                             00000000
B4D11                             00000001
B4D12                             00000002
B4D13                             00000003
B4D14                             00000004
B4D15                             00000005
B4D16                             00000006
B4D17                             00000007
B4D2                              00000E68
B4D20                             00000000
B4D21                             00000001
B4D22                             00000002
B4D23                             00000003
B4D24                             00000004
B4D25                             00000005
B4D26                             00000006
B4D27                             00000007
B4D3                              00000E69
B4D30                             00000000
B4D31                             00000001
B4D32                             00000002
B4D33                             00000003
B4D34                             00000004
B4D35                             00000005
B4D36                             00000006
B4D37                             00000007
B4D4                              00000E6A
B4D40                             00000000
B4D41                             00000001
B4D42                             00000002
B4D43                             00000003
B4D44                             00000004
B4D45                             00000005
B4D46                             00000006
B4D47                             00000007
B4D5                              00000E6B
B4D50                             00000000
B4D51                             00000001
B4D52                             00000002
B4D53                             00000003
B4D54                             00000004
B4D55                             00000005
B4D56                             00000006
B4D57                             00000007
B4D6                              00000E6C
B4D60                             00000000
B4D61                             00000001
B4D62                             00000002
B4D63                             00000003
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 80


SYMBOL TABLE
  LABEL                             VALUE 

B4D64                             00000004
B4D65                             00000005
B4D66                             00000006
B4D67                             00000007
B4D7                              00000E6D
B4D70                             00000000
B4D71                             00000001
B4D72                             00000002
B4D73                             00000003
B4D74                             00000004
B4D75                             00000005
B4D76                             00000006
B4D77                             00000007
B4DLC                             00000E65
B4EIDH                            00000E63
B4EIDL                            00000E64
B4IE                              00000006
B4SIDH                            00000E61
B4SIDL                            00000E62
B4TXEN                            00000006
B57D07                            00000007
B57D23                            00000003
B5CON                             00000E70
B5D0                              00000E76
B5D00                             00000000
B5D01                             00000001
B5D02                             00000002
B5D03                             00000003
B5D04                             00000004
B5D05                             00000005
B5D06                             00000006
B5D07                             00000007
B5D1                              00000E77
B5D10                             00000000
B5D11                             00000001
B5D12                             00000002
B5D13                             00000003
B5D14                             00000004
B5D15                             00000005
B5D16                             00000006
B5D17                             00000007
B5D2                              00000E78
B5D20                             00000000
B5D21                             00000001
B5D22                             00000002
B5D23                             00000003
B5D24                             00000004
B5D25                             00000005
B5D26                             00000006
B5D27                             00000007
B5D3                              00000E79
B5D30                             00000000
B5D31                             00000001
B5D32                             00000002
B5D33                             00000003
B5D34                             00000004
B5D35                             00000005
B5D36                             00000006
B5D37                             00000007
B5D4                              00000E7A
B5D40                             00000000
B5D41                             00000001
B5D42                             00000002
B5D43                             00000003
B5D44                             00000004
B5D45                             00000005
B5D46                             00000006
B5D47                             00000007
B5D5                              00000E7B
B5D50                             00000000
B5D51                             00000001
B5D52                             00000002
B5D53                             00000003
B5D54                             00000004
B5D55                             00000005
B5D56                             00000006
B5D57                             00000007
B5D6                              00000E7C
B5D60                             00000000
B5D61                             00000001
B5D62                             00000002
B5D63                             00000003
B5D64                             00000004
B5D65                             00000005
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 81


SYMBOL TABLE
  LABEL                             VALUE 

B5D66                             00000006
B5D67                             00000007
B5D7                              00000E7D
B5D70                             00000000
B5D71                             00000001
B5D72                             00000002
B5D73                             00000003
B5D74                             00000004
B5D75                             00000005
B5D76                             00000006
B5D77                             00000007
B5DLC                             00000E75
B5EIDH                            00000E73
B5EIDL                            00000E74
B5IE                              00000007
B5SIDH                            00000E71
B5SIDL                            00000E72
B5TXEN                            00000007
BANKED                            00000001
BAUDCON                           00000FB8
BAUDCTL                           00000FB8
BCLIE                             00000003
BCLIF                             00000003
BCLIP                             00000003
BF                                00000000
BGST                              00000005
BIE0                              00000DFA
BIT_0                             00000002
BIT_1                             00000001
BIT_10                            00000001
BIT_11                            00000000
BIT_12                            00000007
BIT_13                            00000006
BIT_14                            00000005
BIT_15                            00000001
BIT_16                            00000000
BIT_17                            00000003
BIT_18                            00000001
BIT_19                            00000002
BIT_2                             00000000
BIT_3                             00000002
BIT_4                             00000007
BIT_5                             00000006
BIT_6                             00000005
BIT_7                             00000004
BIT_8                             00000003
BIT_9                             00000002
BIT_FADE_CYCLE                    00000020
BIT_FADE_DOWN                     00000040
BIT_FADE_UP                       00000080
BIT_L0                            00000002
BIT_L1                            00000000
BIT_L2                            00000005
BIT_L3                            00000000
BIT_L4                            00000005
BIT_MAX_OFF_TIME                  00000010
BIT_RX                            00000007
BIT_T_R                           00000003
BIT_X0                            00000003
BIT_X1                            00000001
BIT_X2                            00000004
BIT_X3                            00000004
BIT_X4                            00000004
BOR                               00000000
BRG16                             00000003
BRGCON1                           00000F70
BRGCON2                           00000F71
BRGCON3                           00000F72
BRGH                              00000002
BRP0                              00000000
BRP1                              00000001
BRP2                              00000002
BRP3                              00000003
BRP4                              00000004
BRP5                              00000005
BSEL0                             00000DF8
BSR                               00000FE0
BTN_FLG_ACTIVE                    00000003
BTN_FLG_LOCKED                    00000002
BTN_FLG_MASKED                    00000001
BTN_FLG_PRESSED                   00000000
BTN_IDX_L0                        00000001
BTN_IDX_L1                        00000003
BTN_IDX_L2                        00000005
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 82


SYMBOL TABLE
  LABEL                             VALUE 

BTN_IDX_L3                        00000007
BTN_IDX_L4                        00000009
BTN_IDX_X0                        00000000
BTN_IDX_X1                        00000002
BTN_IDX_X2                        00000004
BTN_IDX_X3                        00000006
BTN_IDX_X4                        00000008
BTN_X0_DEB_TMR                    00000C60
BTN_X0_FLAGS                      00000C40
BTN_X0_LOCKTMR                    00000C50
BTN_X0_TIME_H                     00000C20
BTN_X0_TIME_L                     00000C30
BTN_X0_TIME_T                     00000C00
BTN_X0_TIME_U                     00000C10
C                                 00000000
C1INA                             00000001
C1INB                             00000000
C1INV                             00000004
C1OUT                             00000006
C2INA                             00000003
C2INB                             00000002
C2INV                             00000005
C2OUT                             00000007
CANCAP                            00000004
CANCON                            00000F6F
CANCON_RO0                        00000F5F
CANCON_RO1                        00000F4F
CANCON_RO2                        00000F3F
CANCON_RO3                        00000F2F
CANCON_RO4                        00000E7F
CANCON_RO5                        00000E6F
CANCON_RO6                        00000E5F
CANCON_RO7                        00000E4F
CANCON_RO8                        00000E3F
CANCON_RO9                        00000E2F
CANRX                             00000003
CANSTAT                           00000F6E
CANSTAT_RO0                       00000F5E
CANSTAT_RO1                       00000F4E
CANSTAT_RO2                       00000F3E
CANSTAT_RO3                       00000F2E
CANSTAT_RO4                       00000E7E
CANSTAT_RO5                       00000E6E
CANSTAT_RO6                       00000E5E
CANSTAT_RO7                       00000E4E
CANSTAT_RO8                       00000E3E
CANSTAT_RO9                       00000E2E
CANTX                             00000002
CB_IDX                            00000010
CCP1                              00000002
CCP1CON                           00000FBD
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCPR1                             00000FBE
CCPR1H                            00000FBF
CCPR1L                            00000FBE
CFGS                              00000006
CHAN_L0R                          00000003
CHAN_L1R                          00000007
CHAN_L2R                          0000000B
CHAN_L3R                          0000000F
CHAN_L4R                          00000013
CHAN_X0B                          00000002
CHAN_X0G                          00000001
CHAN_X0R                          00000000
CHAN_X1B                          00000006
CHAN_X1G                          00000005
CHAN_X1R                          00000004
CHAN_X2B                          0000000A
CHAN_X2G                          00000009
CHAN_X2R                          00000008
CHAN_X3B                          0000000E
CHAN_X3G                          0000000D
CHAN_X3R                          0000000C
CHAN_X4B                          00000012
CHAN_X4G                          00000011
CHAN_X4R                          00000010
CHS0                              00000002
CHS1                              00000003
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 83


SYMBOL TABLE
  LABEL                             VALUE 

CHS2                              00000004
CHS3                              00000005
CIOCON                            00000F73
CIS                               00000003
CK                                00000006
CKE                               00000006
CKP                               00000004
CLEAR_BUTTONS                     
CLKI                              00000007
CLKO                              00000006
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             00000FB4
CMIE                              00000006
CMIF                              00000006
CMIP                              00000006
COMSTAT                           00000F74
CREN                              00000004
CS                                00000002
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            00000FB5
CVREF_CVRCON                      00000004
CVREF_PORTA                       00000000
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
CVRSS                             00000004
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DDRA                              TRISA
DDRB                              TRISB
DDRC                              TRISC
DDRD                              TRISD
DDRE                              TRISE
DFLC0                             00000000
DFLC1                             00000001
DFLC2                             00000002
DFLC3                             00000003
DFLC4                             00000004
DLC0                              00000000
DLC1                              00000001
DLC2                              00000002
DLC3                              00000003
DONE                              00000001
DRAIN_TR                          00000002
D_A                               00000005
D_NOT_A                           00000005
ECANCON                           00000F77
ECCP1                             00000004
ECCP1AS                           00000FB6
ECCP1CON                          00000FBA
ECCP1DEL                          00000FB7
ECCP1IE                           00000000
ECCP1IF                           00000000
ECCP1IP                           00000000
ECCP1M0                           00000000
ECCP1M1                           00000001
ECCP1M2                           00000002
ECCP1M3                           00000003
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
ECCPR1                            00000FBB
ECCPR1H                           00000FBC
ECCPR1L                           00000FBB
EDC1B0                            00000004
EDC1B1                            00000005
EEADR                             00000FA9
EEADRH                            00000FAA
EECON1                            00000FA6
EECON2                            00000FA7
EEDATA                            00000FA8
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 84


SYMBOL TABLE
  LABEL                             VALUE 

EEPGD                             00000007
EICODE0                           00000000
EICODE1                           00000001
EICODE1_ICODE0                    00000001
EICODE2                           00000002
EICODE2_ICODE1                    00000002
EICODE3                           00000003
EICODE3_ICODE2                    00000003
EICODE4                           00000004
EID0                              00000000
EID1                              00000001
EID10                             00000002
EID11                             00000003
EID12                             00000004
EID13                             00000005
EID14                             00000006
EID15                             00000007
EID16                             00000000
EID17                             00000001
EID2                              00000002
EID3                              00000003
EID4                              00000004
EID5                              00000005
EID6                              00000006
EID7                              00000007
EID8                              00000000
EID9                              00000001
ENDRHI                            00000005
EPWM1M0                           00000006
EPWM1M1                           00000007
ERRIE                             00000005
ERRIF                             00000005
ERRIP                             00000005
EWARN                             00000000
EWIN0                             00000000
EWIN1                             00000001
EWIN2                             00000002
EWIN3                             00000003
EWIN4                             00000004
EXID                              00000003
EXIDE                             00000003
EXIDEN                            00000003
F                                 00000005
F0BP_0                            00000000
F0BP_1                            00000001
F0BP_2                            00000002
F0BP_3                            00000003
F10BP_0                           00000000
F10BP_1                           00000001
F10BP_2                           00000002
F10BP_3                           00000003
F11BP_0                           00000004
F11BP_1                           00000005
F11BP_2                           00000006
F11BP_3                           00000007
F12BP_0                           00000000
F12BP_1                           00000001
F12BP_2                           00000002
F12BP_3                           00000003
F13BP_0                           00000004
F13BP_1                           00000005
F13BP_2                           00000006
F13BP_3                           00000007
F14BP_0                           00000000
F14BP_1                           00000001
F14BP_2                           00000002
F14BP_3                           00000003
F15BP_0                           00000004
F15BP_1                           00000005
F15BP_2                           00000006
F15BP_3                           00000007
F1BP_0                            00000004
F1BP_1                            00000005
F1BP_2                            00000006
F1BP_3                            00000007
F2BP_0                            00000000
F2BP_1                            00000001
F2BP_2                            00000002
F2BP_3                            00000003
F3BP_0                            00000004
F3BP_1                            00000005
F3BP_2                            00000006
F3BP_3                            00000007
F4BP_0                            00000000
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 85


SYMBOL TABLE
  LABEL                             VALUE 

F4BP_1                            00000001
F4BP_2                            00000002
F4BP_3                            00000003
F5BP_0                            00000004
F5BP_1                            00000005
F5BP_2                            00000006
F5BP_3                            00000007
F6BP_0                            00000000
F6BP_1                            00000001
F6BP_2                            00000002
F6BP_3                            00000003
F7BP_0                            00000004
F7BP_1                            00000005
F7BP_2                            00000006
F7BP_3                            00000007
F8BP_0                            00000000
F8BP_1                            00000001
F8BP_2                            00000002
F8BP_3                            00000003
F9BP_0                            00000004
F9BP_1                            00000005
F9BP_2                            00000006
F9BP_3                            00000007
FADE_CYCLE                        00000005
FADE_DOWN                         00000006
FADE_UP                           00000007
FAST                              00000001
FERR                              00000002
FIFOEMPTY                         00000007
FIFOMWIE                          00000000
FIFOWM                            00000005
FIFOWMIE                          00000000
FIFOWMIF                          00000000
FIFOWMIP                          00000000
FIL0_0                            00000000
FIL0_1                            00000001
FIL10_0                           00000004
FIL10_1                           00000005
FIL11_0                           00000006
FIL11_1                           00000007
FIL12_0                           00000000
FIL12_1                           00000001
FIL13_0                           00000002
FIL13_1                           00000003
FIL14_0                           00000004
FIL14_1                           00000005
FIL15_0                           00000006
FIL15_1                           00000007
FIL1_0                            00000002
FIL1_1                            00000003
FIL2_0                            00000004
FIL2_1                            00000005
FIL3_0                            00000006
FIL3_1                            00000007
FIL4_0                            00000000
FIL4_1                            00000001
FIL5_0                            00000002
FIL5_1                            00000003
FIL6_0                            00000004
FIL6_1                            00000005
FIL7_0                            00000006
FIL7_1                            00000007
FIL8_0                            00000000
FIL8_1                            00000001
FIL9_0                            00000002
FIL9_1                            00000003
FILHIT0                           00000000
FILHIT0_TXPRI0                    00000000
FILHIT1                           00000001
FILHIT1_TXPRI1                    00000001
FILHIT2                           00000002
FILHIT2_RTREN                     00000002
FILHIT3                           00000003
FILHIT3_TXREQ                     00000003
FILHIT4                           00000004
FILHIT4_TXERR                     00000004
FLC0                              00000000
FLC1                              00000001
FLC2                              00000002
FLC3                              00000003
FLC4                              00000004
FLT0                              00000000
FP0                               00000000
FP1                               00000001
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 86


SYMBOL TABLE
  LABEL                             VALUE 

FP2                               00000002
FP3                               00000003
FREE                              00000004
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
GCEN                              00000007
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GIE_GIEH                          00000007
GO                                00000001
GO_DONE                           00000001
GO_NOT_DONE                       00000001
HAS_ACTIVE                        00000000
HAS_OPTION                        00000000
HAS_POWER_CTRL                    00000000
HAS_SENSORS                       00000000
HAS_STATUS_LEDS                   00000000
HAS_T_R                           00000001
HLVDCON                           00000FD2
HLVDEN                            00000004
HLVDIE                            00000002
HLVDIF                            00000002
HLVDIN                            00000005
HLVDIP                            00000002
HLVDL0                            00000000
HLVDL1                            00000001
HLVDL2                            00000002
HLVDL3                            00000003
I2C_DAT                           00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
ICODE0                            00000000
ICODE1                            00000001
ICODE2                            00000002
ICODE3                            00000003
ICODE4                            00000004
IDLEN                             00000007
INCYC                             00000007
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INHIBIT_OUTPUT                    00000002
INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1E                             00000003
INT1F                             00000000
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT1P                             00000006
INT2                              00000002
INT2E                             00000004
INT2F                             00000001
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INT2P                             00000007
INTCON                            00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
INTSCR                            00000007
INTSRC                            00000007
IOFS                              00000002
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 87


SYMBOL TABLE
  LABEL                             VALUE 

IPR3                              00000FA5
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRVST                             00000005
IRXIE                             00000007
IRXIF                             00000007
IRXIP                             00000007
IVRST                             00000005
JTOFF                             00000001
JTOFF_FILHIT1                     00000001
KBI0                              00000004
KBI1                              00000005
KBI2                              00000006
KBI3                              00000007
LATA                              00000F89
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA3                             00000003
LATA4                             00000004
LATA5                             00000005
LATA6                             00000006
LATA7                             00000007
LATB                              00000F8A
LATB0                             00000000
LATB1                             00000001
LATB2                             00000002
LATB3                             00000003
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              00000F8B
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC3                             00000003
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
LATD                              00000F8C
LATD0                             00000000
LATD1                             00000001
LATD2                             00000002
LATD3                             00000003
LATD4                             00000004
LATD5                             00000005
LATD6                             00000006
LATD7                             00000007
LATE                              00000F8D
LATE0                             00000000
LATE1                             00000001
LATE2                             00000002
LITERAL_ESC                       00000000
LLIM_END_0                        000001C4
LLIM_END_1                        00000248
LLIM_END_10                       00000746
LLIM_END_11                       000007D2
LLIM_END_12                       0000086C
LLIM_END_13                       000008F0
LLIM_END_14                       0000097C
LLIM_END_15                       00000A16
LLIM_END_16                       00000A9A
LLIM_END_17                       00000B26
LLIM_END_18                       00000BC0
LLIM_END_19                       00000C44
LLIM_END_2                        000002D4
LLIM_END_20                       00000CD0
LLIM_END_21                       00000D6A
LLIM_END_22                       00000DEE
LLIM_END_23                       00000E7A
LLIM_END_24                       00000F14
LLIM_END_25                       00000F98
LLIM_END_26                       00001024
LLIM_END_27                       000010BE
LLIM_END_28                       00001142
LLIM_END_29                       000011CE
LLIM_END_3                        0000036E
LLIM_END_30                       000012FE
LLIM_END_31                       0000136E
LLIM_END_32                       000013DE
LLIM_END_33                       0000144E
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 88


SYMBOL TABLE
  LABEL                             VALUE 

LLIM_END_34                       000014BE
LLIM_END_35                       0000152E
LLIM_END_36                       0000159E
LLIM_END_37                       0000160E
LLIM_END_38                       0000167E
LLIM_END_39                       000016EE
LLIM_END_4                        000003F2
LLIM_END_5                        0000047E
LLIM_END_6                        00000518
LLIM_END_7                        0000059C
LLIM_END_8                        00000628
LLIM_END_9                        000006C2
LLIM_N                            00000028
LLIM_NOT_LOCKED_0                 00000180
LLIM_NOT_LOCKED_1                 00000204
LLIM_NOT_LOCKED_10                00000702
LLIM_NOT_LOCKED_11                0000078E
LLIM_NOT_LOCKED_12                00000828
LLIM_NOT_LOCKED_13                000008AC
LLIM_NOT_LOCKED_14                00000938
LLIM_NOT_LOCKED_15                000009D2
LLIM_NOT_LOCKED_16                00000A56
LLIM_NOT_LOCKED_17                00000AE2
LLIM_NOT_LOCKED_18                00000B7C
LLIM_NOT_LOCKED_19                00000C00
LLIM_NOT_LOCKED_2                 00000290
LLIM_NOT_LOCKED_20                00000C8C
LLIM_NOT_LOCKED_21                00000D26
LLIM_NOT_LOCKED_22                00000DAA
LLIM_NOT_LOCKED_23                00000E36
LLIM_NOT_LOCKED_24                00000ED0
LLIM_NOT_LOCKED_25                00000F54
LLIM_NOT_LOCKED_26                00000FE0
LLIM_NOT_LOCKED_27                0000107A
LLIM_NOT_LOCKED_28                000010FE
LLIM_NOT_LOCKED_29                0000118A
LLIM_NOT_LOCKED_3                 0000032A
LLIM_NOT_LOCKED_30                000012BA
LLIM_NOT_LOCKED_31                0000132A
LLIM_NOT_LOCKED_32                0000139A
LLIM_NOT_LOCKED_33                0000140A
LLIM_NOT_LOCKED_34                0000147A
LLIM_NOT_LOCKED_35                000014EA
LLIM_NOT_LOCKED_36                0000155A
LLIM_NOT_LOCKED_37                000015CA
LLIM_NOT_LOCKED_38                0000163A
LLIM_NOT_LOCKED_39                000016AA
LLIM_NOT_LOCKED_4                 000003AE
LLIM_NOT_LOCKED_5                 0000043A
LLIM_NOT_LOCKED_6                 000004D4
LLIM_NOT_LOCKED_7                 00000558
LLIM_NOT_LOCKED_8                 000005E4
LLIM_NOT_LOCKED_9                 0000067E
LLIM_OFF_0                        000001A8
LLIM_OFF_1                        0000022C
LLIM_OFF_10                       0000072A
LLIM_OFF_11                       000007B6
LLIM_OFF_12                       00000850
LLIM_OFF_13                       000008D4
LLIM_OFF_14                       00000960
LLIM_OFF_15                       000009FA
LLIM_OFF_16                       00000A7E
LLIM_OFF_17                       00000B0A
LLIM_OFF_18                       00000BA4
LLIM_OFF_19                       00000C28
LLIM_OFF_2                        000002B8
LLIM_OFF_20                       00000CB4
LLIM_OFF_21                       00000D4E
LLIM_OFF_22                       00000DD2
LLIM_OFF_23                       00000E5E
LLIM_OFF_24                       00000EF8
LLIM_OFF_25                       00000F7C
LLIM_OFF_26                       00001008
LLIM_OFF_27                       000010A2
LLIM_OFF_28                       00001126
LLIM_OFF_29                       000011B2
LLIM_OFF_3                        00000352
LLIM_OFF_30                       000012E2
LLIM_OFF_31                       00001352
LLIM_OFF_32                       000013C2
LLIM_OFF_33                       00001432
LLIM_OFF_34                       000014A2
LLIM_OFF_35                       00001512
LLIM_OFF_36                       00001582
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 89


SYMBOL TABLE
  LABEL                             VALUE 

LLIM_OFF_37                       000015F2
LLIM_OFF_38                       00001662
LLIM_OFF_39                       000016D2
LLIM_OFF_4                        000003D6
LLIM_OFF_5                        00000462
LLIM_OFF_6                        000004FC
LLIM_OFF_7                        00000580
LLIM_OFF_8                        0000060C
LLIM_OFF_9                        000006A6
LOCAL_LIGHT_INDICATOR             
LUMOS_ARCH                        LUMOS_ARCH_4685
LUMOS_ARCH_14K50                  (0x1450)
LUMOS_ARCH_4685                   (0x4685)
LUMOS_CHIP_4CHANNEL               0x44
LUMOS_CHIP_MASTER                 0x41
LUMOS_CHIP_QSCC                   0x45
LUMOS_CHIP_QSRC                   0x46
LUMOS_CHIP_SLAVE                  0x42
LUMOS_CHIP_STANDALONE             0x43
LUMOS_CHIP_TYPE                   LUMOS_CHIP_QSRC
LUMOS_CONFIG_INC                  
LUMOS_INTERNAL                    0x58
LUMOS_SET_SSR_INC                 
LUMOS_SLICE_TIMER                 LUMOS_INTERNAL
LUMOS_ZC                          0x55
LVDCON                            00000FD2
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIN                             00000005
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
LVV0                              00000000
LVV1                              00000001
LVV2                              00000002
LVV3                              00000003
MAIN_DATA                         00000500
MAX_OFF_TIME                      00000004
MDSEL0                            00000006
MDSEL1                            00000007
MSB_ESC                           00000001
MSEL0                             00000DF0
MSEL1                             00000DF1
MSEL2                             00000DF2
MSEL3                             00000DF3
N                                 00000004
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_CS                            00000002
NOT_DONE                          00000001
NOT_FIFOEMPTY                     00000007
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RD                            00000000
NOT_RI                            00000004
NOT_SS                            00000005
NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
NOT_TO                            00000003
NOT_W                             00000002
NOT_WR                            00000001
NOT_WRITE                         00000002
NUM_CHANNELS                      (.20)
N_BUTTONS                         00000010
OBF                               00000006
OERR                              00000001
OPMODE0                           00000005
OPMODE1                           00000006
OPMODE2                           00000007
OSC1                              00000007
OSC2                              00000006
OSCCON                            00000FD3
OSCFIE                            00000007
OSCFIF                            00000007
OSCFIP                            00000007
OSCTUNE                           00000F9B
OSTS                              00000003
OV                                00000003
P                                 00000004
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 90


SYMBOL TABLE
  LABEL                             VALUE 

P1A                               00000004
P1B                               00000005
P1C                               00000006
P1D                               00000007
PC                                00000FF9
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEIE_GIEL                         00000006
PEN                               00000002
PGC                               00000006
PGD                               00000007
PGM                               00000005
PIE1                              00000F9D
PIE2                              00000FA0
PIE3                              00000FA3
PIR1                              00000F9E
PIR2                              00000FA1
PIR3                              00000FA4
PLAT_0                            00000F8B
PLAT_1                            00000F8B
PLAT_10                           00000F8A
PLAT_11                           00000F8D
PLAT_12                           00000F8C
PLAT_13                           00000F8C
PLAT_14                           00000F8C
PLAT_15                           00000F8D
PLAT_16                           00000F8A
PLAT_17                           00000F8C
PLAT_18                           00000F8C
PLAT_19                           00000F8C
PLAT_2                            00000F8B
PLAT_3                            00000F8D
PLAT_4                            00000F8A
PLAT_5                            00000F8A
PLAT_6                            00000F8A
PLAT_7                            00000F8A
PLAT_8                            00000F8A
PLAT_9                            00000F8A
PLAT_T_R                          00000F8B
PLLEN                             00000006
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
PORTD                             00000F83
PORTE                             00000F84
PORT_L0                           00000F80
PORT_L1                           00000F80
PORT_L2                           00000F80
PORT_L3                           00000F83
PORT_L4                           00000F82
PORT_RX                           00000F82
PORT_T_R                          00000F82
PORT_X0                           00000F80
PORT_X1                           00000F80
PORT_X2                           00000F80
PORT_X3                           00000F82
PORT_X4                           00000F83
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PR2                               00000FCB
PRECYC                            00000006
PREINC0                           00000FEC
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 91


SYMBOL TABLE
  LABEL                             VALUE 

PREINC1                           00000FE4
PREINC2                           00000FDC
PRE_PRIV                          00000001
PRIV_FORBID                       00000003
PRIV_MODE                         00000004
PROD                              00000FF3
PRODH                             00000FF4
PRODL                             00000FF3
PRSEG0                            00000000
PRSEG1                            00000001
PRSEG2                            00000002
PRSEN                             00000007
PSA                               00000003
PSP0                              00000000
PSP1                              00000001
PSP2                              00000002
PSP3                              00000003
PSP4                              00000004
PSP5                              00000005
PSP6                              00000006
PSP7                              00000007
PSPIE                             00000007
PSPIF                             00000007
PSPIP                             00000007
PSPMODE                           00000004
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
QSCC_BITS_INC                     
QSCC_CMD5_START                   000011D4
QSCC_MAIN                         00000120
QSCC_PORT                         (1)
QSCC_SENS_END                     0000010A
QSCC_START                        00000000
QS_BTN_TMR_T                      00000000
QS_BTN_TMR_U                      00000000
QS_FLAG_DOING120                  00000002
QS_FLAG_ON_120_S                  00000001
QS_FLAG_SCANNING                  00000000
QS_SENS_CONF                      00000028
QS_SENS_MASK                      0000003F
QS_SENS_PORT                      00000F80
QS_SENS_STAND                     00000006
QS_STOP_SCANNER                   000016F2
QUIZSHOW_DATA                     00000C00
QUIZSHOW_FLAGS                    00000000
QUIZSHOW_LCKTM                    00000C70
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RB0_B0DLC                         00000004
RB0_B1DLC                         00000004
RB0_B2DLC                         00000004
RB0_B3DLC                         00000004
RB0_B4DLC                         00000004
RB0_B5DLC                         00000004
RB0_DDRB                          00000000
RB0_PORTB                         00000000
RB0_RXB0DLC                       00000004
RB0_RXB1DLC                       00000004
RB0_TRISB                         00000000
RB1_B0DLC                         00000005
RB1_B1DLC                         00000005
RB1_B2DLC                         00000005
RB1_B3DLC                         00000005
RB1_B4DLC                         00000005
RB1_B5DLC                         00000005
RB1_DDRB                          00000001
RB1_PORTB                         00000001
RB1_RXB0DLC                       00000005
RB1_RXB1DLC                       00000005
RB1_TRISB                         00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 92


SYMBOL TABLE
  LABEL                             VALUE 

RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCIP                              00000005
RCON                              00000FD0
RCREG                             00000FAE
RCSTA                             00000FAB
RD                                00000000
RD0                               00000000
RD1                               00000001
RD16                              00000007
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
RE3                               00000003
READ_WRITE                        00000002
REC0                              00000000
REC1                              00000001
REC2                              00000002
REC3                              00000003
REC4                              00000004
REC5                              00000005
REC6                              00000006
REC7                              00000007
REQOP0                            00000005
REQOP1                            00000006
REQOP2                            00000007
RESRB0                            00000004
RESRB1                            00000005
RI                                00000004
ROLE_MASTER                       (0)
ROLE_SLAVE                        (0)
ROLE_STANDALONE                   (1)
RSEN                              00000001
RTREN                             00000002
RTRRO                             00000005
RX                                00000007
RX9                               00000006
RX9D                              00000000
RXB0CON                           00000F60
RXB0D0                            00000F66
RXB0D00                           00000000
RXB0D01                           00000001
RXB0D02                           00000002
RXB0D03                           00000003
RXB0D04                           00000004
RXB0D05                           00000005
RXB0D06                           00000006
RXB0D07                           00000007
RXB0D1                            00000F67
RXB0D10                           00000000
RXB0D11                           00000001
RXB0D12                           00000002
RXB0D13                           00000003
RXB0D14                           00000004
RXB0D15                           00000005
RXB0D16                           00000006
RXB0D17                           00000007
RXB0D2                            00000F68
RXB0D20                           00000000
RXB0D21                           00000001
RXB0D22                           00000002
RXB0D23                           00000003
RXB0D24                           00000004
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 93


SYMBOL TABLE
  LABEL                             VALUE 

RXB0D25                           00000005
RXB0D26                           00000006
RXB0D27                           00000007
RXB0D3                            00000F69
RXB0D30                           00000000
RXB0D31                           00000001
RXB0D32                           00000002
RXB0D33                           00000003
RXB0D34                           00000004
RXB0D35                           00000005
RXB0D36                           00000006
RXB0D37                           00000007
RXB0D4                            00000F6A
RXB0D40                           00000000
RXB0D41                           00000001
RXB0D42                           00000002
RXB0D43                           00000003
RXB0D44                           00000004
RXB0D45                           00000005
RXB0D46                           00000006
RXB0D47                           00000007
RXB0D5                            00000F6B
RXB0D50                           00000000
RXB0D51                           00000001
RXB0D52                           00000002
RXB0D53                           00000003
RXB0D54                           00000004
RXB0D55                           00000005
RXB0D56                           00000006
RXB0D57                           00000007
RXB0D6                            00000F6C
RXB0D60                           00000000
RXB0D61                           00000001
RXB0D62                           00000002
RXB0D63                           00000003
RXB0D64                           00000004
RXB0D65                           00000005
RXB0D66                           00000006
RXB0D67                           00000007
RXB0D7                            00000F6D
RXB0D70                           00000000
RXB0D71                           00000001
RXB0D72                           00000002
RXB0D73                           00000003
RXB0D74                           00000004
RXB0D75                           00000005
RXB0D76                           00000006
RXB0D77                           00000007
RXB0DBEN                          00000002
RXB0DBEN_FILHIT2                  00000002
RXB0DLC                           00000F65
RXB0EIDH                          00000F63
RXB0EIDL                          00000F64
RXB0IE                            00000000
RXB0IF                            00000000
RXB0IP                            00000000
RXB0OVFL                          00000007
RXB0OVFL_NOT_FIFOEMPTY            00000007
RXB0SIDH                          00000F61
RXB0SIDL                          00000F62
RXB1CON                           00000F50
RXB1D0                            00000F56
RXB1D00                           00000000
RXB1D01                           00000001
RXB1D02                           00000002
RXB1D03                           00000003
RXB1D04                           00000004
RXB1D05                           00000005
RXB1D06                           00000006
RXB1D07                           00000007
RXB1D1                            00000F57
RXB1D10                           00000000
RXB1D11                           00000001
RXB1D12                           00000002
RXB1D13                           00000003
RXB1D14                           00000004
RXB1D15                           00000005
RXB1D16                           00000006
RXB1D17                           00000007
RXB1D2                            00000F58
RXB1D20                           00000000
RXB1D21                           00000001
RXB1D22                           00000002
RXB1D23                           00000003
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 94


SYMBOL TABLE
  LABEL                             VALUE 

RXB1D24                           00000004
RXB1D25                           00000005
RXB1D26                           00000006
RXB1D27                           00000007
RXB1D3                            00000F59
RXB1D30                           00000000
RXB1D31                           00000001
RXB1D32                           00000002
RXB1D33                           00000003
RXB1D34                           00000004
RXB1D35                           00000005
RXB1D36                           00000006
RXB1D37                           00000007
RXB1D4                            00000F5A
RXB1D40                           00000000
RXB1D41                           00000001
RXB1D42                           00000002
RXB1D43                           00000003
RXB1D44                           00000004
RXB1D45                           00000005
RXB1D46                           00000006
RXB1D47                           00000007
RXB1D5                            00000F5B
RXB1D50                           00000000
RXB1D51                           00000001
RXB1D52                           00000002
RXB1D53                           00000003
RXB1D54                           00000004
RXB1D55                           00000005
RXB1D56                           00000006
RXB1D57                           00000007
RXB1D6                            00000F5C
RXB1D60                           00000000
RXB1D61                           00000001
RXB1D62                           00000002
RXB1D63                           00000003
RXB1D64                           00000004
RXB1D65                           00000005
RXB1D66                           00000006
RXB1D67                           00000007
RXB1D7                            00000F5D
RXB1D70                           00000000
RXB1D71                           00000001
RXB1D72                           00000002
RXB1D73                           00000003
RXB1D74                           00000004
RXB1D75                           00000005
RXB1D76                           00000006
RXB1D77                           00000007
RXB1DLC                           00000F55
RXB1EIDH                          00000F53
RXB1EIDL                          00000F54
RXB1IE                            00000001
RXB1IF                            00000001
RXB1IP                            00000001
RXB1OVFL                          00000006
RXB1SIDH                          00000F51
RXB1SIDL                          00000F52
RXBODBEN                          00000002
RXBP                              00000003
RXBnIE                            00000001
RXBnIF                            00000001
RXBnIP                            00000001
RXBnOVFL                          00000006
RXERRCNT                          00000F75
RXF0EIDH                          00000F02
RXF0EIDL                          00000F03
RXF0EN                            00000000
RXF0SIDH                          00000F00
RXF0SIDL                          00000F01
RXF10EIDH                         00000D76
RXF10EIDL                         00000D77
RXF10EN                           00000002
RXF10SIDH                         00000D74
RXF10SIDL                         00000D75
RXF11EIDH                         00000D7A
RXF11EIDL                         00000D7B
RXF11EN                           00000003
RXF11SIDH                         00000D78
RXF11SIDL                         00000D79
RXF12EIDH                         00000D82
RXF12EIDL                         00000D83
RXF12EN                           00000004
RXF12SIDH                         00000D80
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 95


SYMBOL TABLE
  LABEL                             VALUE 

RXF12SIDL                         00000D81
RXF13EIDH                         00000D86
RXF13EIDL                         00000D87
RXF13EN                           00000005
RXF13SIDH                         00000D84
RXF13SIDL                         00000D85
RXF14EIDH                         00000D8A
RXF14EIDL                         00000D8B
RXF14EN                           00000006
RXF14SIDH                         00000D88
RXF14SIDL                         00000D89
RXF15EIDH                         00000D92
RXF15EIDL                         00000D93
RXF15EN                           00000007
RXF15SIDH                         00000D90
RXF15SIDL                         00000D91
RXF1EIDH                          00000F06
RXF1EIDL                          00000F07
RXF1EN                            00000001
RXF1SIDH                          00000F04
RXF1SIDL                          00000F05
RXF2EIDH                          00000F0A
RXF2EIDL                          00000F0B
RXF2EN                            00000002
RXF2SIDH                          00000F08
RXF2SIDL                          00000F09
RXF3EIDH                          00000F0E
RXF3EIDL                          00000F0F
RXF3EN                            00000003
RXF3SIDH                          00000F0C
RXF3SIDL                          00000F0D
RXF4EIDH                          00000F12
RXF4EIDL                          00000F13
RXF4EN                            00000004
RXF4SIDH                          00000F10
RXF4SIDL                          00000F11
RXF5EIDH                          00000F16
RXF5EIDL                          00000F17
RXF5EN                            00000005
RXF5SIDH                          00000F14
RXF5SIDL                          00000F15
RXF6EIDH                          00000D62
RXF6EIDL                          00000D63
RXF6EN                            00000006
RXF6SIDH                          00000D60
RXF6SIDL                          00000D61
RXF7EIDH                          00000D66
RXF7EIDL                          00000D67
RXF7EN                            00000007
RXF7SIDH                          00000D64
RXF7SIDL                          00000D65
RXF8EIDH                          00000D6A
RXF8EIDL                          00000D6B
RXF8EN                            00000000
RXF8SIDH                          00000D68
RXF8SIDL                          00000D69
RXF9EIDH                          00000D72
RXF9EIDL                          00000D73
RXF9EN                            00000001
RXF9SIDH                          00000D70
RXF9SIDL                          00000D71
RXFBCON0                          00000DE0
RXFBCON1                          00000DE1
RXFBCON2                          00000DE2
RXFBCON3                          00000DE3
RXFBCON4                          00000DE4
RXFBCON5                          00000DE5
RXFBCON6                          00000DE6
RXFBCON7                          00000DE7
RXFCON0                           00000DD4
RXFCON1                           00000DD5
RXFUL                             00000007
RXFUL_TXBIF                       00000007
RXM0                              00000005
RXM0EIDH                          00000F1A
RXM0EIDL                          00000F1B
RXM0SIDH                          00000F18
RXM0SIDL                          00000F19
RXM0_RTRRO                        00000005
RXM1                              00000006
RXM1EIDH                          00000F1E
RXM1EIDL                          00000F1F
RXM1SIDH                          00000F1C
RXM1SIDL                          00000F1D
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 96


SYMBOL TABLE
  LABEL                             VALUE 

RXM1_TXABT                        00000006
RXRTR                             00000006
RXRTRRO_B0CON                     00000005
RXRTRRO_B1CON                     00000005
RXRTRRO_B2CON                     00000005
RXRTRRO_B3CON                     00000005
RXRTRRO_B4CON                     00000005
RXRTRRO_B5CON                     00000005
RXRTRRO_FILHIT3                   00000003
RXRTRRO_RXB0CON                   00000003
RXRTRRO_RXB1CON                   00000003
RXRTRRO_TXLARB                    00000005
RXRTR_TXRTR                       00000006
RXWARN                            00000001
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SAM                               00000006
SBOREN                            00000006
SCAN_DEBOUNCE                     
SCAN_DEBOUNCERS                   0000012C
SCK                               00000003
SCKP                              00000004
SCL                               00000003
SCN_DBN                           0000000A
SCN_DB_ACTIVE_0                   0000013C
SCN_DB_ACTIVE_1                   000002E6
SCN_DB_ACTIVE_2                   00000490
SCN_DB_ACTIVE_3                   0000063A
SCN_DB_ACTIVE_4                   000007E4
SCN_DB_ACTIVE_5                   0000098E
SCN_DB_ACTIVE_6                   00000B38
SCN_DB_ACTIVE_7                   00000CE2
SCN_DB_ACTIVE_8                   00000E8C
SCN_DB_ACTIVE_9                   00001036
SCN_DB_CHANGED_0                  0000024C
SCN_DB_CHANGED_1                  000003F6
SCN_DB_CHANGED_2                  000005A0
SCN_DB_CHANGED_3                  0000074A
SCN_DB_CHANGED_4                  000008F4
SCN_DB_CHANGED_5                  00000A9E
SCN_DB_CHANGED_6                  00000C48
SCN_DB_CHANGED_7                  00000DF2
SCN_DB_CHANGED_8                  00000F9C
SCN_DB_CHANGED_9                  00001146
SCN_DB_DING_0                     000001C8
SCN_DB_DING_1                     00000372
SCN_DB_DING_2                     0000051C
SCN_DB_DING_3                     000006C6
SCN_DB_DING_4                     00000870
SCN_DB_DING_5                     00000A1A
SCN_DB_DING_6                     00000BC4
SCN_DB_DING_7                     00000D6E
SCN_DB_DING_8                     00000F18
SCN_DB_DING_9                     000010C2
SCN_DB_DONE_0                     000002D6
SCN_DB_DONE_1                     00000480
SCN_DB_DONE_2                     0000062A
SCN_DB_DONE_3                     000007D4
SCN_DB_DONE_4                     0000097E
SCN_DB_DONE_5                     00000B28
SCN_DB_DONE_6                     00000CD2
SCN_DB_DONE_7                     00000E7C
SCN_DB_DONE_8                     00001026
SCN_DB_DONE_9                     000011D0
SCN_DB_END_0                      0000024E
SCN_DB_END_1                      000003F8
SCN_DB_END_2                      000005A2
SCN_DB_END_3                      0000074C
SCN_DB_END_4                      000008F6
SCN_DB_END_5                      00000AA0
SCN_DB_END_6                      00000C4A
SCN_DB_END_7                      00000DF4
SCN_DB_END_8                      00000F9E
SCN_DB_END_9                      00001148
SCN_DB_LCK_0                      00000260
SCN_DB_LCK_1                      0000040A
SCN_DB_LCK_2                      000005B4
SCN_DB_LCK_3                      0000075E
SCN_DB_LCK_4                      00000908
SCN_DB_LCK_5                      00000AB2
SCN_DB_LCK_6                      00000C5C
SCN_DB_LCK_7                      00000E06
SCN_DB_LCK_8                      00000FB0
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 97


SYMBOL TABLE
  LABEL                             VALUE 

SCN_DB_LCK_9                      0000115A
SCS0                              00000000
SCS1                              00000001
SDA                               00000004
SDFLC                             00000DD8
SDI                               00000004
SDO                               00000005
SEG1PH0                           00000003
SEG1PH1                           00000004
SEG1PH2                           00000005
SEG2PH0                           00000000
SEG2PH1                           00000001
SEG2PH2                           00000002
SEG2PHT                           00000007
SEG2PHTS                          00000007
SEN                               00000000
SENDB                             00000003
SET_ALL_BUTTON_LIGHTS             0000128C
SET_SSR_BLINK_FADE                
SET_SSR_DMX_MODE                  
SET_SSR_NORMAL_MODE               
SET_SSR_OFF                       
SET_SSR_PATTERN                   
SET_SSR_RAPID_FADE                
SET_SSR_RAPID_FLASH               
SET_SSR_SLOW_FADE                 
SET_SSR_SLOW_FLASH                
SET_SSR_STEADY                    
SET_SSR_VALUE                     
SID0                              00000005
SID1                              00000006
SID10                             00000007
SID2                              00000007
SID3                              00000000
SID4                              00000001
SID5                              00000002
SID6                              00000003
SID7                              00000004
SID8                              00000005
SID9                              00000006
SJW0                              00000006
SJW1                              00000007
SLEEP_MODE                        00000003
SLICE_UPD                         00000005
SMP                               00000007
SP0                               00000000
SP1                               00000001
SP2                               00000002
SP3                               00000003
SP4                               00000004
SPBRG                             00000FAF
SPBRGH                            00000FB0
SPEN                              00000007
SREN                              00000005
SRR                               00000004
SS                                00000005
SSPADD                            00000FC8
SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000FC7
SSR_00_COUNTER                    00000000
SSR_00_FLAGS                      00000000
SSR_00_SPEED                      00000000
SSR_00_STEP                       00000000
SSR_00_VALUE                      00000000
SSR_DATA_BANK                     00000400
SSR_MAX                           00000019
SSR_STATE                         00000000
STATUS                            00000FD8
STKFUL                            00000007
STKOVF                            00000007
STKPTR                            00000FFC
STKPTR0                           00000000
STKPTR1                           00000001
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 98


SYMBOL TABLE
  LABEL                             VALUE 

STKPTR2                           00000002
STKPTR3                           00000003
STKPTR4                           00000004
STKUNF                            00000006
SWDTE                             00000000
SWDTEN                            00000000
SYNC                              00000004
T08BIT                            00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0IP                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0PS3                             00000003
T0SE                              00000004
T13CKI                            00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1INSYNC                          00000002
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1RUN                             00000006
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FCA
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
T3CCP1                            00000003
T3CCP2                            00000006
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3ECCP1                           00000006
T3NSYNC                           00000002
T3SYNC                            00000002
TABLAT                            00000FF5
TBLPTR                            00000FF6
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
TEC0                              00000000
TEC1                              00000001
TEC2                              00000002
TEC3                              00000003
TEC4                              00000004
TEC5                              00000005
TEC6                              00000006
TEC7                              00000007
TEST_BUTTON                       00000005
TEST_MODE                         00000000
TEST_PAUSE                        00000007
TEST_UPD                          00000006
TMR0                              00000FD6
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0ON                            00000007
TMR1                              00000FCE
TMR1CS                            00000001
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1ON                            00000000
TMR2                              00000FCC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2ON                            00000002
TMR3                              00000FB2
TMR3CS                            00000001
TMR3H                             00000FB3
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 99


SYMBOL TABLE
  LABEL                             VALUE 

TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3ON                            00000000
TO                                00000003
TOS                               00000FFD
TOSH                              00000FFE
TOSL                              00000FFD
TOSU                              00000FFF
TRISA                             00000F92
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000F93
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000F94
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000F95
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000F96
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRIS_T_R                          00000F94
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX                                00000006
TX9                               00000006
TX9D                              00000000
TXABT                             00000006
TXB0CON                           00000F40
TXB0D0                            00000F46
TXB0D00                           00000000
TXB0D01                           00000001
TXB0D02                           00000002
TXB0D03                           00000003
TXB0D04                           00000004
TXB0D05                           00000005
TXB0D06                           00000006
TXB0D07                           00000007
TXB0D1                            00000F47
TXB0D10                           00000000
TXB0D11                           00000001
TXB0D12                           00000002
TXB0D13                           00000003
TXB0D14                           00000004
TXB0D15                           00000005
TXB0D16                           00000006
TXB0D17                           00000007
TXB0D2                            00000F48
TXB0D20                           00000000
TXB0D21                           00000001
TXB0D22                           00000002
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 100


SYMBOL TABLE
  LABEL                             VALUE 

TXB0D23                           00000003
TXB0D24                           00000004
TXB0D25                           00000005
TXB0D26                           00000006
TXB0D27                           00000007
TXB0D3                            00000F49
TXB0D30                           00000000
TXB0D31                           00000001
TXB0D32                           00000002
TXB0D33                           00000003
TXB0D34                           00000004
TXB0D35                           00000005
TXB0D36                           00000006
TXB0D37                           00000007
TXB0D4                            00000F4A
TXB0D40                           00000000
TXB0D41                           00000001
TXB0D42                           00000002
TXB0D43                           00000003
TXB0D44                           00000004
TXB0D45                           00000005
TXB0D46                           00000006
TXB0D47                           00000007
TXB0D5                            00000F4B
TXB0D50                           00000000
TXB0D51                           00000001
TXB0D52                           00000002
TXB0D53                           00000003
TXB0D54                           00000004
TXB0D55                           00000005
TXB0D56                           00000006
TXB0D57                           00000007
TXB0D6                            00000F4C
TXB0D60                           00000000
TXB0D61                           00000001
TXB0D62                           00000002
TXB0D63                           00000003
TXB0D64                           00000004
TXB0D65                           00000005
TXB0D66                           00000006
TXB0D67                           00000007
TXB0D7                            00000F4D
TXB0D70                           00000000
TXB0D71                           00000001
TXB0D72                           00000002
TXB0D73                           00000003
TXB0D74                           00000004
TXB0D75                           00000005
TXB0D76                           00000006
TXB0D77                           00000007
TXB0DLC                           00000F45
TXB0EIDH                          00000F43
TXB0EIDL                          00000F44
TXB0IE                            00000002
TXB0IF                            00000002
TXB0IP                            00000002
TXB0SIDH                          00000F41
TXB0SIDL                          00000F42
TXB1CON                           00000F30
TXB1D0                            00000F36
TXB1D00                           00000000
TXB1D01                           00000001
TXB1D02                           00000002
TXB1D03                           00000003
TXB1D04                           00000004
TXB1D05                           00000005
TXB1D06                           00000006
TXB1D07                           00000007
TXB1D1                            00000F37
TXB1D10                           00000000
TXB1D11                           00000001
TXB1D12                           00000002
TXB1D13                           00000003
TXB1D14                           00000004
TXB1D15                           00000005
TXB1D16                           00000006
TXB1D17                           00000007
TXB1D2                            00000F38
TXB1D20                           00000000
TXB1D21                           00000001
TXB1D22                           00000002
TXB1D23                           00000003
TXB1D24                           00000004
TXB1D25                           00000005
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 101


SYMBOL TABLE
  LABEL                             VALUE 

TXB1D26                           00000006
TXB1D27                           00000007
TXB1D3                            00000F39
TXB1D30                           00000000
TXB1D31                           00000001
TXB1D32                           00000002
TXB1D33                           00000003
TXB1D34                           00000004
TXB1D35                           00000005
TXB1D36                           00000006
TXB1D37                           00000007
TXB1D4                            00000F3A
TXB1D40                           00000000
TXB1D41                           00000001
TXB1D42                           00000002
TXB1D43                           00000003
TXB1D44                           00000004
TXB1D45                           00000005
TXB1D46                           00000006
TXB1D47                           00000007
TXB1D5                            00000F3B
TXB1D50                           00000000
TXB1D51                           00000001
TXB1D52                           00000002
TXB1D53                           00000003
TXB1D54                           00000004
TXB1D55                           00000005
TXB1D56                           00000006
TXB1D57                           00000007
TXB1D6                            00000F3C
TXB1D60                           00000000
TXB1D61                           00000001
TXB1D62                           00000002
TXB1D63                           00000003
TXB1D64                           00000004
TXB1D65                           00000005
TXB1D66                           00000006
TXB1D67                           00000007
TXB1D7                            00000F3D
TXB1D70                           00000000
TXB1D71                           00000001
TXB1D72                           00000002
TXB1D73                           00000003
TXB1D74                           00000004
TXB1D75                           00000005
TXB1D76                           00000006
TXB1D77                           00000007
TXB1DLC                           00000F35
TXB1EIDH                          00000F33
TXB1EIDL                          00000F34
TXB1IE                            00000003
TXB1IF                            00000003
TXB1IP                            00000003
TXB1SIDH                          00000F31
TXB1SIDL                          00000F32
TXB2CON                           00000F20
TXB2D0                            00000F26
TXB2D00                           00000000
TXB2D01                           00000001
TXB2D02                           00000002
TXB2D03                           00000003
TXB2D04                           00000004
TXB2D05                           00000005
TXB2D06                           00000006
TXB2D07                           00000007
TXB2D1                            00000F27
TXB2D10                           00000000
TXB2D11                           00000001
TXB2D12                           00000002
TXB2D13                           00000003
TXB2D14                           00000004
TXB2D15                           00000005
TXB2D16                           00000006
TXB2D17                           00000007
TXB2D2                            00000F28
TXB2D20                           00000000
TXB2D21                           00000001
TXB2D22                           00000002
TXB2D23                           00000003
TXB2D24                           00000004
TXB2D25                           00000005
TXB2D26                           00000006
TXB2D27                           00000007
TXB2D3                            00000F29
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 102


SYMBOL TABLE
  LABEL                             VALUE 

TXB2D30                           00000000
TXB2D31                           00000001
TXB2D32                           00000002
TXB2D33                           00000003
TXB2D34                           00000004
TXB2D35                           00000005
TXB2D36                           00000006
TXB2D37                           00000007
TXB2D4                            00000F2A
TXB2D40                           00000000
TXB2D41                           00000001
TXB2D42                           00000002
TXB2D43                           00000003
TXB2D44                           00000004
TXB2D45                           00000005
TXB2D46                           00000006
TXB2D47                           00000007
TXB2D5                            00000F2B
TXB2D50                           00000000
TXB2D51                           00000001
TXB2D52                           00000002
TXB2D53                           00000003
TXB2D54                           00000004
TXB2D55                           00000005
TXB2D56                           00000006
TXB2D57                           00000007
TXB2D6                            00000F2C
TXB2D60                           00000000
TXB2D61                           00000001
TXB2D62                           00000002
TXB2D63                           00000003
TXB2D64                           00000004
TXB2D65                           00000005
TXB2D66                           00000006
TXB2D67                           00000007
TXB2D7                            00000F2D
TXB2D70                           00000000
TXB2D71                           00000001
TXB2D72                           00000002
TXB2D73                           00000003
TXB2D74                           00000004
TXB2D75                           00000005
TXB2D76                           00000006
TXB2D77                           00000007
TXB2DLC                           00000F25
TXB2EIDH                          00000F23
TXB2EIDL                          00000F24
TXB2IE                            00000004
TXB2IF                            00000004
TXB2IP                            00000004
TXB2SIDH                          00000F21
TXB2SIDL                          00000F22
TXBIE                             00000DFC
TXBIF                             00000007
TXBIFBXB2CON                      00000007
TXBIFTXB1CON                      00000007
TXBIP                             00000004
TXBO                              00000005
TXBP                              00000004
TXBnIE                            00000004
TXBnIF                            00000004
TXBnIP                            00000004
TXCKP                             00000004
TXEN                              00000005
TXERR                             00000004
TXERRCNT                          00000F76
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXLARB                            00000005
TXPRI0                            00000000
TXPRI1                            00000001
TXREG                             00000FAD
TXREQ                             00000003
TXRTR                             00000006
TXSTA                             00000FAC
TXWARN                            00000002
UA                                00000001
VCFG0                             00000004
VCFG1                             00000005
VDIRMAG                           00000007
VREFM                             00000002
VREFP                             00000003
W                                 00000000
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 103


SYMBOL TABLE
  LABEL                             VALUE 

WAKDIS                            00000007
WAKFIL                            00000006
WAKIE                             00000006
WAKIF                             00000006
WAKIP                             00000006
WCOL                              00000007
WDTCON                            00000FD1
WIN0                              00000001
WIN0_FP1                          00000001
WIN1                              00000002
WIN1_FP2                          00000002
WIN2                              00000003
WIN2_FP3                          00000003
WR                                00000001
WREG                              00000FE8
WREN                              00000002
WRERR                             00000003
WUE                               00000001
YY_BUF_LEN                        000000C8
Z                                 00000002
_BBSIZ_1024_4L                    000000CF
_BBSIZ_2048_4L                    000000DF
_BBSIZ_4096_4L                    000000EF
_BOREN_BOACTIVE_2L                000000FD
_BOREN_BOHW_2L                    000000FF
_BOREN_OFF_2L                     000000F9
_BOREN_SBORENCTRL_2L              000000FB
_BORV_0_2L                        000000E7
_BORV_1_2L                        000000EF
_BORV_2_2L                        000000F7
_BORV_3_2L                        000000FF
_CONFIG1H                         00300001
_CONFIG2H                         00300003
_CONFIG2L                         00300002
_CONFIG3H                         00300005
_CONFIG4L                         00300006
_CONFIG5H                         00300009
_CONFIG5L                         00300008
_CONFIG6H                         0030000B
_CONFIG6L                         0030000A
_CONFIG7H                         0030000D
_CONFIG7L                         0030000C
_CP0_OFF_5L                       000000FF
_CP0_ON_5L                        000000FE
_CP1_OFF_5L                       000000FF
_CP1_ON_5L                        000000FD
_CP2_OFF_5L                       000000FF
_CP2_ON_5L                        000000FB
_CP3_OFF_5L                       000000FF
_CP3_ON_5L                        000000F7
_CP4_OFF_5L                       000000FF
_CP4_ON_5L                        000000EF
_CP5_OFF_5L                       000000FF
_CP5_ON_5L                        000000DF
_CPB_OFF_5H                       000000FF
_CPB_ON_5H                        000000BF
_CPD_OFF_5H                       000000FF
_CPD_ON_5H                        0000007F
_DEBUG_OFF_4L                     000000FF
_DEBUG_ON_4L                      0000007F
_DEVID1                           003FFFFE
_DEVID2                           003FFFFF
_EBTR0_OFF_7L                     000000FF
_EBTR0_ON_7L                      000000FE
_EBTR1_OFF_7L                     000000FF
_EBTR1_ON_7L                      000000FD
_EBTR2_OFF_7L                     000000FF
_EBTR2_ON_7L                      000000FB
_EBTR3_OFF_7L                     000000FF
_EBTR3_ON_7L                      000000F7
_EBTR4_OFF_7L                     000000FF
_EBTR4_ON_7L                      000000EF
_EBTR5_OFF_7L                     000000FF
_EBTR5_ON_7L                      000000DF
_EBTRB_OFF_7H                     000000FF
_EBTRB_ON_7H                      000000BF
_FCMEN_OFF_1H                     000000BF
_FCMEN_ON_1H                      000000FF
_IDLOC0                           00200000
_IDLOC1                           00200001
_IDLOC2                           00200002
_IDLOC3                           00200003
_IDLOC4                           00200004
_IDLOC5                           00200005
MPASM 5.53              ../QUIZSHOW_MAIN.ASM   6-14-2014  9:32:01         PAGE 104


SYMBOL TABLE
  LABEL                             VALUE 

_IDLOC6                           00200006
_IDLOC7                           00200007
_IESO_OFF_1H                      0000007F
_IESO_ON_1H                       000000FF
_LPT1OSC_OFF_3H                   000000FB
_LPT1OSC_ON_3H                    000000FF
_LVP_OFF_4L                       000000FB
_LVP_ON_4L                        000000FF
_MCLRE_OFF_3H                     0000007F
_MCLRE_ON_3H                      000000FF
_OSC_ECIO_1H                      000000F5
_OSC_EC_1H                        000000F4
_OSC_HSPLL_1H                     000000F6
_OSC_HS_1H                        000000F2
_OSC_IRCIO67_1H                   000000F8
_OSC_IRCIO7_1H                    000000F9
_OSC_LP_1H                        000000F0
_OSC_RCIO_1H                      000000F7
_OSC_RC_1H                        000000F3
_OSC_XT_1H                        000000F1
_PBADEN_OFF_3H                    000000FD
_PBADEN_ON_3H                     000000FF
_PWRT_OFF_2L                      000000FF
_PWRT_ON_2L                       000000FE
_STVREN_OFF_4L                    000000FE
_STVREN_ON_4L                     000000FF
_WDTPS_1024_2H                    000000F5
_WDTPS_128_2H                     000000EF
_WDTPS_16384_2H                   000000FD
_WDTPS_16_2H                      000000E9
_WDTPS_1_2H                       000000E1
_WDTPS_2048_2H                    000000F7
_WDTPS_256_2H                     000000F1
_WDTPS_2_2H                       000000E3
_WDTPS_32768_2H                   000000FF
_WDTPS_32_2H                      000000EB
_WDTPS_4096_2H                    000000F9
_WDTPS_4_2H                       000000E5
_WDTPS_512_2H                     000000F3
_WDTPS_64_2H                      000000ED
_WDTPS_8192_2H                    000000FB
_WDTPS_8_2H                       000000E7
_WDT_OFF_2H                       000000FE
_WDT_ON_2H                        000000FF
_WRT0_OFF_6L                      000000FF
_WRT0_ON_6L                       000000FE
_WRT1_OFF_6L                      000000FF
_WRT1_ON_6L                       000000FD
_WRT2_OFF_6L                      000000FF
_WRT2_ON_6L                       000000FB
_WRT3_OFF_6L                      000000FF
_WRT3_ON_6L                       000000F7
_WRT4_OFF_6L                      000000FF
_WRT4_ON_6L                       000000EF
_WRT5_OFF_6L                      000000FF
_WRT5_ON_6L                       000000DF
_WRTB_OFF_6H                      000000FF
_WRTB_ON_6H                       000000BF
_WRTC_OFF_6H                      000000FF
_WRTC_ON_6H                       000000DF
_WRTD_OFF_6H                      000000FF
_WRTD_ON_6H                       0000007F
_XINST_OFF_4L                     000000BF
_XINST_ON_4L                      000000FF
__18F4685                         00000001

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

